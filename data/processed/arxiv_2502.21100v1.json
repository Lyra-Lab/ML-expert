{
  "id": "arxiv_2502.21100v1",
  "text": "AuthSim: Towards Authentic and Effective Safety-critical Scenario\nGeneration for Autonomous Driving Tests\nYukuan Yang1, Xucheng Lu2, Zhili Zhang1, Zepeng Wu1,3, Guoqi Li4, Lingzhong Meng1, Yunzhi Xue1\n1Institute of Software, Chinese Academy of Sciences, Beijing 100190, China.\n2School of Science, Beijing University of Posts and Telecommunications, Beijing 100876, China.\n3 University of Chinese Academy of Sciences, Beijing 101408, China.\n4 Institute of Automation, Chinese Academy of Sciences, Beijing 100190, China.\nAbstract—Generating adversarial safety-critical scenarios is\na pivotal method for testing autonomous driving systems, as it\nidentifies potential weaknesses and enhances system robustness\nand reliability. However, existing approaches predominantly em-\nphasize unrestricted collision scenarios, prompting non-player\ncharacter (NPC) vehicles to attack the ego vehicle indiscrimi-\nnately. These works overlook these scenarios’ authenticity, ratio-\nnality, and relevance, resulting in numerous extreme, contrived,\nand largely unrealistic collision events involving aggressive NPC\nvehicles. To rectify this issue, we propose a three-layer relative\nsafety region model, which partitions the area based on danger\nlevels and increases the likelihood of NPC vehicles entering\nrelative boundary regions. This model directs NPC vehicles to\nengage in adversarial actions within relatively safe boundary\nregions, thereby augmenting the scenarios’ authenticity. We\nintroduce AuthSim, a comprehensive platform for generating\nauthentic and effective safety-critical scenarios by integrating\nthe three-layer relative safety region model with reinforcement\nlearning. To our knowledge, this is the first attempt to address\nthe authenticity and effectiveness of autonomous driving system\ntest scenarios comprehensively. Extensive experiments demon-\nstrate that AuthSim outperforms existing methods in generating\neffective safety-critical scenarios. Notably, AuthSim achieves a\n5.25% improvement in average cut-in distance and a 27.12%\nenhancement in average collision interval time, while main-\ntaining higher efficiency in generating effective safety-critical\nscenarios compared to existing methods. This underscores its\nsignificant advantage in producing authentic scenarios over\ncurrent methodologies.\nI. INTRODUCTION\nOver the past decade, autonomous driving vehicles [1–\n3] have made significant strides, largely due to the rapid\ndevelopment and application of machine learning [4, 5].\nThese vehicles are anticipated to become the cornerstone\nof future transportation systems, offering enhancements in\nsafety, efficiency, intelligence, and environmental protection\n[6, 7]. Despite this progress, autonomous driving vehicles\nface substantial security threats due to the opaque nature\nand uncertain boundaries of intelligent systems [8]. These\nsafety concerns present a significant obstacle to the widespread\nadoption of autonomous driving technology.\nIn this context, testing the safety of autonomous driv-\ning vehicles becomes crucial [9]. On one hand, tests can\nquickly identify safety issues, facilitating rapid updates and\nyangyukuan@iscas.ac.cn (Y. Yang)\niterations of autonomous driving technology. On the other\nhand, testing and evaluating the maturity and safety of these\nvehicles are essential for determining their suitability for large-\nscale road deployment. Unlike the mechanical and dynamic\ntests conducted on traditional non-intelligent vehicles, the\ntests for autonomous driving vehicles focus primarily on their\nintelligent driving capabilities [10].\nAutonomous driving vehicle tests are typically conducted\nin two primary ways: test sites and simulations. Many coun-\ntries and companies are investing in the construction of au-\ntonomous driving test sites to facilitate research and develop-\nment. Notable examples include Mcity [11], Waymo’s Castle\n[12], GoMentum Station [13], the Singapore Autonomous\nVehicle Initiative [14], and CARIAD [15]. Although these\ntest sites offer a controlled environment for researchers and\ndevelopers to test and refine autonomous vehicle technology,\nthey have several potential limitations. These include a lack of\nreal-world scalability, limited real-world experience, high con-\nstruction and maintenance costs, safety concerns, and possible\nbiases in testing scenarios [16]. As an alternative, simulation\ntests address these drawbacks and provide a valuable tool for\nimproving and refining autonomous driving vehicles [17, 18].\nSimulation tests use virtual environments and computer simu-\nlations to evaluate and validate the performance and safety of\nautonomous driving systems. These simulations offer a con-\ntrolled and repeatable environment, enabling researchers and\ndevelopers to reproduce scenarios, customize tests, validate\nscalability, and identify and address issues more efficiently.\nGenerating safety-critical scenarios is essential for au-\ntonomous vehicle simulation tests [19]. However, due to the\nlow collision rate in real-world driving environments, identify-\ning and collecting these scenarios can be challenging [20, 21].\nConsequently, it is crucial to artificially generate safety-critical\nscenarios. There are three primary methods for generating\nthese scenarios: data-driven methods [22–25], knowledge-\nbased methods [26–29], and adversarial generation methods\n[30–34]. Data-driven methods sample real-world datasets, es-\ntimate scenario distributions and learn a generative model to\ncreate new scenarios. Knowledge-based methods incorporate\ndomain knowledge, such as traffic rules and physical laws, to\nefficiently generate scenarios. Adversarial generation methods\ncreate safety-critical scenarios by introducing aggressive Non-\nPlayer Character (NPC) vehicles into the driving environment.\nCompared to data-driven methods, which require extensive\ndata collection, and knowledge-based methods, which rely\n1\narXiv:2502.21100v1  [cs.RO]  28 Feb 2025\n\n\nheavily on expert experience, adversarial generation methods\noffer a cost-effective, efficient, and reliable means of identify-\ning corner cases.\nExisting adversarial generation methods are commonly\nused to create safety-critical scenarios. These methods estab-\nlish an objective function for scenario criticality evaluation and\niteratively optimize the parameters of NPC vehicles. However,\ncurrent research faces a major challenge: generating effective\nsafety-critical collision scenarios that maintain NPC vehicle\nadversarial rationality while ensuring the efficiency of scenario\ngeneration.\n(a)\nEgo vehicle\nNPC vehicle\n(b)\nFig. 1: Examples of extreme and unreasonable collision sce-\nnarios for autonomous driving tests. (a) NPC side attacks; (b)\nNPC dangerous lane changes.\nThe adversarial rationality issue arises from the design\nof the objective function, which encourages NPC vehicles to\nengage in any form of attack on the ego vehicle [35, 36].\nThis leads to extreme and deliberate behaviors, such as NPC\nvehicles actively colliding with ego vehicles from the side\n(Figure 1 (a)) or intentionally changing lanes within a very\nshort distance (Figure 1 (b)). These scenarios often violate\nphysical limits, making it impossible for the ego vehicle to\navoid a collision regardless of its actions. From a responsibility\nallocation perspective, even in the event of a collision, the\nmajority of responsibility typically lies with NPC vehicles\nrather than ego vehicles. These scenarios are widely present\nin current methods. On the one hand, while many collision\nscenarios are generated, a significant portion of these sce-\nnarios is extreme and ineffective, resulting in low efficiency\nin producing effective safety-critical scenarios. On the other\nhand, the rationality of adversarial scenarios is very low, and\nsuch scenarios are rarely observed in actual natural driving\nconditions, thus offering little value for autonomous driving\ntests.\nIn this research, we aim to address the issues of NPC\nvehicles’ adversarial rationality and scenario generation effi-\nciency in the context of generating adversarial scenarios for\nautonomous driving tests. To overcome these challenges, we\nintroduce a novel method for evaluating scenario criticality\nand an innovative optimization approach. Through extensive\nexperimentation, we demonstrate the efficacy of our proposed\nmethods. Our contributions can be summarized as follows:\n• We propose a novel method for evaluating scenario\ncriticality that incorporates a real-time three-layer relative\nsafety region model to ensure the authenticity and natu-\nralness of adversarial scenarios. Based on the different\nreaction times available to the ego vehicle, we model\nthe region in front of the ego vehicle in real-time as\nthe relative danger region, the relative boundary region,\nand the relative safety region. Scenario criticality is\ncalculated using the residence time, occupied area, and\nempirical probability values of NPC vehicles entering\nthese different regions.\n• We develop a comprehensive platform called AuthSim\nfor authentic and effective generation of safety-critical\nscenarios, which combines the three-layer relative safety\nregion model with reinforcement learning. We design the\nstate and behavior space of NPC vehicles and dynami-\ncally control them using reinforcement learning models.\nThe three-layer relative safety zone model is trained as a\nreward function to generate adversarial scenarios.\n• Extensive experiments have been conducted to verify\nthe efficiency and authenticity of the proposed Auth-\nSim framework in generating safety-critical scenarios.\nCompared to classic methods such as Naturalistic and\nAdversial Driving Environment (NADE), Time to Col-\nlision (TTC), Time to Brake (TTB), and Decelera-\ntion Rate to Avoid a Crash (DRAC), AuthSim demon-\nstrates marginally higher efficiency in generating effec-\ntive safety-critical scenarios while achieving significantly\nhigher authenticity. AuthSim produces scenarios with no-\ntably greater cut-in distances and longer collision time in-\ntervals, indicating substantial authenticity improvements\nin safety-critical scenario generation.\nThe paper is organized as follows: Section II provides an\noverview of recent works related to safety-critical scenario\ngeneration. Section III details the proposed three-layer relative\nsafety region model and the authentic scenario generation\nframework, AuthSim. Section IV presents the experimental\nresults and analysis of AuthSim compared to existing methods.\nFinally, Section V summarizes the paper and offers concluding\nremarks.\nII. RELATED WORKS\nAdversarial safety-critical scenario generation: Adver-\nsarial methods efficiently and cost-effectively generate safety-\ncritical test scenarios for autonomous driving, unlike data-\ndriven and knowledge-driven methods. However, current re-\nsearch often focuses on unrestricted collision scenarios, ne-\nglecting their authenticity, rationality, and significance for\nautonomous driving tests. NADE [30] establishes a naturalistic\nand adversarial driving environment for generating safety-\ncritical scenarios by collecting driving data from natural\ntraffic and employing importance sampling on specific ve-\nhicles to interact with ego vehicles, thereby enhancing the\nefficiency of safety-critical scenario generation. AV-FUZZER\n[35] generates autonomous driving safety-critical scenarios by\nperturbing NPC vehicle maneuvers and using a genetic algo-\nrithm to optimize these perturbations and define trajectories.\nMOSAT [36] constructs diverse and adversarial driving envi-\nronments to expose autonomous driving safety violations by\nusing atomic driving maneuvers, motif patterns, and a multi-\nobjective genetic algorithm. AdvSim [37] generates safety-\ncritical scenarios for LiDAR-based autonomous systems by\n2\n\n\nmodifying actors’ trajectories in a physically plausible way\nand updating the corresponding LiDAR sensor data. D2RL\n[38] trains NPC vehicles using dense deep-reinforcement\nlearning by refining Markov decision processes, removing\nnon-safety-critical states, and reconnecting critical ones to\nprioritize safety-critical scenarios. SDC-Prioritizer [39] in-\ntroduces two evolutionary methods, SO-SDC-Prioritizer and\nMO-SDC-Prioritizer, which utilize single-objective and multi-\nobjective genetic algorithms to prioritize test scenarios based\non diversity metrics without past execution results, thereby\nbalancing cost-effectiveness and test diversity. Similar works\ncan also be found in [40–42]. These studies mostly focus on\nenhancing the collision rate of generated scenarios. However,\nthey often overlook the authenticity of these scenarios, the\nallocation of accident responsibilities, and their relevance to\nautonomous driving tests. Recently, there has been increasing\nconcern regarding the authenticity of testing scenarios for\nautonomous driving vehicles. STRIVE [33] introduces an\ninnovative method utilizing a graph-based conditional varia-\ntional autoencoder (CVAE) to generate challenging scenarios\nfor autonomous driving planners automatically. However, this\nwork is only focused on the planner module of an autonomous\ndriving system, with no involvement in real scenario genera-\ntion for the entire autonomous driving system.\nIII. METHODS\nWe aim to generate authentic safety-critical scenarios for\nautonomous driving tests with high efficiency. Specifically,\nNPC vehicles take reasonable adversarial behaviors toward\nthe Ego vehicle leading to collisions with the Ego vehicle\nassuming primary responsibility. The efficiency is defined as\ngenerating as many valid adversarial scenarios as possible\nwithin the same number of tests. In this section, we will first\nelucidate the classic and widely utilized scenario criticality\nobjectives for adversarial scenario generation, including Time\nto Collision (TTC), Time to Brake (TTB), and Deceleration\nRate to Avoid a Crash (DRAC), which also serve as baselines\nin Section IV. Subsequently, we will expound upon the real-\ntime three-layer relative safety region model. Finally, we will\npresent the methodology for authentic safety-critical scenario\ngeneration, AuthSim, which integrates the three-layer relative\nsafety region model with reinforcement learning.\nA. Traditional scenario criticality objectives\nPrior to our work, three traditional criticality objectives\nhave been extensively employed in scenario generation: TTC\n[43], TTB [44], and DRAC [45]. These metrics have served\nas foundational benchmarks in the field of adversarial scenario\ngeneration for autonomous driving systems.\nTime to Collision (TTC) is a widely recognized safety-\nrelated metric that quantifies the time remaining until a colli-\nsion between the ego vehicle and NPC vehicles is expected to\noccur, given their current velocities and trajectories. Formally,\nTTC is defined as\nTTC =\n∆p\nvi −vi−1\n,\n(1)\nwhere ∆p represents the distance between the following\nvehicle and the leading vehicle, vi denotes the speed of the\nfollowing vehicle, and vi−1 denotes the speed of the leading\nvehicle. This metric is instrumental in assessing the immediacy\nof potential collisions and is crucial for the development and\nevaluation of autonomous driving safety systems.\nTime to Brake (TTB) represents the time required for the\nfollowing vehicle to decelerate at maximum deceleration to\nmatch the speed of the lead vehicle. Mathematically, it can be\nexpressed as\nTTB = TTC +\nvrel\n2aego,max\n,\n(2)\nwhere TTC is the time to collision metric defined in Equation\n1, vrel represents the relative speed between the following\nand leading vehicles, and aego,max denotes the maximum\ndeceleration that the ego vehicle can execute.\nThe Deceleration Rate to Avoid a Crash (DRAC) metric\nquantifies the deceleration required by the following vehicle to\nprevent a collision with the leading vehicle. A higher DRAC\nvalue signifies an increased risk of collision. If the DRAC\nmetric surpasses the maximum deceleration capability of the\nfollowing vehicle, deceleration alone will be inadequate to\navoid a collision. The DRAC is described as\nDRAC = (vi −vi−1)2\n2∆p\n,\n(3)\nwhere vi is the speed of the following vehicle and vi−1 is the\nspeed of the leading vehicle, and ∆p is the distance between\nthe following and the leading vehicles.\nB. Three-layer relative safety region model-based scenario\ncriticality objective\nThe Responsibility-Sensitive Safety (RSS) model, as out-\nlined in [46], defines longitudinal and lateral safety distances\nthat vehicles should uphold to enable prompt response, factor-\ning in reaction times, while preventing collisions. This model\nprescribes specific distances and recommends appropriate ma-\nneuvers for vehicles to avoid potential hazards. Expanding\nupon this framework, we have broadened the concept of\nsafety distances to encompass danger distances, boundary\ndistances, and safety distances between vehicles. Leveraging\nthese extended distance metrics, we propose a real-time three-\nlayer relative safety region model.\nFigure 2(a) illustrates the real-time relative longitudinal\ndanger distance. When an NPC vehicle enters the collision\ndanger distance relative to the ego vehicle, a collision becomes\ninevitable if the NPC vehicle continues in its current state,\nregardless of any emergency maneuvers executed by the ego\nvehicle. Assuming the ego vehicle is positioned at the origin\nof the coordinate system, with its front facing the positive\ndirection of the x-axis (longitudinal axis), and the NPC vehicle\ntraveling at its current speed, a collision will occur if the\ndistance between the vehicles is less than this critical distance,\neven if the ego vehicle applies maximum deceleration immedi-\nately, with zero reaction time. In this scenario, the longitudinal\n3\n\n\nNPC\nEgo\nNPC\nEgo\n,x danger\nd\n,\n,max\nx ego\ndece\nd\n−\n,\n,\nx npc curr\nd\n(a)\nNPC\nEgo\nNPC\nEgo\n,\n,\nx ego response\nd\n,\n,max\nx ego\ndece\nd\n−\n,x boundary\nd\n,\n,\nx npc curr\nd\n(b)\nNPC\nEgo\nNPC\nEgo\n,\n,\nx ego response\nd\n,\n,min\nx ego\ndece\nd\n−\n,\n,\nx npc curr\nd\n,x safe\nd\n(c)\nFig. 2: Illustration of longitudinal danger, boundary, and safety\ndistances between the ego and NPC vehicles: (a) Danger\ndistance; (b) Boundary distance; (c) Safety distance.\ndanger distance between the ego vehicle and the NPC vehicle\nalong the x-axis can be calculated as\ndx,danger =dx,ego,max,dece −dx,npc,curr\n= v2\nx,ego −v2\nx,npc\n2ax,ego,max,dece\n−vx,npc\nvx,ego −vx,npc\nax,ego,max,dece\n,\n(4)\nwhere dx,ego,max,dece represents the braking distance of the\nego vehicle in the x-axis direction under maximum deceler-\nation ax,ego,max,dece, while dx,npc,curr is the distance in the\nx-axis direction that the NPC vehicle travels within the ego\nbraking time at the current speed vx,npc. vx,ego refers to the\nspeed of the ego vehicle in the x-axis direction.\nSimilarly, we establish a real-time model for the relative\nlongitudinal boundary distance, incorporating reaction time\nand accident avoidance maneuvers. Figure 2(b) illustrates the\nconcept of the boundary distance, defined as the distance at\nwhich the ego vehicle, after a specified reaction time, engages\nin emergency braking at maximum deceleration, while the\nNPC vehicle continues traveling at its current speed, thereby\npreventing a collision. During the reaction time, the ego ve-\nhicle accelerates at maximum acceleration without perceiving\nany danger. Suppose the distance between the ego and NPC\nvehicles is less than this boundary distance and the NPC\nvehicle maintains a constant speed as per its current state.\nIn that case, the ego vehicle must initiate emergency braking\nwithin the specified response time to avert a collision. Thus,\nwe define the relative longitudinal boundary distance between\nthe ego and NPC vehicles in the x-axis direction as\ndx,boundary = dx,ego,response + dx,ego,max,dece −dx,npc,curr\n= vx,egoρ + 1\n2ax,ego,max,accelρ2\n+ (vx,ego + ax,ego,max,accelρ)2 −v2\nx,npc\n2ax,ego,max,dece\n−vx,npc\n\u0012\nρ + vx,ego + ax,ego,max,accelρ −vx,npc\nax,ego,max,dece\n\u0013\n,\n(5)\nwhere dx,ego,response and ax,ego,max,accel are the response\ndistance and maximum acceleration of the ego vehicle, re-\nspectively. ρ signifies the response time.\nFinally, the real-time relative longitudinal safety distance\nis illustrated in Figure 2(c). This model stipulates that the\nego vehicle begins reacting after a specified period and sub-\nsequently applies brakes at the minimum deceleration rate.\nMeanwhile, the NPC vehicle continues to travel at a consistent\nspeed, ensuring a collision-free scenario. Suppose the distance\nbetween the ego and NPC vehicles exceeds this threshold,\nand the NPC vehicle maintains its current speed based on\nprevailing conditions. In that case, a collision will be avoided\nas long as the ego vehicle initiates braking after a certain\nduration. Thus, the longitudinal safety distance between the\nego and NPC vehicles can be determined as follows:\ndx,safety = dx,ego,response + dx,ego,min,dece −dx,npc,curr\n= vx,egoρ + 1\n2ax,ego,max,accelρ2\n+ (vx,ego + ax,ego,max,accelρ)2 −v2\nx,npc\n2ax,ego,min,dece\n−vx,npc\n\u0012\nρ + vx,ego + ax,ego,max,accelρ −vx,npc\nax,ego,min,dece\n\u0013\n,\n(6)\nwhere dx,ego,min,dece represents the distance traveled by the\nego vehicle after the response time ρ with minimum deceler-\nation ax,ego,min,dece.\nConsidering that the y and x directions are consistent, the\nreal-time relative lateral danger, boundary, and safety distances\nin the y-axis direction are\ndy,danger = dy,ego,max,dece −dy,npc,curr,\ndy,boundary = dy,ego,response + dy,ego,max,dece\n−dy,npc,curr,\ndy,safety = dy,ego,response + dy,ego,min,dece −dy,npc,curr,\n(7)\nwhere dy,danger, dy,boundary, and dy,safety represent the real-\ntime relative lateral distances in the y-axis direction, corre-\nsponding to danger, boundary, and safety, respectively. These\ndistances are calculated analogously to the distances in the\nx-axis direction.\nBy integrating the various safety distances in both the x-\naxis and y-axis directions, we develop a real-time three-layer\n4\n\n\nrelative safety region model. As illustrated in Figure 3, this\nmodel comprises three distinct regions: the relative danger\nregion, the relative boundary region, and the relative safety\nregion.\n0\nx\ny\n,y danger\nd\n,y boundary\nd\n,y safe\nd\n,x safe\nd\n,x boundary\nd\n,x danger\nd\nEgo vehicle\nNPC vehicle\nRelative danger region\nRelative boundary region\nRelative safety region\nFig. 3: The three-layer relative safety region model.\nAfter implementing the real-time three-layer relative safety\nregion model, we integrate it into the criticality model for sce-\nnario evaluation. As depicted in Figure 4, the NPC vehicle tra-\nverses various regions—danger, boundary, and safety—during\nits maneuvers. These regions overlap with different areas, and\nthe NPC vehicle spends varying durations within them. It is\nevident that the larger the overlapping area between the NPC\nvehicle and the relative danger region, and the longer the NPC\nvehicle remains in this region, the greater the threat it poses to\nthe ego vehicle. Conversely, when the NPC vehicle is located\nin a relative safety region, it poses fewer threats to the ego\nvehicle.\n0\nRelative danger region Relative boundary region Relative safety region\nEgo vehicle\nNPC vehicle\nFig. 4: Different overlapping area and staying time of the NPC\nvehicle in different relative regions.\nIn addition to the factors mentioned above, such as over-\nlapping area and staying time, we also need to consider the\nprobability of the NPC vehicle appearing in different regions\nto closely resemble natural and realistic driving scenarios. If\nour focus is solely on generating collision scenarios, then\nwe only need to optimize the overlapping area and staying\ntime of the NPC vehicle in the relative danger region to be\nsufficiently large. However, this approach would only gener-\nate dangerous and extreme collision scenarios, such as lane\nchanges at extremely close distances that even human drivers\nwould struggle to avoid. These scenarios are relatively rare in\nreal-world driving situations and have limited significance for\ntesting ego vehicles. Conversely, if we prioritize lane changes\nwithin the relative safety region, the generated scenarios would\npose little threat to the ego vehicle and would hardly challenge\nautonomous vehicles. The ideal scenarios are boundary sce-\nnarios, where the NPC vehicle poses a safety threat to the\nego vehicle while exhibiting certain driving rationality. These\nscenarios occur more frequently in natural driving situations\nand can pose a significant threat to autonomous driving\nvehicles, forcing them to react and make correct decisions to\navoid collisions.\nTo generate optimal test scenarios that consider both the\nrationality of NPC vehicle behavior and the authenticity of\ncollisions, we propose incorporating the probability of NPC\nvehicles appearing in different regions into the assessment of\nscenario criticality. Empirically, during the driving process, the\nNPC vehicle is more likely to appear at the relative boundary\nand safety regions between the ego vehicle and the NPC\nvehicle, while the probability of it appearing in the high-risk\nrelative danger region is extremely low. As a result, the actual\ndistribution of NPC vehicles appearing in different regions\ncan be approximated as a bell-shaped curve (represented by\nthe blue dashed line in Figure 5). Using the accurate real\ndistribution would undoubtedly generate scenarios that closely\nresemble real-world driving environments. However, obtaining\nsuch fine-grained data, including real-time information such as\nthe speed of NPC vehicles and ego vehicles to calculate the\nsize of different regions, is challenging. Additionally, existing\ntraffic datasets rarely provide such detailed data. Acquiring\nthe real distribution of NPC vehicles in different regions\nwould require a large amount of traffic data, which is both\nlabor-intensive and expensive. Commonly, it is worth noting\nthat NPC vehicles are more likely to appear in the relative\nsafety region. If scenarios primarily consist of NPC vehicles\nappearing in the relative safety region, the ego vehicle would\nface fewer threats and make fewer mistakes. Considering\nthese limitations, it is necessary to estimate and modify the\ndistributions of NPC vehicles appearing in different regions\ncost-effectively and efficiently for generating safety-critical\nscenarios. In this approach, we simplify the probability of\nNPC vehicles appearing in different regions by assuming a\nuniform distribution. Furthermore, we intentionally reduce the\nlikelihood of NPC vehicles appearing in the relative safety\nregion while increasing the probability of their presence in\nthe relative boundary region. This strategic adjustment is\ndesigned to elevate the threat level posed to the ego vehicle\n(shown as the red dashed line in Figure 5). By employing this\nsimplified and adjusted distribution, we can generate safety-\ncritical scenarios while addressing the challenges associated\nwith obtaining precise real distribution data and providing low-\nlevel threats.\nBy utilizing the real-time three-layer relative safety region\nmodel and adjusting the estimation distribution of NPC ve-\nhicles across various regions, it becomes feasible to establish\nthe objective of scenario criticality. Figure 6 provides a visual\nrepresentation of an NPC vehicle, depicted as a rectangle,\ntraversing each region and remaining there for a specific du-\nration. Throughout the entire driving process, the overlapping\narea between the NPC rectangle and different regions results\nin a temporal curve. This integration of overlapping areas\nbetween vehicles and regions in the temporal dimension, along\n5\n\n\nProbability\nPosition\nRelative Danger\nRegion\nRelative Boundary\nRegion\nRelative Safety\nRegion\nReal Distribution\nModified Estimation Distribution\nFig. 5: Real and modified estimation distributions of NPC\nvehicles appearing in different regions.\n·\n·\n0\nt\ndanger\ns\n·\n·\nt\nt\n·\nboundary\ns\nsafe\ns\nRelative danger region\nRelative boundary region\nRelative safety region\nEgo vehicle\nNPC vehicle\nFig. 6: Overlapping area curves over the whole driving pro-\ncess.\nwith the probability of NPC vehicles appearing in different\nregions and the collision outcomes of the entire scenario,\nare combined to evaluate safety criticality. The real-time\nsafety criticality objective for scenario generation is defined\nas follows:\nJ(θ) =\nT\nX\nj=1\nN\nX\ni=1\n\u0012\nPdangerSi,j\ndanger\n+ PboundarySi,j\nboundary + PsafetySi,j\nsafety\n\u0013\n,\n(8)\nwhere T denotes the time steps of the scenario and N\nrepresents the number of NPC vehicles, θ is the parameter\nthat determines the actions of the NPC vehicles and the object\nto be optimized. The probabilities Pdanger, Pboundary, and\nPsafety indicate the likelihood of an NPC vehicle entering the\nregions of relative danger, boundary, and safety, respectively.\nThe variables Si,j\ndanger, Si,j\nboundary, and Si,j\nsafety represent the\nreal-time overlapping areas between the i-th NPC vehicle and\nthe regions of relative danger, boundary, and safety at the time\nstep j.\nThe scenario criticality objective based three-layer rela-\ntive safety region model is now established. Principally, by\npartitioning the area according to the degree of danger and\nincreasing the probability of NPC vehicles entering the relative\nboundary region, this approach enhances the rationality of\nNPC vehicles’ interactions with the ego vehicle. Consequently,\nit significantly reduces the probability of extreme and inten-\ntional collisions.\nC. Safety-critical scenario generation\nThe primary focus of generating safety-critical scenarios is\nto enhance and optimize the maneuvering strategies of NPC\nvehicles so that the attacking NPC can make authentic and\nrational actions when interacting with the ego vehicle. After\nobtaining the safety criticality objective defined in Equation\n8 that can guide vehicles to engage in more rational attack\nbehavior, it’s time to train the NPC vehicle’s maneuver policy\nand generate specific safety-critical scenarios.\nInitially, we integrate the ego vehicle into the simulation\nsystem by defining its start and end points, selecting the\nroad network, setting the scenario duration, determining the\nnumber of NDD vehicles, and randomly initializing all vehicle\npositions. The NDD vehicle behaviors by collecting data from\nnatural driving scenarios, aiming to mimic human driving\nbehavior under natural conditions closely [30].\nAfter scenario initialization, the whole workflow of the\nproposed safety-critical framework AuthSim is shown in Fig-\nure 7. The safety-critical scenario generation comprises several\ndistinct processes. Within the scenario execution and rule-\nbased reinforcement learning (RL) NPC switching phase, the\nsimulation system employs the RL model to retrieve vehicle\naction outputs, thereby simulating the scenario. Each simula-\ntion episode concludes upon detecting RL NPC vehicle switch-\ning, collisions, or the vehicles reaching their destinations. To\nexpedite the training process of the RL model, we establish\na dynamic updating mechanism for selecting and switching\nattacking NPC vehicles. We prioritize the vehicle within a\ncertain distance ahead of the ego vehicle that has a lower speed\nand presents collision risks for control by the RL model. In the\nabsence of such vehicles, we select the vehicle nearest to the\nego vehicle for RL control. Additionally, vehicles under RL\ncontrol are periodically switched according to fixed time in-\ntervals, adhering to the aforementioned selection criteria. This\nsetup ensures that in long-term scenarios, attacking vehicles\ncan continuously engage with the ego vehicle, allowing the\nRL model to undergo sustained learning. The states of the\nego vehicle, RL NPC, and NDD vehicles—including position,\nLane ID, speed, and other relevant data—are collected and\ninput into the RL model. Based on these collected states, the\nRL model outputs the action for the attacking NPC vehicle.\nSubsequently, a three-layer relative safety criticality reward is\ncalculated. Throughout the entire process, the state st, action\nat, reward rt at step t, and the state st+1 at step t + 1 in one\nepisode are combined into an experience buffer. This buffer\nis stored in memory for updating the parameters of the RL\nmodel.\nIn more detail, the AuthSim framework treats the gener-\nation of safety-critical scenarios as an optimization problem,\nmodeled as follows\nmin\nθ\n−J(θ),\ns.t. θ ∈Θ,\n(9)\n6\n\n\nRL Model\nPosition, Lane ID, \nSpeed\nState\nPosition, Lane ID,\nSpeed\nPosition, Lane ID,\nSpeed\nNDD\nEgo\nRL\nThree-layer Relative Safety Region Reward \nRL Model\nNDD\nEgo\nNDD\nScenarion Running & Rule-based RL NPC Switiching\nAction\nInput\nAction Execution\nParameter \nExtraction\nSwitch RL \nNPC Every \nFixed Steps\nOutptut\nReward \nCalculation\nInference\nTraining\nEpisode\nEnding\nJudgment\nMemory Storage\ns1,a1,r1,s2\ns2,a2,r2,s3\n...\nst,at,rt,st+1\n...\nCollision \nJudgment\nArriving at the \nDestination\nRL NPC\nSwitching\nNDD\nRL\nScenario/Episode Ending Judgment\nCollision\nDestination\nParameter Update\nSt\nSt+1\nat\nrt\nScenario\nEnding\nJudgment\nScenario \nData\nData Flow\nEpisode Ending\nScenario Ending\nFig. 7: Workflow of the safety-critical scenario generation framework AuthSim.\nwhere J(θ) is the objective of scenario criticality defined in\nEquation 8, and θ represents the parameters to be optimized\nand Θ encompasses all reasonable values that θ can assume.\nThe safety-critical scenario generation described in Equa-\ntion 9 constitutes a black-box optimization problem. Conse-\nquently, the optimization process cannot access the derivatives\nof the scenario criticality objective function. To overcome this\nchallenge, we employ reinforcement learning for safety-critical\nscenario generation. This approach enables decision-making\nby maximizing cumulative rewards through interactions with\nthe environment.\nHere we model the process of NPC vehicles attacking the\nego vehicle as a Markov Decision Process (MDP). The MDP\nis defined as M = ⟨S, A, P, R, γ⟩, where S represents the set\nof observed states of NPC and ego vehicles, A denotes the set\nof possible actions the attacking NPC vehicle can take, P is\nthe transition probability based on the NPC’s action, R is the\nreward function, and γ is the discount factor.\n• State. To guide the NPC vehicle in taking rational adver-\nsarial actions against the ego vehicle, it is crucial that the\nNPC can perceive the distance and speed relationships be-\ntween itself and the ego vehicle. Empirically, the danger,\nboundary, and safety distances of a vehicle in the y-axis\n(lateral) direction are typically minimal. For simplicity,\nwe set these distances as fixed small values and focus\non modeling the three-layer danger, boundary, and safety\ndistances along the x-axis (longitudinal). The observed\nstates consist of nine components: the relative danger\ndistance dx,danger defined in Equation 4, the relative\nboundary distance dx,boundary defined in Equation 5, the\nrelative safety distance dx,safety defined in Equation 6,\nthe NPC’s position (xNP C, yNP C), the indicator i to\nidentify whether the NPC and the ego vehicle are in the\nsame lane, the x−axis and y−axis distances dx,ego,NP C,\ndy,ego,NP C between the NPC vehicle and the ego vehicle,\nthe relative distance drel and velocity vrel between the\nNPC and the ego vehicle.\n• Action. To expedite the RL model training, we have\nconstrained the action space of the attacking NPC vehicle.\nThe attacking NPC vehicle controlled by the RL model\ncan take five actions: left turn, right turn, decelerate with\nmaximum acceleration, maintain a constant speed, and\naccelerate with maximum acceleration.\n• Reward. To solve the optimization problem define in\nEquation 9, we calculate the reward in time step t as\nrt =\nN\nX\ni=1\n\u0012\nPdangerSi,t\ndanger\n+ PboundarySi,t\nboundary + PsafetySi,t\nsafety\n\u0013\n.\n(10)\nIV. EXPERIMENT RESULTS\nThe proposed AuthSim framework for scenario generation\nis extensively evaluated to validate its effectiveness in en-\nhancing the efficiency and authenticity of scenario generation.\nComprehensive experiments are conducted using the Highway-\nenv simulator to assess the performance of the proposed\napproach. To ensure a consistent benchmark, the autonomous\ndriving system tested in this research employs the same\ndeep reinforcement learning (DRL) pre-trained model as [30]\nfor comparison. The specific configuration parameters of the\nexperiments are detailed in Table I.\nSimulator\nHighway-env\nax,ego,max,dece\n4 m/s2\nax,ego,max,accel\n2 m/s2\nax,ego,min,dece\n0.2 m/s2\nρ\n0.3 s\nTABLE I: Configuration parameters of our experiments.\n7\n\n\nThe RL agent for safety-critical scenario generation is\ntrained on a 3-lane highway over 20000 episodes. In each\nepisode, the positions and speeds of the NPC vehicles are\nrandomly initialized. The ego vehicle drives a fixed distance,\nand at set intervals, the attacking NPC vehicle controlled by\nthe RL agent is chosen from the NPC vehicles within a 75-\nmeter range of the ego vehicle. Other NPC vehicles follow the\ndriving patterns described in [30], adhering to the naturalistic\ndriving data (NDD).\nWe compare our AuthSim framework with both non-RL\nmethods (NADE) and RL methods (TTC, TTB, and DRAC).\nThe NADE method builds on the NDD method by randomly\nselecting the vehicle around the ego vehicle and increasing\nthe likelihood of the vehicle attacking the ego vehicle through\nimportance sampling, thereby enhancing the efficiency of\ngenerating critical test scenarios. The RL methods, including\nTTC, TTB, and DRAC, follow the same training and testing\nprocess as AuthSim to generate critical test scenarios, differing\nonly in the RL reward function. By comparing our proposed\nAuthSim framework with these benchmark methods, we can\nverify its advantages in generating safety-critical autonomous\ndriving test scenarios.\nA. Efficiency analysis\nThe purpose of testing autonomous driving vehicles is to\nidentify and correct their deficiencies in various scenarios.\nDuring testing, numerous scenarios arise that pose threats\nto the ego vehicle and result in collisions. However, not all\ncollision scenarios are meaningful for evaluating autonomous\ndriving. Many incidents involve the ego vehicle driving nor-\nmally while the NPC vehicle intentionally causes a collision.\nExamples include the NPC vehicle rear-ending the ego vehicle\nwithout sudden braking by the ego vehicle or intentionally\nhitting the side of the ego vehicle when it is driving normally.\nThese collisions are primarily the responsibility of the NPC\nvehicle and are unrelated to the ego vehicle’s driving behavior.\nSuch scenarios have little significance for testing the ego\nvehicle and do not contribute to improving its strategies.\nMethods, like NADE, TTC, TTB, and DRAC, do not re-\nstrict the NPC vehicle’s methods of attacking the ego vehicle,\noften encouraging the NPC vehicle to collide with the ego\nvehicle in various ways. Consequently, many scenarios involve\nthe NPC vehicle intentionally crashing into the ego vehicle,\nwhich are not useful for improving the ego vehicle’s driving\nstrategies. Although these scenarios involve collisions, they\nhold no practical significance for testing. We collectively refer\nto these as meaningless testing scenarios.\nThe AuthSim framework encourages NPC vehicles to enter\nthe safe boundary area of the ego vehicle by establishing a\nthree-layer relative safety region model and setting relevant\nreward functions in the reinforcement learning model. This ap-\nproach reduces the frequency of intentional rear-end and side\ncollisions with the ego vehicle, generating more meaningful\ntesting scenarios for evaluating ego vehicles.\nAs described in Figure 8, we classified the collision\nscenarios into four categories: (1) the NPC vehicle controlled\nby RL actively collides with the ego vehicle (represented by\nRL →ego), (2) the NPC vehicle controlled by NDD actively\ncollides with the ego vehicle (represented by NDD →ego),\n(3) the ego vehicle collides with the NPC vehicle controlled\nby RL (represented by ego →RL), and (4) the ego vehicle\ncollides with the NPC vehicle controlled by NDD (represented\nby ego →NDD). The first two are considered invalid\ncollision scenarios, while the latter two are considered valid\ncollision scenarios. We conducted statistical analyses on col-\nlision scenarios using the methods of NADE, TTC, TTB, and\nDRAC, respectively.\nFor each method, we generate a total of 1,000 scenarios.\nThe results present in Table II demonstrate that, while the total\nnumber of collision scenarios generated by our framework is\nnot the highest (with 287 collision scenarios, compared to\n290 generated by TTC and DRAC), our framework yields\nthe highest number of effective collision scenarios (with 270\neffective collisions, compared to 222 and 205 generated by\nTTC and DRAC, respectively). The proposed AuthSim frame-\nwork encounters a total of 287 collisions, of which 270 are\neffective collision scenarios. This results in a frequency of 27%\nfor generating effective collision scenarios and an 94.1% ratio\nof effective collision scenarios to total collisions. Among all\nevaluated methods, the TTC approach obtains the closest result\nto our AuthSim framework in terms of efficiency for gener-\nating safety-critical scenarios. Its effective collision scenario\ngeneration frequency stands at 22.2%, and the proportion of\neffective collision scenarios to total collisions is 76.6%. These\nvalues are 4.8% and 17.5% lower, respectively, compared\nto the performance of our proposed AuthSim framework.\nOther methods, including NADE, TTB, and DRAC, exhibit\nsignificant differences from our AuthSim Framework in terms\nof the frequency of generating effective collision scenarios\nand the proportion of effective collision scenarios to total\ncollisions.\nOverall, the proposed AuthSim framework has effectively\nguided the attack behavior of NPC vehicles by establishing\nthe three-layer relative safety region model, thereby reducing\nthe incidence of irrelevant scenarios in autonomous driving\ntests. Our approach has demonstrated a higher efficiency in\ngenerating effective safety-critical scenarios compared to exist-\ning methods. Additionally, we have significantly improved the\nratio of effective collision scenarios to total collision scenarios.\nThese enhancements enable the generation of more authentic\nsafety-critical scenarios within the same testing cycles and\nsubstantially reduce the time required to screen out invalid\ncollision scenarios.\nB. Authenticity validation\nOur objective is to eschew scenarios that are extreme,\ncontrived, and devoid of practical significance in the realm of\nautonomous driving. Instead, we aim to cultivate simulations\nthat are more authentic, natural, and reflective of the true\ncapabilities and limitations of autonomous driving vehicles. To\nanalyze the authenticity of safety-critical scenarios generated\nby the AuthSim framework, we focus on NPC lane-changing\nsafety-critical scenarios. This focus is driven by two main rea-\nsons. First, NPC lane-changing scenarios constitute the highest\n8\n\n\nEgo vehicle\nRL NPC vehicle\nNDD NPC vehicle\n(a)\n(b)\n(c)\n(d)\nFig. 8: Categories of 4-type collisions. (a) The RL NPC vehicle collides with the ego vehicle. (b) The NDD NPC vehicle\ncollides with the ego vehicle. (c) The ego vehicle collides with the RL NPC vehicle. (d) The ego vehicle collides with the\nNDD NPC vehicle.\nMethod\nRL→ego\nNDD→ego\nego→RL\nego→NDD\nInvalid collisions\nValid collisions\nAll collisions\nValid collisions/All collisions(%)\nValid collision/All tests(%)\nNADE\n/\n76\n/\n116\n76\n116\n192\n60.4%\n11.6%\nTTC\n49\n19\n206\n16\n68\n222\n290\n76.6%\n22.2%\nTTB\n72\n22\n153\n9\n94\n162\n256\n63.3%\n16.2%\nDRAC\n69\n16\n184\n21\n85\n205\n290\n70.7%\n20.5%\nAuthSim (ours)\n8\n9\n254\n16\n17\n270\n287\n94.1%\n27.0%\nTABLE II: Scenario efficiency comparison of different methods.\nproportion (>75%) of safety-critical scenarios generated by all\nmethods, as shown in Table III. Second, determining the time\nfor NPC vehicles to initiate attacks and the time left for ego\nvehicles to react in various other types of scenarios present\nsignificant challenges. However, in lane-changing scenarios,\nwe can utilize NPC vehicles crossing lane lines as the trigger\nfor launching attacks, facilitating an effective assessment of\nthe rationality of collision scenarios.\nMethod\nNPC lane-changing\nValid collision\nRatio\nNADE\n88\n116\n75.8%\nTTC\n180\n212\n84.9%\nTTB\n121\n155\n78.1%\nDRAC\n162\n200\n81.0%\nAuthsim\n232\n270\n85.9%\nTABLE III: The ratios of NPC lane-changing scenarios in\neffective collision scenarios.\ncut in\nd\n\ncut in\nt\n\ncollision\nt\nFig. 9: Evaluation of scenario authenticity.\nHere, empirically, we introduce two intuitive indicators\ndcut−in and tinterval to evaluate the authenticity of the sce-\nnarios. In the collision scenario depicted in Figure 9, tcut−in\ndenotes the moment when the vehicle initiates a lane change\nmaneuver and makes contact with the lane markings, while\ndcut−in indicates the distance between the NPC and the ego\nvehicles at the time tcut−in. tcollision represents the exact\nmoment when the collision occurs. Here, the time interval\ntinterval between the beginning of cutting-in and collision is\ntinterval = tcollision −tcut−in.\n(11)\nEvidently, a smaller value of tinterval or dcut−in indicates\na higher degree of scenario extremeness and deliberateness,\nwhile simultaneously lowering the authenticity and naturalness\nof the scenario. Consequently, both the cutting-in distance,\ndcut−in, and the time interval, tinterval, can serve as valuable\nindicators for evaluating the authenticity and naturalness of\nthe safety-critical scenarios.\nMethod\ndcut−in(m)/Improvement\ntinterval(s)/Improvement\nNADE\n5.73/23.76%\n0.53/8.16%\nTTC (Baseline)\n4.63/-\n0.49/-\nTTB\n5.57/20.30%\n0.63/28.57%\nDRAC\n6.86/48.16%\n0.59/20.41%\nAuthsim (ours)\n7.22/55.94%\n0.75/53.06%\nTABLE IV: Scenario authenticity comparisons of different\nmethods.\nWe collect and analyze NPC lane-changing collision sce-\nnario data generated by various methods, including NADE,\nTTC, TTB, DRAC, and our proposed AuthSim. We calculate\nthe mean values of the cut-in distance (dcut−in) and the\ncollision time interval (tinterval), with the results presented in\nTable IV. AuthSim achieves the best results in our study. Using\nthe most commonly employed TTC indicator as a baseline,\nwe observe a 55.94% improvement in average cut-in distance\nand a 53.06% improvement in average collision interval time.\nCompared to other methods like NADE, TTB, and DRAC,\n9\n\n\n0\n2\n4\n6\n8\n10\n12\n14\n16\n18\n20\n22\n24\n26\n28\n30\ndcut\nin/m\n0.00\n0.03\n0.06\n0.09\n0.12\n0.15\n0.18\n0.21\n0.24\n0.27\n0.30\nDensity\n(a)\n0\n2\n4\n6\n8\n10\n12\n14\n16\n18\n20\n22\n24\n26\n28\n30\ndcut\nin/m\n0.00\n0.03\n0.06\n0.09\n0.12\n0.15\n0.18\n0.21\n0.24\n0.27\n0.30\nDensity\n(b)\n0\n2\n4\n6\n8\n10\n12\n14\n16\n18\n20\n22\n24\n26\n28\n30\ndcut\nin/m\n0.00\n0.03\n0.06\n0.09\n0.12\n0.15\n0.18\n0.21\n0.24\n0.27\n0.30\nDensity\n(c)\n0\n2\n4\n6\n8\n10\n12\n14\n16\n18\n20\n22\n24\n26\n28\n30\ndcut\nin/m\n0.00\n0.03\n0.06\n0.09\n0.12\n0.15\n0.18\n0.21\n0.24\n0.27\n0.30\nDensity\n(d)\n0\n2\n4\n6\n8\n10\n12\n14\n16\n18\n20\n22\n24\n26\n28\n30\ndcut\nin/m\n0.00\n0.03\n0.06\n0.09\n0.12\n0.15\n0.18\n0.21\n0.24\n0.27\n0.30\nDensity\n(e)\nFig. 10: Distributions of the cut-in distance of safety-critical scenarios generated by different methods. (a) NADE; (b) TTC;\n(c) TTB; (d) DRAC; (e) AuthSim.\nour method also shows significant enhancements. For instance,\nwhen compared to the top-performing DRAC method, our\nmethod demonstrates improvements of 5.25% in the average\ncut-in distance and 27.12% in the average collision interval\ntime. It is worth noting that the 27.12% improvement in colli-\nsion interval time is substantial, demonstrating the significant\nadvantage of AuthSim in generating authentic scenarios.\nThe distributions of cut-in distance and collision time\ninterval are illustrated in Figures 10 and 11, respectively.\nRegarding cut-in distance, compared to NADE, TTC, and\nTTB, AuthSim significantly reduces the probability of NPC\nvehicles cutting in at short distances and decreases the number\nof extreme cut-in scenarios. Additionally, compared to DRAC,\nour approach also reduces the probability of NPC vehicles\ncutting in at shorter distances and demonstrates a favorable\ndistribution of long cut-in distances for NPC vehicles. Our\nadvantage is particularly evident in terms of collision time\nintervals. As shown in Figure 11, our method significantly\nreduces the distribution of collision intervals in lower-value\nareas compared to other methods. Furthermore, our approach\nresults in longer collision intervals.\nIn summary, compared to existing methods, AuthSim\nachieves significantly higher cut-in distances and longer col-\nlision time intervals. This indicates that when NPC vehicles\ninitiate attacks on ego vehicles, the ego vehicles have more\ntime to react, thereby significantly reducing the extremity of\nthe attacks. This enhancement contributes to generating safety-\ncritical scenarios more authentically and naturally.\nV. CONCLUSION\nScenario-based autonomous driving tests are crucial for\nensuring vehicle safety. Traditional evaluation metrics, like\nTTC, do not restrict NPC vehicles, leading to extreme and\ndeliberate collision scenarios. These scenarios often result in\nunavoidable collisions attributed to NPC vehicles, offering\nlittle testing significance for autonomous vehicles. To address\nthis, we propose a three-layer relative safety region model for\nevaluating scenario criticality. This model guides NPC vehicles\nto enter more ego vehicle safety boundaries, improving the ra-\ntionality and authenticity of safety-critical scenarios. We have\ndeveloped a framework called AuthSim, combining the three-\nlayer relative safety region model and reinforcement learning,\nand conducted extensive comparisons with classical methods\nsuch as NADE, TTC, TTB, and DRAC. Experimental results\nshow that our method significantly increases cut-in distance\nand collision interval time for NPC vehicles while maintaining\nhigher efficiency in generating effective safety-critical sce-\nnarios. This provides ego vehicles with more reaction time\nand reduces the frequency of extreme collision scenarios.\nIn summary, our method offers a more effective adversarial\nscenario generation approach for autonomous driving tests,\nenhancing safety development. Looking forward, we aim to\nfurther improve the complexity and optimization efficiency\nof autonomous driving adversarial scenarios to accelerate the\napplication of autonomous driving.\nREFERENCES\n[1] Ekim Yurtsever, Jacob Lambert, Alexander Carballo,\nand Kazuya Takeda. A survey of autonomous driving:\nCommon practices and emerging technologies.\nIEEE\naccess, 8:58443–58469, 2020.\n[2] Jianyu\nChen,\nShengbo\nEben\nLi,\nand\nMasayoshi\nTomizuka.\nInterpretable end-to-end urban autonomous\ndriving with latent deep reinforcement learning. IEEE\nTransactions\non\nIntelligent\nTransportation\nSystems,\n23(6):5068–5078, 2021.\n10\n\n\n0.0\n0.2\n0.4\n0.6\n0.8\n1.0\n1.2\n1.4\n1.6\n1.8\n2.0\n2.2\n2.4\n2.6\n2.8\n3.0\ntinterval/s\n0.00\n0.05\n0.10\n0.15\n0.20\n0.25\n0.30\n0.35\n0.40\n0.45\n0.50\nDensity\n(a)\n0.0\n0.2\n0.4\n0.6\n0.8\n1.0\n1.2\n1.4\n1.6\n1.8\n2.0\n2.2\n2.4\n2.6\n2.8\n3.0\ntinterval/s\n0.00\n0.05\n0.10\n0.15\n0.20\n0.25\n0.30\n0.35\n0.40\n0.45\n0.50\nDensity\n(b)\n0.0\n0.2\n0.4\n0.6\n0.8\n1.0\n1.2\n1.4\n1.6\n1.8\n2.0\n2.2\n2.4\n2.6\n2.8\n3.0\ntinterval/s\n0.00\n0.05\n0.10\n0.15\n0.20\n0.25\n0.30\n0.35\n0.40\n0.45\n0.50\nDensity\n(c)\n0.0\n0.2\n0.4\n0.6\n0.8\n1.0\n1.2\n1.4\n1.6\n1.8\n2.0\n2.2\n2.4\n2.6\n2.8\n3.0\ntinterval/s\n0.00\n0.05\n0.10\n0.15\n0.20\n0.25\n0.30\n0.35\n0.40\n0.45\n0.50\nDensity\n(d)\n0.0\n0.2\n0.4\n0.6\n0.8\n1.0\n1.2\n1.4\n1.6\n1.8\n2.0\n2.2\n2.4\n2.6\n2.8\n3.0\ntinterval/s\n0.00\n0.05\n0.10\n0.15\n0.20\n0.25\n0.30\n0.35\n0.40\n0.45\n0.50\nDensity\n(e)\nFig. 11: Distributions of the collision time interval of safety-critical scenarios generated by different methods. (a) NADE; (b)\nTTC; (c) TTB; (d) DRAC; (e) AuthSim.\n[3] Gurkirt Singh, Stephen Akrigg, Manuele Di Maio,\nValentina Fontana, Reza Javanmard Alitappeh, Salman\nKhan, Suman Saha, Kossar Jeddisaravi, Farzad Yousefi,\nJacob Culley, et al.\nRoad: The road event awareness\ndataset for autonomous driving. IEEE transactions on\npattern analysis and machine intelligence, 45(1):1036–\n1054, 2022.\n[4] Michael I Jordan and Tom M Mitchell.\nMachine\nlearning: Trends, perspectives, and prospects. Science,\n349(6245):255–260, 2015.\n[5] Yann LeCun, Yoshua Bengio, and Geoffrey Hinton. Deep\nlearning. nature, 521(7553):436–444, 2015.\n[6] Zhihan Lv and Wenlong Shang. Impacts of intelligent\ntransportation systems on energy conservation and emis-\nsion reduction of transport systems: A comprehensive\nreview.\nGreen Technologies and Sustainability, page\n100002, 2022.\n[7] Rateb Jabbar, Eya Dhib, Ahmed Ben Said, Moez\nKrichen, Noora Fetais, Esmat Zaidan, and Kamel\nBarkaoui. Blockchain technology for intelligent trans-\nportation systems: A systematic literature review. IEEE\nAccess, 10:20995–21031, 2022.\n[8] Zhiyang Ju, Hui Zhang, Xiang Li, Xiaoguang Chen,\nJinpeng Han, and Manzhi Yang.\nA survey on attack\ndetection and resilience for connected and automated\nvehicles: From vehicle dynamics and control perspective.\nIEEE Transactions on Intelligent Vehicles, 2022.\n[9] Jun Wang, Li Zhang, Yanjun Huang, Jian Zhao, and\nFrancesco Bella. Safety of autonomous vehicles. Journal\nof advanced transportation, 2020:1–13, 2020.\n[10] Rasmus Adler, Patrik Feth, and Daniel Schneider. Safety\nengineering for autonomous vehicles. In 2016 46th An-\nnual IEEE/IFIP International Conference on Dependable\nSystems and Networks Workshop (DSN-W), pages 200–\n205. IEEE, 2016.\n[11] Yiqun Dong, Yuanxin Zhong, Wenbo Yu, Minghan Zhu,\nPingping Lu, Yeyang Fang, Jiajun Hong, and Huei Peng.\nMcity data collection for automated vehicles study. arXiv\npreprint arXiv:1912.06258, 2019.\n[12] Shaoshan Liu, Bo Yu, Jie Tang, and Qi Zhu. Towards\nfully intelligent transportation through infrastructure-\nvehicle cooperative autonomous driving: Challenges and\nopportunities. In 2021 58th ACM/IEEE Design Automa-\ntion Conference (DAC), pages 1323–1326. IEEE, 2021.\n[13] Akansel Cosgun, Lichao Ma, Jimmy Chiu, Jiawei Huang,\nMahmut Demir, Alexandre Miranda Anon, Thang Lian,\nHasan Tafish, and Samir Al-Stouhi. Towards full auto-\nmated drive in urban environments: A demonstration in\ngomentum station, california. In 2017 IEEE Intelligent\nVehicles Symposium (IV), pages 1811–1818. IEEE, 2017.\n[14] Si Ying Tan and Araz Taeihagh. Adaptive governance\nof autonomous vehicles: Accelerating the adoption of\ndisruptive technologies in singapore. Government Infor-\nmation Quarterly, 38(2):101546, 2021.\n[15] Yuxin Zhang, Wei Quan, Yang Gao, Pengfei Li, Haiwei\nKuang, Fumin Zhao, Xinyi Du, Ruilin Yu, Luyao Wang,\nand Jianfeng Qiao. Aerial dataset for china congested\nhighway & expressway and its potential applications in\nautomated driving systems development. 2022.\n[16] Alessio Gambi, Marc Mueller, and Gordon Fraser. Au-\ntomatically testing self-driving cars with search-based\nprocedural content generation. In Proceedings of the 28th\nACM SIGSOFT International Symposium on Software\nTesting and Analysis, pages 318–328, 2019.\n[17] Alexey Dosovitskiy, German Ros, Felipe Codevilla, An-\ntonio Lopez, and Vladlen Koltun. Carla: An open urban\n11\n\n\ndriving simulator. In Conference on robot learning, pages\n1–16. PMLR, 2017.\n[18] Guodong Rong, Byung Hyun Shin, Hadi Tabatabaee,\nQiang Lu, Steve Lemke, M¯artin¸ˇs Moˇzeiko, Eric Boise,\nGeehoon Uhm, Mark Gerow, Shalin Mehta, et al. Lgsvl\nsimulator: A high fidelity simulator for autonomous\ndriving.\nIn 2020 IEEE 23rd International conference\non intelligent transportation systems (ITSC), pages 1–6.\nIEEE, 2020.\n[19] Wenhao Ding, Baiming Chen, Minjun Xu, and Ding\nZhao.\nLearning to collide: An adaptive safety-critical\nscenarios generating method. In 2020 IEEE/RSJ Inter-\nnational Conference on Intelligent Robots and Systems\n(IROS), pages 2243–2250. IEEE, 2020.\n[20] Qunying Song, Kaige Tan, Per Runeson, and Stefan\nPersson.\nCritical scenario identification for realistic\ntesting of autonomous driving systems. Software Quality\nJournal, 31(2):441–469, Jun 2023.\n[21] Osama Makansi, ¨Ozg¨un Cicek, Yassine Marrakchi, and\nThomas Brox.\nOn exposing the challenging long tail\nin future prediction of traffic actors.\nIn Proceedings\nof the IEEE/CVF International Conference on Computer\nVision, pages 13147–13157, 2021.\n[22] Christian Knies and Frank Diermeyer. Data-driven test\nscenario generation for cooperative maneuver planning\non highways. Applied Sciences, 10(22):8154, 2020.\n[23] Wenhao Ding, Mengdi Xu, and Ding Zhao.\nCmts: A\nconditional multiple trajectory synthesizer for generating\nsafety-critical driving scenarios. In 2020 IEEE Interna-\ntional Conference on Robotics and Automation (ICRA),\npages 4314–4321. IEEE, 2020.\n[24] Simon Suo, Sebastian Regalado, Sergio Casas, and\nRaquel Urtasun. Trafficsim: Learning to simulate realistic\nmulti-agent behaviors. In Proceedings of the IEEE/CVF\nConference on Computer Vision and Pattern Recognition,\npages 10400–10409, 2021.\n[25] Yun Chen, Frieda Rong, Shivam Duggal, Shenlong\nWang, Xinchen Yan, Sivabalan Manivasagam, Shangjie\nXue, Ersin Yumer, and Raquel Urtasun. Geosim: Realis-\ntic video simulation via geometry-aware composition for\nself-driving. In Proceedings of the IEEE/CVF conference\non computer vision and pattern recognition, pages 7230–\n7240, 2021.\n[26] Daniel J Fremont, Edward Kim, Yash Vardhan Pant,\nSanjit A Seshia, Atul Acharya, Xantha Bruso, Paul Wells,\nSteve Lemke, Qiang Lu, and Shalin Mehta.\nFormal\nscenario-based testing of autonomous vehicles: From\nsimulation to the real world. In 2020 IEEE 23rd Interna-\ntional Conference on Intelligent Transportation Systems\n(ITSC), pages 1–8. IEEE, 2020.\n[27] Xiao Wang, Hanna Krasowski, and Matthias Althoff.\nCommonroad-rl: A configurable reinforcement learning\nenvironment for motion planning of autonomous vehi-\ncles. In 2021 IEEE International Intelligent Transporta-\ntion Systems Conference (ITSC), pages 466–472. IEEE,\n2021.\n[28] Daniel McDuff, Yale Song, Jiyoung Lee, Vibhav Vineet,\nSai Vemprala, Nicholas Alexander Gyde, Hadi Salman,\nShuang Ma, Kwanghoon Sohn, and Ashish Kapoor.\nCausalcity: Complex simulations with agency for causal\ndiscovery and reasoning.\nIn Conference on Causal\nLearning and Reasoning, pages 559–575. PMLR, 2022.\n[29] Luca Giamattei, Antonio Guerriero, Roberto Pietran-\ntuono, and Stefano Russo.\nCausality-driven testing of\nautonomous driving systems. ACM Trans. Softw. Eng.\nMethodol., 33(3), 2024.\n[30] Shuo Feng, Xintao Yan, Haowei Sun, Yiheng Feng, and\nHenry X Liu.\nIntelligent driving intelligence test for\nautonomous vehicles with naturalistic and adversarial\nenvironment. Nature communications, 12(1):748, 2021.\n[31] Baiming Chen, Xiang Chen, Qiong Wu, and Liang Li.\nAdversarial evaluation of autonomous vehicles in lane-\nchange scenarios.\nIEEE Transactions on Intelligent\nTransportation Systems, 23(8):10333–10342, 2021.\n[32] Mark Koren, Ahmed Nassar, and Mykel J Kochenderfer.\nFinding failures in high-fidelity simulation using adaptive\nstress testing and the backward algorithm.\nIn 2021\nIEEE/RSJ International Conference on Intelligent Robots\nand Systems (IROS), pages 5944–5949. IEEE, 2021.\n[33] Davis Rempe, Jonah Philion, Leonidas J Guibas, Sanja\nFidler, and Or Litany. Generating useful accident-prone\ndriving scenarios via a learned traffic prior. In Proceed-\nings of the IEEE/CVF Conference on Computer Vision\nand Pattern Recognition, pages 17305–17315, 2022.\n[34] Matteo Biagiola and Paolo Tonella.\nBoundary state\ngeneration for testing and improvement of autonomous\ndriving systems. IEEE Transactions on Software Engi-\nneering, pages 1–14, 2024.\n[35] Guanpeng Li, Yiran Li, Saurabh Jha, Timothy Tsai,\nMichael Sullivan, Siva Kumar Sastry Hari, Zbigniew\nKalbarczyk, and Ravishankar Iyer. Av-fuzzer: Finding\nsafety violations in autonomous driving systems. In 2020\nIEEE 31st international symposium on software reliabil-\nity engineering (ISSRE), pages 25–36. IEEE, 2020.\n[36] Haoxiang Tian, Yan Jiang, Guoquan Wu, Jiren Yan, Jun\nWei, Wei Chen, Shuo Li, and Dan Ye. Mosat: Finding\nsafety violations of autonomous driving systems using\nmulti-objective genetic algorithm. In Proceedings of the\n30th ACM Joint European Software Engineering Con-\nference and Symposium on the Foundations of Software\nEngineering, pages 94–106, 2022.\n[37] Jingkang Wang, Ava Pun, James Tu, Sivabalan Mani-\nvasagam, Abbas Sadat, Sergio Casas, Mengye Ren, and\nRaquel Urtasun. Advsim: Generating safety-critical sce-\nnarios for self-driving vehicles. In Proceedings of the\nIEEE/CVF Conference on Computer Vision and Pattern\nRecognition, pages 9909–9918, 2021.\n[38] Shuo Feng, Haowei Sun, Xintao Yan, Haojie Zhu,\nZhengxia Zou, Shengyin Shen, and Henry X Liu.\nDense reinforcement learning for safety validation of\nautonomous vehicles. Nature, 615(7953):620–627, 2023.\n[39] Christian Birchler, Sajad Khatiri, Pouria Derakhshanfar,\nSebastiano Panichella, and Annibale Panichella. Single\nand multi-objective test cases prioritization for self-\ndriving cars in virtual environments. ACM Transactions\non Software Engineering and Methodology, 32(2):1–30,\n12\n\n\n2023.\n[40] Yasasa Abeysirigoonawardena, Florian Shkurti, and Gre-\ngory Dudek. Generating adversarial driving scenarios in\nhigh-fidelity simulators. In 2019 International Confer-\nence on Robotics and Automation (ICRA), pages 8271–\n8277. IEEE, 2019.\n[41] Ao Li, Shitao Chen, Liting Sun, Nanning Zheng,\nMasayoshi Tomizuka, and Wei Zhan.\nScegene: Bio-\ninspired traffic scenario generation for autonomous driv-\ning testing. IEEE Transactions on Intelligent Transporta-\ntion Systems, 23(9):14859–14874, 2021.\n[42] Haoxiang Tian, Guoquan Wu, Jiren Yan, Yan Jiang, Jun\nWei, Wei Chen, Shuo Li, and Dan Ye.\nGenerating\ncritical test scenarios for autonomous driving systems\nvia influential behavior patterns. In Proceedings of the\n37th IEEE/ACM International Conference on Automated\nSoftware Engineering, pages 1–12, 2022.\n[43] John C Hayward. Near miss determination through use\nof a scale of danger. 1972.\n[44] Jorg Hillenbrand, Kristian Kroschel, and Volker Schmid.\nSituation assessment algorithm for a collision prevention\nassistant.\nIn IEEE Proceedings. Intelligent Vehicles\nSymposium, 2005., pages 459–465. IEEE, 2005.\n[45] Yingshuai Li, Jian Lu, and Kuisheng Xu.\nCrash risk\nprediction model of lane-change behavior on approaching\nintersections. Discrete Dynamics in Nature and Society,\n2017:1–12, 08 2017.\n[46] Shai Shalev-Shwartz, Shaked Shammah, and Amnon\nShashua. On a formal model of safe and scalable self-\ndriving cars. ArXiv, abs/1708.06374, 2017.\n13\n\n\n",
  "metadata": {
    "source_file": "dataset/pdfs/arxiv_2502.21100v1.pdf",
    "total_pages": 13,
    "title": "AuthSim: Towards Authentic and Effective Safety-critical Scenario Generation for Autonomous Driving Tests",
    "authors": [
      "Yukuan Yang",
      "Xucheng Lu",
      "Zhili Zhang",
      "Zepeng Wu",
      "Guoqi Li",
      "Lingzhong Meng",
      "Yunzhi Xue"
    ],
    "abstract": "Generating adversarial safety-critical scenarios is a pivotal method for\ntesting autonomous driving systems, as it identifies potential weaknesses and\nenhances system robustness and reliability. However, existing approaches\npredominantly emphasize unrestricted collision scenarios, prompting non-player\ncharacter (NPC) vehicles to attack the ego vehicle indiscriminately. These\nworks overlook these scenarios' authenticity, rationality, and relevance,\nresulting in numerous extreme, contrived, and largely unrealistic collision\nevents involving aggressive NPC vehicles. To rectify this issue, we propose a\nthree-layer relative safety region model, which partitions the area based on\ndanger levels and increases the likelihood of NPC vehicles entering relative\nboundary regions. This model directs NPC vehicles to engage in adversarial\nactions within relatively safe boundary regions, thereby augmenting the\nscenarios' authenticity. We introduce AuthSim, a comprehensive platform for\ngenerating authentic and effective safety-critical scenarios by integrating the\nthree-layer relative safety region model with reinforcement learning. To our\nknowledge, this is the first attempt to address the authenticity and\neffectiveness of autonomous driving system test scenarios comprehensively.\nExtensive experiments demonstrate that AuthSim outperforms existing methods in\ngenerating effective safety-critical scenarios. Notably, AuthSim achieves a\n5.25% improvement in average cut-in distance and a 27.12% enhancement in\naverage collision interval time, while maintaining higher efficiency in\ngenerating effective safety-critical scenarios compared to existing methods.\nThis underscores its significant advantage in producing authentic scenarios\nover current methodologies.",
    "published_date": "2025-02-28",
    "source": "arxiv"
  }
}