{
  "id": "arxiv_2502.20996v1",
  "text": "1\nThis work has been submitted to the IEEE for possible publication.\nCopyright may be transferred without notice, after which this version may no longer be accessible.\nTowards Specialized Wireless Networks Using an\nML-Driven Radio Interface\nKamil Szczech, Maksymilian Wojnar, Katarzyna Kosek-Szott, Krzysztof Rusek, Szymon Szott, Dileepa\nMarasinghe, Nandana Rajatheva, Richard Combes, Francesc Wilhelmi, Anders Jonsson, and Boris Bellalta\nAbstract—Future wireless networks will need to support di-\nverse applications (such as extended reality), scenarios (such as\nfully automated industries), and technological advances (such\nas terahertz communications). Current wireless networks are\ndesigned to perform adequately across multiple scenarios so they\nlack the adaptability needed for specific use cases. Therefore,\nmeeting the stringent requirements of next-generation applica-\ntions incorporating technology advances and operating in novel\nscenarios will necessitate wireless specialized networks which we\nrefer to as SpecNets. These networks, equipped with cognitive\ncapabilities, dynamically adapt to the unique demands of each\napplication, e.g., by automatically selecting and configuring\nnetwork mechanisms. An enabler of SpecNets are the recent\nadvances in artificial intelligence and machine learning (AI/ML),\nwhich allow to continuously learn and react to changing re-\nquirements and scenarios. By integrating AI/ML functionalities,\nSpecNets will fully leverage the concept of AI/ML-defined radios\n(MLDRs) that are able to autonomously establish their own\ncommunication protocols by acquiring contextual information\nand dynamically adapting to it. In this paper, we introduce\nSpecNets and explain how MLDR interfaces enable this concept.\nWe present three illustrative use cases for wireless local area\nnetworks (WLANs): bespoke industrial networks, traffic-aware\nrobust THz links, and coexisting networks. Finally, we showcase\nSpecNets’ benefits in the industrial use case by introducing a\nlightweight, fast-converging ML agent based on multi-armed\nbandits (MABs). This agent dynamically optimizes channel access\nto meet varying performance needs: high throughput, low delay,\nor fair access. Results demonstrate significant gains over IEEE\n802.11, highlighting the system’s autonomous adaptability across\ndiverse scenarios.\nIndex Terms—Artificial intelligence, machine learning, rein-\nforcement learning, wireless networks.\nI. INTRODUCTION\nW\nIRELESS networks are a cornerstone of our fully\nconnected digital society. By enabling connectivity for\npeople, machines, robots, and other objects with communi-\ncation interfaces, wireless networks not only transform how\nwe work, produce, learn, and entertain but also influence the\ntrajectory of human evolution. In the coming years, we will\nwitness the widespread adoption of extended reality (XR) and\nKamil Szczech, Maksymilian Wojnar, Katarzyna Kosek-Szott, Krzysztof\nRusek, and Szymon Szott are with the AGH University of Krakow, Poland,\ne-mail: szymon.szottagh.edu.pl\nDileepa Marasinghe and Nandana Rajatheva are with University of Oulu,\nFinland.\nRichard Combes is with CentraleSup´elec, France.\nFrancesc Wilhelmi, Anders Jonsson, and Boris Bellalta are with Universitat\nPompeu Fabra, Barcelona, Spain.\nvirtual reality (VR) technologies, the advancement of the In-\nternet of things (IoT) alongside autonomous robots (terrestrial\nand aerial), fully automated industries, smart manufacturing\nplants, and intelligent infrastructures and environments, to\nname just a few emerging applications and technological\nbreakthroughs [1].\nTo support the diverse applications, scenarios, and tech-\nnological\nadvances\noutlined\nabove,\ntraditional\nwireless\napproaches—relying on general-purpose solutions with incre-\nmental updates to address varying needs—prove costly and\ninefficient. These systems often incorporate complex technolo-\ngies and mechanisms governed by static parameters, rules, and\nprotocols. Although designed to perform adequately across\nmultiple scenarios, they lack the adaptability needed to fully\noptimize performance for specific use cases. Meeting the strin-\ngent requirements of next-generation applications in through-\nput, latency, reliability, connectivity, and power efficiency will\nnecessitate wireless specialized networks (SpecNets). These\nnetworks, equipped with cognitive capabilities, can dynami-\ncally adapt to the unique demands of each application, e.g., by\nallocating appropriate resources or automatically selecting and\nconfiguring network mechanisms. This paper explores Spec-\nNets as a critical evolution beyond general-purpose networks,\nenabling devices to autonomously (i.e., without the need for\nhighly specialized and trained staff to manually adapt network\nconfigurations) tailor their behavior to meet the exacting needs\nof emerging applications.\nA critical enabler for the development of SpecNets are the\nrecent advances in artificial intelligence and machine learning\n(AI/ML) which allow to process data differently than current\napproaches by extracting useful patterns from complex data.\nThis new information (e.g., based on new processed informa-\ntion coming from the network or even from other sources such\nas cameras or sensors) provides networks with more sophis-\nticated capabilities such as cognition. Indeed, artificial intelli-\ngence mirrors the ‘human cognitive cycle’, comprising stages\nof data acquisition, knowledge extraction, reasoning, and\naction, ultimately establishing causal relationships between\nactions and outcomes. Within this cycle, ML models play a\npivotal role by extracting patterns and insights from data and\nencapsulating them in a “learned from experience” function.\nTherefore, AI/ML solutions offer the necessary capabilities to\nallow SpecNets to continuously learn and react to changing\nrequirements and scenarios in real-time. By integrating AI/ML\nfunctionalities, as outlined in [2], [3], SpecNets will fully\narXiv:2502.20996v1  [cs.NI]  28 Feb 2025\n\n\n2\nFig. 1: Conceptual MLDR architecture [2]\nleverage the concept of AI/ML-defined radios (MLDRs) that\nare able to autonomously establish their own communication\nprotocols by acquiring contextual information and dynamically\nadapting to it.\nIn this paper, our main contribution is the introduction\nof wireless SpecNets and explaining how MLDR interfaces\nenable this concept. After a review of related research on\nAI-native specialized wireless networks (Section III), we next\npresent three illustrative use cases of SpecNets in Section IV:\n(i) bespoke industrial networks,\n(ii) traffic-aware robust THz links,\n(iii) coexisting networks.\nFor each use case, we show how MLDRs exploit their learning\nabilities to meet the unique challenges and relevant require-\nments. Next, we provide an initial evaluation of the potential of\nSpecNets to improve network performance. Although MLDR-\nbased SpecNets are a universal concept that applies to any\ntype of technology, we showcase the potential of our solution\nwithin the domain of IEEE 802.11 technology (aka Wi-Fi).\nSpecifically, in Section V, we consider industrial networks\nand show a lightweight, rapidly converging ML agent based\non multi-armed bandits (MABs). The agent dynamically learns\nand drives access to the channel to meet different performance\nneeds (high throughput, low delay, or fairness in channel\naccess), i.e., the same agent can achieve diverse goals. The\nimplementation and simulations are conducted with ns-3, using\nns3-ai [4] to establish a communication interface between the\nsimulator and the ML agent. The results reveal significant\nimprovements in both latency and throughput compared to\ncurrent IEEE 802.11, showing the system’s autonomous adapt-\nability across diverse requirements and scenarios. Finally, we\nconclude the paper and outline future work in Section VI.\nII. AI/ML-DEFINED RADIOS (MLDRS)\nAn MLDR natively supports AI/ML-based optimization\nand decision-making in its communication functions (such as\ndata transmission and reception, channel access and frame\nexchange, and radio resource management). With such fea-\ntures, an AI/ML-defined radio is expected to improve the\nefficiency of any required communication (e.g., exchange of\nAI metadata among different network devices), reduce existing\noverheads, and make better use of resources. In addition, such\nan interface will enable more efficient transmitter and receiver\nimplementations and higher flexibility in diverse and changing\nscenarios.\nFrom an architectural standpoint, MLDRs diverge from\ntraditional systems that are optimized for specific and pre-\ndefined firmwares. MLDRs should be designed around or at\nleast incorporate ML accelerators to enable rapid ML model\ninference. Additionally, if on-device training is required, addi-\ntional storage and computational resources are needed to avoid\ncompromising transmit/receive (TX/RX) functionalities. Fi-\nnally, regarding the design of MLDRs, although fully flexible\narchitectures theoretically offer the advantage of supporting\ncontinuously evolving AI/ML models, it is more probable\nthat we will see circuits optimized to efficiently execute only\nspecific types of ML models. However, this specialization may\nlimit the ability of the radio to quickly adapt to emerging\nML models. Figure 1 illustrates the modular concept of an\nMLDR, wherein ML agents and models govern the radio\nprocessing resources and radio frequency (RF) hardware, the\nframe exchange between the transmitter and the receiver, and\nthe signals exchanged over the air.\nBefore MLDRs become a reality, performance gains must\nbe consistently observed. In particular, MLDRs should also be\nevaluated considering their adaptability to different situations,\nwhich means they will have to provide the required service\nlevels in many more situations than nowadays, with few to no\nexceptions. Therefore, to evaluate an AI/ML-driven radio, in\naddition to raw performance, we have to consider aspects such\nas training time and generalization capabilities to different\nsituations.\nMLDRs need to perform regular model exchanges, deploy-\nment, and retraining to update the ML models in place. This, in\nturn, requires additional infrastructure and processes to be held\nboth in the radio itself (e.g., low-cost model inference) and\nin cloud/edge equipment (e.g., data storage, model training,\ndistributed learning orchestration). Moreover, considering that\ndata is the fuel for applying ML, a huge amount of ML data,\nincluding not only training data but also ML model data and\nmetadata, must be exchanged throughout different parts of the\nnetwork.\nIn this paper, we envision that the configuration of an\nMLDR is governed by an agent, which implements logical\nfunctionalities for running dynamically instantiated AI oper-\nations, according to the required pipeline for each use case\nand scenario; in a real network, the ML part could be hosted\n\n\n3\nat the AP or a centralized network controller communicating\nwith the AP. In particular, the agent must be able to update its\nstate based on network performance metrics, such as aggregate\nthroughput or mean latency, thereby requiring to collect net-\nwork measurements. Then, the agent might select the network\nparameter values and send them back to the MLDR, adhering\nto the standard reinforcement learning (RL) framework. The\nretrieval of network measurements and exchange of commands\ncan occur periodically, within intervals that we refer to as\ncontrol periods. Apart from that, to support the interaction\nwith other agents, a coexistence module is envisioned, which\nwould allow, for instance, running distributed ML optimization\n(e.g., federated learning).\nIII. AI-NATIVE WIRELESS NETWORKING: CURRENT\nVIEWS\nIn this section, we summarize current views to realize AI-\nnative networking by enabling AI/ML-defined radios, focusing\neither on its conceptual approach or individual functionalities.\nFor the individual functionalities, we focus on link-layer\nprotocols, and the use of ML agents able to build them. Finally,\nwe provide some input on the actual ML strategies able to\npower them.\nA. A Conceptual Approach\nThe use of ML in the realm of communications has greatly\nprogressed in the last few years, and the vision of how to\nrealize such an integration has continuously evolved since\nthen. Initial efforts in industry and standardization led to on-\ntop ML implementations, where ML operations were designed\nto support the existing network infrastructure and functionali-\nties [5], [6]. Such an integration was conceived as ML overlays\ninteracting with network components (e.g., to get information\nor give commands) through existing or slightly new high-level\ninterfaces. Today, AI-native solutions are being envisioned to\nbring ML operations as an intrinsic component of network\noperations and standards [7], [8]. The Open Radio Access Net-\nwork (O-RAN) interoperability initiative for cellular networks\nalso considers AI/ML workflows [9], although this approach\nis rather an example of AI/ML-driven control than AI/ML-\nradio. Moreover, the sudden irruption of Generative AI (GAI)\nand large language models (LLMs) has redefined the way of\nthinking in the sector [10].\nAn exemplary conceptual approach is proposed in [11],\nwhere the authors describe a native AI-based air interface\nenvisioned for 6G. Their primary focus is on AI-driven MAC\nfunctions, including protocol learning, which enables tailoring\ndata link layer signaling to specific network deployments and\nneeds (e.g., reduced signaling overhead and energy consump-\ntion in the case of sporadic transmissions in sensor networks).\nFurthermore, Park et al. [12] categorize ML-driven MAC\nprotocols into three levels. Level 1 comprises multi-agent deep\nreinforcement learning (DRL)-based protocols, which are task-\noriented but consider task knowledge as a black box. Level 2\ncomprises neural network-oriented symbolic protocols [13],\nwhich provide interpretable MAC operation and allow direct\nprotocol adjustment. Finally, level 3 comprises language-\noriented semantic protocols using both large language and gen-\nerative models. The authors conclude that each approach has\nits disadvantages. Level 1 protocols struggle with computing\nefficiency (over-parameterized neural networks, high compu-\ntation/communication/memory costs), management flexibility,\ngeneralization, black-box-like operation. Level 2 protocols\nare not well suited for non-stationary task environments and\nchanging requirements since in such cases they need neural\nnetwork re-training. Finally, level 3 protocols tend to have\nlarge computation overheads and experience high latency\nduring execution.\nAs shown above, the conceptual design of AI-native wire-\nless networking is still in its infancy and requires additional\nconsiderations. However, some important challenges on the\npath towards MLDRs have already been identified and are\ngradually being addressed by the researchers. In the follow-\ning, we present state-of-the-art AI-native wireless link-layer\nprotocols as examples.\nB. AI-native MAC protocols\nSeveral approaches to building and implementing AI-native\nwireless MAC protocols have been proposed in the literature.\nMost typically, the authors propose selecting ML agent actions\nbased on a predefined set of MAC functions or modules (e.g.,\nselect the value of a parameter among a predefined list of\npossible values) in order to build customized MAC protocols\ntailored to particular network scenarios.\nKeshtiarast et al. [14] propose an ML framework for wire-\nless MAC protocols tailored to individual application needs.1\nThey implement a proximity policy optimization algorithm\n(a type of DRL following the actor-critic approach), which\nenables adding, removing, and modifying protocol features\nbased on interactions with the network environment. The au-\nthors assume that the MAC policy is shared among all nodes.\nThe agent adjusts its behavior by selecting actions based\non an array of IEEE 802.11ac MAC functions (e.g., carrier\nsensing, back-off, request to send and clear to send (RTS/CTS)\nmechanism) and their parameters (e.g., back-off type, slot time\nlength) considering environment characteristics (e.g., traffic\npatterns, number of stations). The proposed method is shown\nto obtain higher throughput and lower latency compared to\nthe legacy 802.11ac MAC protocol in static deployments.\nHowever, some of the assumptions seem unrealistic, e.g., the\nfully observable environment.\nIn [15], the authors propose a general framework based on\nDRL for the design and evaluation of network protocols. As\nan example, the 802.11 MAC protocol is divided into a set\nof parametric modules (RTS/CTS, back-off, fragmentation)\nwhich then serve as an input to the DRL agent. The resulting\nDeepMAC mechanism was shown to outperform legacy dis-\ntributed coordination function (DCF) in terms of throughput.\nAdditionally, the authors have noticed several challenges in\nbuilding customized MAC protocols, among which, unreliable\nMAC protocol performance seems most crucial. In DeepMAC\n1Publicly available implementation: https://gitlab.com/navid-keshtiarast/\nRec mac.\n\n\n4\ndesign, the authors assume that the acknowledgments are han-\ndled by upper-layer protocols, which, however, may negatively\nimpact, e.g., the performance of TCP, which could mistaken\npoor channel conditions with network congestion.\nA partly similar RL-based approach is proposed in [16].\nA new AI-MAC employs ML to adapt to changing network\nconditions, avoid interference, optimize channel access, and\nprovide deterministic delay in Wi-Fi networks. The proposed\nframework is based on the centralized training and decentral-\nized execution paradigm. Each AI-MAC station contains two\nML agents responsible for rate control and channel access.\nBoth agents are orchestrated by a global device agent and work\nasynchronously. In addition, QoS requirements are monitored\nto optimize AI-MAC operation for real-time traffic. AI-MAC\nwas tested against 802.11ax and 802.11be in three different\nscenarios (home, office, shopping mall) and was shown to\nobtain lower jitter and latency in each scenario.\nThe presented examples constitute an important step to-\nwards MLDRs and AI-native MAC protocol design. They\nprovide useful insights for future developments and confirm\nthat MLDR reasoning and learning capabilities can be obtained\nwith the use of AI/ML agents to support the required SpecNets\ncapabilities. Importantly, in case of dynamic SpecNets envi-\nronments, the collaboration of multiple agents will be required,\nas we discuss next.\nC. Multi-agent Learning Systems\nA defining characteristic of wireless networking is the need\nfor distributed, multi-agent learning algorithms. Multi-player\nbandit models [17] are a particularly relevant tool for analyzing\nscenarios in which agents must collaboratively identify opti-\nmal transmission strategies (e.g., distributed channel access)\nwhile optimizing performance. Recent advancements [18],\n[19] propose algorithms tailored to different levels of agent\ninteraction—whether information exchange is permitted and\nwhether agents can dynamically join or leave the system—\noffering performance guarantees. However, even in basic set-\ntings, optimal algorithms remain elusive [20], and it is unclear\nif distributed learning can achieve the same convergence speed\nas centralized learning, especially for competitive settings\nwhere agents are set to learn selfishly [21]. When agents are\nable to exchange information, MLDR interfaces can utilize\njoint learning strategies, such as federated learning, to enhance\ncollaboration.\nMulti-agent learning problems in wireless networking of-\nten feature inherent structures (e.g., combinatorial structures\nfor resource allocation [22], uni-modal structures for link\nadaptation and rate selection [23], and graphical structures\nfor routing [24]) that must be exploited to derive feasible\nsolutions. Furthermore, these problems involve navigating a\ntrade-off between learning speed and computational com-\nplexity [25], as nodes may have limited processing power\nand time for decision-making. Bridging the gap between\ntheoretical insights and practical implementations requires\ncontinued research to develop more efficient algorithms, robust\nperformance evaluations, and scalable architectures for AI-\ndriven future communication networks.\nSpecNet\nMassive\ncommunication\nLow\nlatency\nHigh throughput\nFig. 2: The SpecNet triangle for bespoke industrial networks.\nOperators specify their requirements as a point within this\ntriangle, thereby distributing the importance of each of the\nthree conflicting requirements.\nThe inherent structures described above imply that several\nprocesses have to be optimized separately during operation.\nIn this setting, we foresee that hierarchical RL will play an\nimportant role in the trade-off between learning speed and\ncomputational complexity. In hierarchical RL, a learning agent\ncan decide which process to optimize next, and the agent then\nfocuses exclusively on this process until a given termination\ncondition is satisfied. During optimization of an individual\nprocess, the agent can ignore all the features associated with\nother structures, significantly simplifying learning.\nIV. USE CASES: REQUIREMENTS, TECHNOLOGIES, AND\nKPIS\nIn this section, we discuss the three use cases that showcase\nthe usability of SpecNets: bespoke industrial networks, robust\nhigh-speed (THz) links, and competing networks. Each use\ncase shows different areas where the application of MLDRs\nprovides performance gains.\nA. Bespoke Industrial Networks\n1) Motivation: Stand-alone wireless industrial networks\nare typically task-oriented, where the emphasis is on the\noptimization of a specific goal [26]. Therefore, such networks\nshould be flexible in their configuration to meet the needs\nof the main applications, hence the term bespoke networking.\nThe underlying goal can be formulated, e.g., as achieving high\nthroughput, low latency, or assuring channel access fairness.2\nEach of these goals requires a different set of functionalities\nand parameters from the network. In addition, a bespoke\nnetwork’s specific goals may evolve over time, and both the\nenvironment and the network themselves may vary quickly\n(e.g., topology changes, equipment upgrades, mobility of the\nmachinery). Therefore, here the task of SpecNets is to adapt\nthe network to operator requirements, i.e., following the prin-\nciples of intent-based networking [27]. The arising simplicity\n2These are only examples and other metrics can be considered, e.g., a low\nlatency percentile could be also indicative of reliability.\n\n\n5\nTABLE I: Key features and KPIs of the three main SpecNets services and corresponding RL learning objectives.\nSpecNet service\nNo. of users\nThroughput\nLatency\nRL objective\nHigh throughput\n1-50\nMaximum\nNo requirements\nMaximize throughput\nLow latency\n1-10\nLow\nBelow threshold\nMinimize latency\nMassive communication\n>100\nLow\nNo requirements\nMaximize channel access fairness\nand flexibility of network configuration could significantly\nreduce maintenance costs and open the way for innovative\nindustry applications.\n2) Description: We assume that the operator of an indus-\ntrial network formulates their requirements as a point on the\n“SpecNet triangle” (Figure 2). Table I shows example require-\nments for the extreme corners of the triangle (although these\nrequirements can change depending on the technology in place\nand the type of deployment). These performance limits can\nvary over time (due to changes in traffic, utilization patterns,\nchanges in topology, equipment, etc.) and such changes should\nbe automatically captured. Here, AI/ML could be again be\nused, leading to new ideas.\nGiven the multi-objective nature of the problem, the network\noperator specifies the preferences for the three objectives (high\nthroughput, low latency, massive communications). Then, by\nmapping specific preferences into SpecNet triangle points\n(which correspond to a bijection of the Pareto front), one\ncan easily visualize the objective space (Figure 3). Then,\nthese preferences are communicated to a controller running\nthe network’s SpecNet agent, which needs to interpret the\npreference and translate it into achieving network performance\nmetrics. For numerical optimization, assume that the triangle is\na simplex in the objective space where each corner corresponds\nto a single objective. Then, mixed preferences correspond to\nthe points inside the triangle. Formally, the triangle is a unit\nsimplex in the objectives’ space. The distances to the corners\ndetermine the weight of the particular objective, according to\nthe following implicit formula\n(wt −1)2 + w2\nl + w2\nf = d2\nt\nw2\nt + (wl −1)2 + w2\nf = d2\nl\nw2\nt + w2\nl + (wf −1)2 = d2\nf\nwt + wl + wf = 1,\n(1)\nwhere dt, dl and df are the distances mapped to the ex-\nact coordinates wt, wl, wf. This formula guarantees that the\nweights are positive, they add up to one and every weight is\nin the range [0, 1]. Furthermore, this formulation can be the\nfoundation of multi-criteria optimization. This proposal aims\nto keep the perception of distance as a weighting factor, while\nforcing the points to be inside the simplex. This makes the\n3D coordinates of the points a proper set of weights for their\nlinear scalarization, which is the most popular scalarization\nfunction [28] for combing multiple criteria into a single\nnumerical value. Here we rely on the fact that there are\nthre aspects of SpecNet. Given the constraint that the set of\npredefined weights must add up to one, we have only two\ndegrees of freedom that can be visualized on the plane as\ntriangle. Network preferences can be specified similarly to\ncolor specification on a color triangle [29].\nt\nl\nf\ndt\ndl\ndf\nwf\nwl\nwt\nP\nFig. 3: Unit simplex as a triangle in the SpecNets objectives’\nspace.\n3) Related Work: Task-oriented networks, i.e., machine-\ntype communication and industrial IoT (IIoT), are studied\nin [30]–[32]. In these examples, the task-oriented networks\nprovide support for different kinds of mission-critical applica-\ntions, e.g., public safety, industrial automation, asset tracking,\nhealthcare, and robotics. Achieving these goals poses a signif-\nicant challenge from the wireless networking perspective, due\nto the networks’ stringent requirements for high reliability, low\nlatency, and availability, as well as the support of a massive\nnumber of ubiquitous connections.\nThe adoption of IEEE 802.11 for industrial delay-sensitive\nwireless control and monitoring applications is surveyed in\n[33]. The authors show that contention-based protocols are\neasy to implement and operate satisfactorily in case of a light\nnetwork load. However, contention-free protocols (TDMA-,\npolling-, and token-based) may be required to support delay-\nsensitive applications. Unfortunately, such protocols are harder\nto implement, especially in heterogeneous environments.\nMeanwhile, Wi-Fi is evolving towards reliability thanks to\nmechanisms such as OFDMA, TWT, shared TXOP, and multi-\nAP coordination [34]. Independently, some research papers\nresort to ML to meet the goals of task-oriented networking.\nAboubakar et al. [35] use different ML algorithms (k-nearest\nneighbors, random forest, decision tree, multilayer perceptron)\nto optimize IEEE 802.15.4 MAC parameter settings according\nto network characteristics and traffic state to improve end-to-\nend delay. Savaglio et al. [36] propose an energy-preserving\nMAC protocol for wireless sensor networks. The proposed\nsolution is based on light Q-learning, which adjusts the duty\ncycle of the sleep and awake periods of the sensor nodes\n\n\n6\nso that energy is saved without worsening the packed de-\nlivery ratio. Kherbache et al. [37] survey RL-based TDMA\nscheduling in IIoT, which improves adaptability and efficiency\ncompared to conventional scheduling mechanisms. In the\nsurveyed articles, single-channel and multi-channel approaches\nare analyzed, which typically concentrate either on minimizing\nenergy consumption (e.g., wasted in case of collisions) while\nensuring satisfactory throughput or delay-sensitive communi-\ncations. The most commonly used RL methods are Q-learning\nand DRL. Apart from ML, deterministic MAC operation is\nalso proposed for industrial sensor networks, e.g., Farag et\nal. [38] propose stealing time slots assigned to periodic non-\ncritical traffic by aperiodic time-critical traffic. Raza et al.\n[39] propose a similar approach with a central controller.\nIn case of asynchronous emergency communications, regular\ntransmissions are stopped or a transmission opportunity on a\nseparate control channel is requested.\nIn summary, the presented articles show that bespoke indus-\ntrial networks require dedicated MAC solutions, which can be\nsupported by ML. These papers also confirm that different\ntypes of networks have varying quality of service require-\nments. Therefore, it is required a general solution that adapts\nto the currently addressed task in a specific environment.\nB. Data-driven Waveforms for THz Links\n1) Motivation: Next-generation wireless XR applications\nwill demand high throughput (e.g., hundreds of Mbps), ultra-\nlow latency (under 1 ms), and exceptional reliability (deter-\nministic delay with minimal packet loss). Meeting these strin-\ngent requirements calls for dynamic adjustments in both link\nand physical layer protocols, aligning them with the specific\ntraffic characteristics, application performance demands, and\nenvironmental conditions. On the technology side, sub-THz\nand THz bands are particularly promising for these specific\ntasks. Higher frequencies in the sub-THz/THz range offer high\nbandwidth, enabling high-throughput communication links,\nso higher reliability can be achieved by employing more\nredundancy with abundant bandwidth. However, challenges\ninclude high path loss and limited dispersion, requiring precise\ndirectional beam-forming for robust links, while at the link\nlevel, increasing hardware impairments due to high frequency\nand wider bandwidth, requires meticulous physical layer de-\nsign.\nTherefore, a key challenge in establishing robust THz links\nis resilient waveform design against hardware impairments,\nwhich are more pronounced in these frequencies. Increased\nphase noise, which arises when synthesizing THz frequencies\nby up-conversion using practical oscillators and inefficient\npower amplifiers, are two main impairments. Utilizing AI/ML\nmethods to tackle these challenges enables the use of data-\ndriven, model-based techniques. Furthermore, the use of a\ndata-aided design allows for the use of more realistic models\nfor impairments rather than relying on less accurate models\nthat simplify the problems for the sake of tractability and\nblock-based optimization in conventional designs. Although\nthe ML-driven solutions offer significant performance gains,\nthe dynamic selection of solutions for varying demands of\ndifferent tasks remains challenging since these solutions are\nspecialized for the trained conditions, usually representing a\nsubset of operating ranges for a task, hence lacking general-\nization power.\n2) Description: The main aim of employing the sub-THz\nband is to achieve higher throughput by utilizing a wider band-\nwidth while ensuring reliability under varying requirements\nand conditions. In the MLDR approach, this is tackled in three\nfronts. First, to ensure the performance of data-driven wave-\nforms across a wide range of conditions, generalization aspects\nwill be explored. For example, generalizability can be incor-\nporated in utilized hardware models during the design/training\nphase of the waveforms. Next, a method for dynamic selection\nof the data-driven waveforms based on the requirements and\nconditions is explored. Finally, to guarantee performance using\nML-driven solutions, a monitoring mechanism that observes\nthe performance to trigger a reselection of a better waveform\nwhen required or even a retraining phase, if possible, will\nbe explored. In terms of KPIs, the main KPI is the achievable\ndata rate (R) with a given bandwidth. To ensure reliability, the\nblock error rate (BLER) needs to be quantified, while spectral\nefficiency (SE), as defined in (2), is another KPI worth looking\nat. The SE is calculated as,\nSE = (1 −BLER)R\nBWeff\n(2)\nand R is the data rate given by,\nR = rMρ\nTs\n(3)\nwhere r, is the code rate, M is the number of symbols in a\nblock, ρ is the fraction of useful resources utilized for data\nand Ts is the symbol duration.\n3) Related Work: Design of physical layer processing tai-\nlored for sub-THz under the prominent hardware impairment\nof PN is reported in [40], introducing a PN-robust analytical\nconstellation design named Polar-QAM. However, the PN-\nrobustness is achieved at the expense of an increased peak-\nto-average power ratio (PAPR). An ML-driven constellation\ndesign constrained under a PAPR limit has been introduced\nin [41]. The system is modeled as a differentiable end-to-\nend system and optimized for binary cross-entropy between\ntransmit bits and their soft estimates at the receiver using\nback-propagation facilitated by the ML framework. Extending\nthis to single-carrier waveform optimization by incorporating\nthe transmit and receiver filters under PN while delivering\nlow PAPR under a given ACLR for a certain bandwidth is\nexplored in [42]. Employing PN-aware demapping rules as\nwell as an NN at the receiver as the de-mapper shows the\npotential of learned transceivers with increased PN-robustness\nwhile delivering low PAPR boosting BLER performance and\nspectral efficiency. Preliminary testing of the feasibility of the\naforementioned ML-driven solutions in real sub-THz hardware\nis reported in [43], which demonstrates satisfactory error\nvector magnitude (EVM) and decoding performance with re-\nduced PAPR, showcasing the practical usability of the learned\nsolutions.\n\n\n7\nC. Competing Networks in Accord\n1) Motivation: Wireless networking in unlicensed bands\ninvolves nearby networks (belonging to the same administrator\nor not) competing for the same spectrum. To ensure fair access,\nregulatory entities have established basic rules, including the\nuse of the listen before talk (LBT) mechanism, and explicit\nlimits on transmission power to reduce interference, as well\nas on the maximum allowed transmission durations. Once\nthese requirements are met, wireless stations have signifi-\ncant flexibility in their configurations. They can select their\noperating channel, determine channel width, use single or\nmultiple channels concurrently, adjust transmission power, and\nchoose whether to deliver energy in all directions or focus it\ntoward specific directions. This flexibility leads to a vast array\nof possible configurations and complex interactions between\ncoexisting networks in frequency, time, and space. Those\ninteractions may lead to a plethora of effects in the wireless\ndomain, leading to poor performance if the parameters of each\nnetwork are not carefully adjusted. Given the high complexity\nof the resource allocation problem in competing wireless\nnetworks—where the variability across deployments is huge—\ndesigning a one-fits-all solution becomes a challenging task.\n2) Description: To address the problems that arise from\ncompetition in coexisting wireless networks, solutions ranging\nfrom decentralized to centralized approaches can be consid-\nered:\n• Decentralized/Distributed: First, fully decentralized so-\nlutions include mechanisms that operate based on only\nlocal information and without any communication among\ncompeting devices. This is the case of the current channel\naccess protocols in place, such as the DCF in Wi-\nFi, which aims to mitigate concurrent channel accesses\nby multiple devices through randomness. In multi-BSS\nsettings, decentralized solutions are optimal only if the\noptimization of local objectives leads to the optimization\nof the whole network (in game theory terms, a Pareto\noptimal solution). However, this is typically not the case\nin real networks, where devices may aim at transmitting\nas much as possible and under the highest possible quality\n(e.g., using higher transmit power to achieve higher\nSNR), but the caused interference generates a negative\nimpact on neighboring devices.\n• Cooperative: Another type of solution is based on the\nexistence of cooperation, or some sort of coordination,\namong competing devices. Accordingly, the involved de-\nvices are able to exchange information (e.g., configuration\ncapabilities, performance experienced, reward signals) or\ncommands, which are integrated into their configuring\nprocedure and expected to achieve a better collective\nperformance objective (e.g., by enabling new transmis-\nsion possibilities for efficient spectrum usage through\nspatial reuse, coordinated beam-forming, or bandwidth\nsharing). Cooperative solutions, however, require addi-\ntional capabilities to infer neighboring capabilities and\ngoals, or even explicit inter-device communication (thus\nadditional overheads). In both cases, cooperation may be\nunfeasible in current implementations, especially among\nindependently operated wireless networks.\n• Centralized: Finally, centralized solutions allow a net-\nwork manager (or authorized entity) to decide the whole\nnetwork configuration, thanks to a comprehensive view\nof the network. Centralized solutions can lead to optimal\nglobal performance while enforcing fairness, but at the\nsame time require significant signaling and monitoring\noverheads and scale poorly due to the increased com-\nplexity associated with it (i.e., the configuration space\nincreases exponentially with the number of devices).\nMoreover, centralized solutions require the agreement\nand onboarding of the different coexisting networks,\nwhich is today unfeasible in most of the current Wi-Fi\ndeployments (e.g., residential Wi-Fi).\nOur MLDR approach includes a coexistence management\nmodule that can address the trade-off between decentral-\nization and centralization, thus dynamically determining the\nbest approach in each particular case. While decentralized\ncompetition might be preferable in situations where a globally\noptimal solution is easy to achieve (e.g., in low-density deploy-\nments), in some other cases it might lead to poor performance.\nLikewise, cooperative and centralized solutions may remove\nsome of the negative interactions in competing networks, but at\nthe cost of additional overheads. Figure 4 illustrates a scenario\nwith 3 competing networks. In particular, a default (static)\nsolution might lead to suboptimal performance (Fig. 4a), but\nthe use of MLDRs can inter-network dependencies for good\nby learning from environmental interactions and dynamically\nadapting to changing conditions (Fig. 4b).\nSTA1\nAP2\nAP1\nInterf.\nPacket\nreception\nAP3\nBSS 3\nSTA2\nSTA3\n[Ch#2]\nBSS 2\n[Ch#1]\nBSS 1\n[Ch#1]\n(a)\nSTA1\nAP2\nAP1\nPacket\nreception\nAP3\nSTA2\nSTA3\nBSS 3\n[Ch#1]\nBSS 2\n[Ch#2]\nBSS 1\n[Ch#1]\n(b)\nFig. 4: The channel allocation problem in an example de-\nployment. Default (static) configuration (a); dynamic (MLDR-\nbased) configuration (b).\nThe MLDR approach proposed in this paper is based on\nan RL-oriented multi-agent setting that flexibly empowers the\n\n\n8\ndifferent players with the necessary capabilities, depending on\nthe situation. The behavior of the agents, when attempting\nto learn a good-performing configuration, is driven by the\nobserved reward, which in the wireless domain can take\nmultiple forms, depending on the selected target. Relevant\nKPIs upon which agent rewards can be constructed include:\n• Throughput (Γ): The amount of MAC-layer data trans-\nmitted in bits per second (bps). The MAC throughput is\ncomputed from the Aggregated MAC Service Data Unit\n(A-MSDU) or Aggregated MAC Protocol Data Unit (A-\nMPDU) data successfully transmitted per second, and is\ngiven by\nΓ =\nLData\nTData + TOverhead\n,\n(4)\nwhere LData is the amount of data transmitted, TData is\nthe time it takes to transmit those data (which depends\non the MCS selected according to channel quality), and\nTOverhead is the time spent with overheads (including\ncontrol signals, contention time, collisions, etc.).\n• Delay (l): The time it takes, in seconds (s), for a given\ndata transmission to be successfully performed. The delay\nor latency might be affected by different procedures (e.g.,\nqueuing, processing, channel access), some of which\nmight be considered to construct a reward. The delay can\nbe computed as\nl = T2 −T1,\n(5)\nwhere T1 and T2 are the initial and final timestamps under\nconsideration, respectively (e.g., arrival of the data at the\ntransmitter’s queue and reception of the acknowledgment\nof its arrival from the receiver).\n• Spectral efficiency per area (η): The amount of data\ntransmitted per spectrum used in a given area, in bits per\nsecond per Hertz and cubic meter (bps/Hz/m3).\nη =\nΓ\nBW × A,\n(6)\nwhere Γ is the throughput (see expression above), BW is\nthe bandwidth used, and A is the area under considera-\ntion.\nBased on the criteria above (and others), reward functions\ncan be constructed, including individual performance metrics\nor a combination of them. Moreover, depending on the selected\napproach, rewards can be decentralized, shared, or centralized.\nIn all cases, the definition of the reward must lead to a so-\nlution that satisfies application requirements (i.e., throughput,\nlatency, and reliability). When cast into RL terms, an agent\nwill attempt to minimize its regret by performing exploration.\nThe regret is quantified as\nυ =\nX\ni∈I\nϕ∗\ni −ϕi,\n(7)\nwhere ϕ∗\ni is the optimal reward (achieved through the best\npossible action) in the control period i ∈I and ϕi is the\nactual reward that was experienced in that same period.\nQuantifying the theoretical convergence time—the time it\ntakes for an agent to learn an optimal policy (when possible)—\nof RL algorithms such as Q-learning (cf. [44]) can however\nbe very challenging in competing multi-agent setups. When it\ncomes to cooperative or centralized approaches, better conver-\ngence guarantees can be provided at the expense of additional\nimplementation cost [45]. For that reason, it is critical that\nMLDRs are aware of the properties and implications of\neach approach (e.g., computational cost, convergence time,\nmemory requirements, etc.), and use such knowledge as part\nof their configuration strategy. For instance, the tolerance of\na given application to runtime exploration must be considered\nwhen selecting the best strategy to be implemented; while\ndata transfer may tolerate exploratory actions with suboptimal\nperformance, interactive video streaming cannot afford such\ndisruptions.\n3) Related Work: Multi-agent solutions for wireless net-\nworks have been significantly adopted for several years\nnow [46], [47]. The multi-agent setting offers a good trade-off\nbetween complexity and performance, which suits well the\ntypical high variability and partial observability of wireless\nsystems.\nA classic problem in which multi-agent solutions are used is\nchannel allocation, given its orthogonality and the possibility\nfor defining decentralized solutions with strong guarantees.\nThe fact that the channel status can be represented as a\nbinary variable (busy or idle) simplifies the problem and\nrelaxes the uncertainty in wireless networks. In [48], a de-\ncentralized, lightweight learning algorithm was introduced\nto independently manage channel selection at the AP. The\nalgorithm operates by taking simple actions—stay on the\ncurrent channel or switch to a new one—, based on local\nmeasurements regarding previous successes/failures when ac-\ncessing the channel. A similar approach was taken in [49]\nfor a more complex problem involving bandwidth selection\n(primary and secondary channels). To do that, the authors\nproposed a multi-agent MAB (MA-MAB) solution and com-\npared multiple well-known algorithms. Interestingly,\n[49]\nreveals that, for that problem, simpler approaches like ϵ-greedy\nperform better than others like upper confidence bound (UCB)\nor Thompson sampling (TS), which suggests that more refined\nparameter estimation methods are less effective in dynamic,\nchaotic multi-agent environments. More recently, with the\nadvent of Wi-Fi 7 multi-link operation (MLO), the authors\nof [50] proposed a solution whereby each AP radio has an\nindependent agent for channel selection, rather than a single\nagent managing all interfaces. These agents share their actions\nand observed rewards to build a joint Q-function (via transfer\nlearning), reflecting a consensus that accelerates convergence.\nThis multi-agent approach aligns with the objectives of the\nMLDR proposal.\nWhen it comes to more complex problems, such as those\ninvolving power adaptation, the utility behind agents’ rewards\nbecomes harder to model, hence finding optimal solutions\nis not trivial due to the non-binary effects of interference.\nIn [51], joint channel selection and power adaptation mecha-\nnism based on multi-player MABs is proposed. In particular,\nthis decentralized solution is proved to converge to a corre-\nlated equilibrium by relaxing the formulation of the reward\nand disregarding the interference coming from other devices.\nIn [21], [52], decentralized spatial reuse (integrating power\n\n\n9\nadaptation with sensitivity adjustment) was addressed again\nas a multi-player MAB game. In that case, it was shown\nthat, in certain scenarios, a selfish reward led to an optimal\ncorrelated equilibrium. However, this statement could not be\ngeneralized, provided that the competition unleashed among\ndifferent networks could also lead to suboptimal results, thus\nbeing counterproductive in terms of performance.\nTo address that, cooperative approaches such as the one\nin [53] have demonstrated the effectiveness of coordination\namong agents. In particular, [53] explores the usage of several\njoint rewards (average, max-min, and proportional fairness),\nwhich are shown to outperform decentralized ones in per-\nformance and fairness. Another cooperative MAB approach\nfor spatial reuse confirms the suitability of joint reward\nstrategies [54]. Both [53], [54] require certain communi-\ncation between agents (BSSs), so that reward signals can\nbe exchanged. A step further is taken in [55], [56], where\nsemi-centralized solutions (e.g., where a controller determines\ngroups of collaborating agents) are proposed for the same\nproblem.\nFinally, it is worth reviewing other kinds of contributions\nin which decentralized methods can be improved by better\nprocessing locally available information. One example is [57],\nwhich employs convolutional neural networks (CNNs) to\nestimate the saturation levels of Wi-Fi networks using inter-\nframe spacing statistics. Using this information, an agent is\nwell-equipped to perform dynamic channel selection. Another\nrelevant example is [58], which proposes the usage of graph\nneural networks (GNNs) to thoroughly process the channel\ninformation in wireless networks, so that efficient power adap-\ntation can be performed. Overall, these communication-free\nmethods empower decentralized approaches that work using\nlocal information only to the maximum extent. However, this\ncomes at the expense of integrating more complex operations,\noften involving additional hardware and resources.\nTaken together, these studies demonstrate the transformative\npotential of multi-agent RL in wireless networks. They under-\nscore the necessity of balancing simplicity and sophistication\nin algorithm design, fostering structured agent interactions,\nand leveraging shared insights to enhance network perfor-\nmance across diverse scenarios. These principles form the\ncornerstone of emerging intelligent, adaptive communication\nsystems.\nV. CHANNEL ACCESS IN BESPOKE INDUSTRIAL\nNETWORKS – RESULTS\nTo provide an example of an MLDR use case realization\nthrough AI/ML and highlight the arising flexibility of Spec-\nNets, we focus on optimizing bespoke industrial networks\n(Section IV-A). The problem that we address is being able to\nfulfill operator requirements, given as points on the “SpecNets\ntriangle” (Figure 2). Specifically, we turn to MABs, which\ncan learn online without apriori knowledge and dynamically\nconfigure network parameters to meet the varying performance\ngoals. In the following, we focus on the three scenarios listed\nin Table I and explain the implementation, scenarios, and\nachieved results.\nAI Agent\nNetwork parameters\nNetwork parameters\nNetwork performance\nNetwork performance\nFig. 5: Integration of the MAB agent into the ns-3 simulator\nestablished with shared memory through the ns3-ai library.\nThe simulator provides the agent with network performance\nmetrics, while the agent returns the updated network configu-\nration at each control period.\nA. Implementation\nThe implementation of a task-oriented network scenario\ninvolves using a network simulation environment driven by\na MAB agent. The environment used in this work is ns-3.423\nas it allows the simulation of 802.11 networks with flexible\nnetwork configurations. Furthermore, we use ns3-ai [4] to\ncreate a communication interface between the simulator and\nthe MAB agent (Figure 5).\nThe agent is implemented using the Reinforced-lib li-\nbrary [59]. We select Thompson sampling as the action-\nselection strategy used by the agent due to its simplicity\nand mathematical foundation, which ensures asymptotic regret\nin stationary cases [60]. The agent configures the following\nchannel access rules and parameters (constant in each control\nperiod):\n• the contention window (CW) value, limited to discrete\nvalues of 2n+4 −1, where n ∈0, 1, . . . , 6,\n• enabling or disabling A-MPDU frame aggregation,\n• enabling or disabling the RTS/CTS frame protection\nmechanism.\nThe same configuration is applied to all stations controlled\nby the AP. More freedom (independent, per-station configu-\nrations) would lead to even better results at the expense of\ncomplicating the problem significantly. A repository contain-\ning the source code for the simulation model, the agent, and\nthe scripts to reproduce the experiments is available as open\nsource.4\nB. Reward Design\nTo optimize the system for high throughput, low latency,\nand fair resource allocation among stations, we define a multi-\nobjective reward function as a weighted sum of normalized\nmetrics. The reward combines three components (Figure 3):\noverall fairness f (measured using Jain’s fairness index cal-\nculated over per-station throughput), aggregate throughput t,\nand mean latency l. Each of the objectives is weighted by their\nrespective importance wi, where i ∈{f, t, l} and P\ni wi = 1.\nThe fairness reward rf is modeled as rf = 1 −α(1 −f),\nwhere α adjusts the sensitivity to fairness. This form en-\ncourages even resource allocation by increasing the reward as\n3https://www.nsnam.org\n4https://github.com/mldr-devs/mldr\n\n\n10\nAP\nStation n\nStation 1\nStation 2\nStation k+1\nStation k-\n1\nStation k\n…\n…\nController\nConfiguration\nReward\n(a)\n500 m\n500 m\nAP\nStation n\nStation 1\nStation 2\nStation k+1\nStation k-\n1\nStation k\n…\n…\nController\nConfiguration\nReward\n(b)\nFig. 6: Simulation scenarios high throughput and low latency\n(a); massive communications (b).\nfairness increases. The throughput reward rt is represented as\nrt = t/tmax, where tmax is the maximum data rate achievable,\nand t is the actual throughput obtained at a given iteration. The\nlatency reward rl is defined as rl = β/l, with β an adjusting\nlatency weight. By inversely rewarding latency, rl prioritizes\nlow-latency actions. Each component ri is clipped between 0\nand 1 to prevent any single metric from dominating. The final\nreward is thus expressed as:\nR =\nX\ni\nwi · min(1, max(0, ri)).\n(8)\nThis is a form linear scalarizatio [28] and weights wi can be\neasily configured using(2)\nC. Scenarios\nOur study examines three prominent use-case scenarios\nwith extreme requirements in bespoke industrial networks\n(high throughput, low latency, and massive communication),\nwhere each scenario assumes the maximization of one of the\nparameters at the expense of others. The scenarios consider\ntopologies tailored to their specific needs. Both low latency\nand high throughput scenarios operate as traditional local\nwireless networks composed of one access point (AP) and its\nassociated stations, which are stationary and placed randomly\nwithin a 10 m radius (Fig. 6a). Each station generates identical\nconstant bit rate uplink traffic (Table III). To maximize perfor-\nmance, we set a constant PHY transmission rate (MCS 11).\nMeanwhile, in the massive communication scenario, stations\nare randomly distributed within a square area of 500 m ×\n500 m with the AP in the middle (Fig. 6b). Due to the high\nrange required, we set the constant PHY transmission rate to\nMCS 0. Each station transmits a small, 256 B packet to the\nAP every 50 ms, mirroring an industrial sensor network that\nsends measurement data.\nTables II and III present the general and scenario-specific\nparameters, respectively. As MAB agents require some time to\nreach stability, by default, their performance is evaluated after\nan initial warm-up phase lasting up to 200 control periods,\nunless explicitly stated. In practice, this warm-up phase is\noften much shorter and is determined by a straightforward\nheuristic that indicates convergence. The warm-up phase ends\nif the agent selects the same network configuration at least\n90% of the time during the last 20 control periods.\nTABLE II: General simulation parameters and default IEEE\n802.11 settings.\nSimulation parameter\nValue\nBand\n5 GHz\nPHY/MAC\nIEEE 802.11ax (no OFDMA)\nSpatial streams\n1, SISO\nChannel model\nLog-distance\nChannel width\n20 MHz\nCWmin/CWmax\n15/1023\nA-MPDU size\n64 kB\nRTS/CTS\nDisabled\nControl period\n0.5 s\nNumber of independent runs\n10\nD. Results\nIn the following, we present the results obtained in each\nscenario by the different studied mechanisms. We use IEEE\n802.11 in its default configuration of Table II (referred to\nas 802.11) as a baseline to evaluate the performance of\nSpecNets. We also adopt the same 802.11 configuration but\nwith RTS/CTS enabled, which we name 802.11 RTS/CTS. For\nthe SpecNet configuration, note that it may vary across the\nthree evaluated scenarios, given the dynamism of the solution.\n1) High Throughput Scenario: Figure 7 presents the results\nof a dynamic scenario focused on throughput optimization.\nEvery 100 s, 5 additional stations are added to the network\nand the MAB agent is restarted to its initial state. As can\nbe seen in Figure 7a, after approximately 100 control periods\nthe network reaches the optimal configuration. Convergence\nis also achieved after every consecutive change in the net-\nwork. The agent learns to obtain a high reward by enabling\nRTS/CTS, aggregation, and adjusting the CW setting to the\ndegree of congestion. Similar performance can be achieved\nusing 802.11 but only with RTS/CTS enabled. Disabling this\nframe protection mechanism lowers the aggregate network\nthroughput as the network size increases and packet collisions\nhave an increasingly negative impact on performance.\nEven though our agent does not find a solution which would\nsurpass 802.11 performance with RTS/CTS enabled (which is\nalready close the the upper bound), the SpectNet agent finds\na solution which is much better in terms of instantaneous\nfairness as shown in Figure 7b. The IEEE 802.11 channel\naccess function is known for its short term unfairness [61],\nbut the agent solves this by optimizing the CW value so that\ninstantaneous fairness is higher without any loss in aggregate\nthroughput.\n2) Low Latency Scenario: In the second studied scenario,\nthe SpecNet agent focuses on achieving low end-to-end la-\ntency. Figure 8a shows the temporary performance achieved\nby the agent, including an initial transitory phase (with intense\nexploration) and a steady state phase (where the learned\ndistributions are exploited). At first, the network behavior\nis chaotic as the agent tries different configuration. After\nabout 140 control periods, the agent stabilizes after finding\nthe optimal configuration. Compared to the default 802.11\nconfiguration, the SpecNet-controlled network shows reduced\naverage latency and variance, making its performance more\npredictable. Figure 8b illustrates the combined steady-state\n\n\n11\nTABLE III: Scenario-specific simulation parameters.\nScenario\nNo. of stations\nPacket size (payload)\nLoad per station\nMCS\nHigh throughput\n5 – 50\n1500 B\n120 Mb/s (full buffer)\n11\nLow latency\n4\n1500 B\n20 Mb/s\n11\nMassive communication\n250\n256 B\n46 kb/s\n0\n0\n200\n400\n600\n800\n1000\n1200\n1400\n1600\n1800\n2000\nControl period\n0\n25\n50\n75\n100\n125\nAggregate throughput [Mb/s]\n802.11\n802.11 RTS/CTS\nSpecNet\nNumber of stations\nAgent reset\n0\n10\n20\n30\n40\n50\nNumber of stations\n(a) Evolution of instantaneous aggregate network throughput\n0\n200\n400\n600\n800\n1000\n1200\n1400\n1600\n1800\n2000\nControl period\n0.0\n0.2\n0.4\n0.6\n0.8\n1.0\nJain’s fairness index\n802.11\n802.11 RTS/CTS\nSpecNet\nNumber of stations\nAgent reset\n0\n10\n20\n30\n40\n50\nNumber of stations\n(b) Evolution of instantaneous fairness\nFig. 7: Performance evolution in the dynamic high throughput scenario.\nresults of every run in the low latency scenario as a cumulative\ndistribution function (CDF). Notably, the agent typically fol-\nlows a similar network configuration (i.e., RTS/CTS, frame\naggregation enabled, low CW) as in the high-throughput\nscenario. However, the difference between the performance\nof 802.11 with RTS/CTS and SpecNet is clearly visible on\naccount of two factors: (a) RTS/CTS improves latency by\nminimizing airtime wasted on collisions, (b) optimizing CW\nfinds a balance between decreasing channel access times\n(lower CW) and minimizing collisions (higher CW).\n3) Massive Communication Scenario: In the massive com-\nmunication scenario, our goal is to ensure that as many devices\nas possible can access the channel. Therefore, the SpecNet\nagent optimizes for instantaneous fairness. The results in\nFigure 9 as a CDF of throughput achieved by each station\nclearly show the superiority of the proposed solution. The\nSpecNet agent optimizes network performance with the fol-\nlowing configuration: enabling RTS/CTS reduces time spent in\ncollisions, enabling frame aggregation reduces the number of\nrequired channel access attempts, and using a higher CW value\nreduces the number of collisions. With this configuration, the\nSpecNet agent outperforms both variants of 802.11 with nearly\nall of the 250 stations achieving the required offered load.\n4) Summary: Finally, Table IV presents the aggregate re-\nsults of all scenarios in different static network configurations,\ncompared to the configuration selected by the agent. The table\ncontains the average metrics of 10 independent runs along\nwith their standard deviation. This comparison helps assess\nhow different network parameters influence performance. We\nsee the most efficient configuration provides both the highest\nthroughput and lowest latency. Such a situation may occur\neven if scenario settings and optimization targets are different,\nwhich highlights the robustness of our approach. Therefore,\nthis small but illustrative example confirms that a single\nSpecNet agents can adapt to various operator requirements\nin bespoke industrial networks.\n\n\n12\nTABLE IV: Aggregate network performance for each scenario depending on parameter settings. The results in bold indicate\nthe best result for fixed settings (top) and for the MAB agent (bottom).\nAgent\nRTS/CTS\nFrame\naggregation\nCW\nHigh throughput\n[Mb/s]\nLow latency\n(90th percentile of delay) [ms]\nMassive communication\n(Jain’s fairness index)\nFixed\n✓\n✓\nLowest (15)\n110.3 ± 1.1\n5.0 ± 0.7\n0.40 ± 0.04\nFixed\n✓\n✓\nHighest (1023)\n103.7 ± 0.9\n26.4 ± 2.1\n1.00 ± 0.00\nFixed\n✓\n×\nLowest (15)\n32.2 ± 0.8\n616.8 ± 7.5\n0.07 ± 0.01\nFixed\n✓\n×\nHighest (1023)\n17.0 ± 0.0\n699.7 ± 12.9\n0.88 ± 0.01\nFixed\n×\n✓\nLowest (15)\n53.5 ± 3.4\n56.6 ± 35.9\n0.02 ± 0.00\nFixed\n×\n✓\nHighest (1023)\n103.9 ± 0.9\n25.0 ± 2.0\n0.83 ± 0.01\nFixed\n×\n×\nLowest (15)\n22.1 ± 0.5\n606.3 ± 1.9\n0.07 ± 0.01\nFixed\n×\n×\nHighest (1023)\n19.2 ± 0.0\n702.6 ± 13.2\n0.61 ± 0.02\nMAB\nAuto\nAuto\nAuto\n108.9 ± 1.1\n5.4 ± 0.8\n1.00 ± 0.00\n0\n50\n100\n150\n200\n250\n300\nControl period\n101\n102\nLatency [ms]\nWarmup end\nSpecNet\n802.11 RTS/CTS\n802.11\n(a) Training process.\n0\n20\n40\n60\n80\n100\nLatency [ms]\n0.0\n0.2\n0.4\n0.6\n0.8\n1.0\nCDF\n802.11\n802.11 RTS/CTS\nSpecNet\n(b) CDF of per-packet latency.\nFig. 8: Results for the low latency scenario.\nVI. CONCLUSIONS\nAdvances on AI/ML will enable the development of au-\ntonomous SpecNets, able to not only self-configure to handle\nsome application and scenario requirements, but also to na-\ntively create new protocols to communicate that are tailored\nmade to the problem to solve.\nACKNOWLEDGMENT\nThis paper is supported by the CHIST-ERA Wireless AI\n2022 call MLDR project (ANR-23-CHR4-0005), partially\nfunded by AEI and NCN under projects PCI2023-145958-\n2 and 2023/05/Y/ST7/00004, respectively. The work of F.\nWilhelmi and B. Bellalta is also partially supported by Wi-\nXR PID2021-123995NB-I00 (MCIU/AEI/FEDER,UE), and\n0\n10\n20\n30\n40\nThroughput per station [kb/s]\n0.0\n0.2\n0.4\n0.6\n0.8\n1.0\nCDF\n802.11\n802.11 RTS/CTS\nSpecNet\nFig. 9: Throughput distribution in the massive communication\nscenario over multiple iterations.\nby MCIN/AEI under the Maria de Maeztu Units of Excellence\nProgramme (CEX2021-001195-M). For the purpose of Open\nAccess, the authors have applied a CC-BY public copyright\nlicence to any Author Accepted Manuscript (AAM) version\narising from this submission.\nREFERENCES\n[1] M. Giordani, M. Polese, M. Mezzavilla, S. Rangan, and M. Zorzi, “To-\nward 6G networks: Use cases and technologies,” IEEE communications\nmagazine, vol. 58, no. 3, pp. 55–61, 2020.\n[2] B. Bellalta, K. Kosek-Szott, S. Szott, and F. Wilhelmi, “Towards an\nAI/ML-defined Radio for Wi-Fi: Overview, Challenges, and Roadmap,”\narXiv preprint arXiv:2405.12675, 2024.\n[3] F. Wilhelmi, S. Szott, K. Kosek-Szott, and B. Bellalta, “Machine\nLearning and Wi-Fi: Unveiling the Path Toward AI/ML-Native IEEE\n802.11 Networks,” IEEE Communications Magazine, 2024.\n[4] H. Yin, P. Liu, K. Liu, L. Cao, L. Zhang, Y. Gao, and X. Hei, “Ns3-ai:\nFostering artificial intelligence algorithms for networking research,”\nin Proceedings of the 2020 Workshop on Ns-3, ser. WNS3 2020.\nNew York, NY, USA: Association for Computing Machinery, 2020, p.\n57–64. [Online]. Available: https://doi.org/10.1145/3389400.3389404\n[5] F. Wilhelmi Roca, S. Barrachina-Munoz, B. Bellalta, C. Cano, A. Jon-\nsson, and V. Ram, “A Flexible Machine Learning-Aware Architecture\nfor Future WLANs,” IEEE Communications Magazine, vol. 58,(3), pp.\n25-31, 2020.\n[6] S. Szott, K. Kosek-Szott, P. Gawłowicz, J. T. G´omez, B. Bellalta,\nA. Zubow, and F. Dressler, “Wi-Fi Meets ML: A Survey on Improving\nIEEE 802.11 Performance With Machine Learning,” IEEE Communica-\ntions Surveys & Tutorials, vol. 24, no. 3, pp. 1843–1893, 2022.\n[7] X. Lin, “An Overview of AI in 3GPP’s RAN Release 18: Enhancing\nNext-Generation Connectivity?” Global Communications, vol. 2024,\n2024.\n\n\n13\n[8] J. Hoydis, F. A. Aoudia, A. Valcarce, and H. Viswanathan, “Toward a\n6G AI-native air interface,” IEEE Communications Magazine, vol. 59,\nno. 5, pp. 76–81, 2021.\n[9] M. Polese, L. Bonati, S. D’Oro, S. Basagni, and T. Melodia, “Under-\nstanding O-RAN: Architecture, Interfaces, Algorithms, Security, and\nResearch Challenges,” IEEE Communications Surveys & Tutorials,\nvol. 25, no. 2, pp. 1376–1411, 2023.\n[10] A. Maatouk, N. Piovesan, F. Ayed, A. De Domenico, and M. Debbah,\n“Large language models for telecom: Forthcoming impact on the indus-\ntry,” IEEE Communications Magazine, 2024.\n[11] A. Valcarce, P. Kela, S. Mandelli, and H. Viswanathan, “The Role of\nAI in 6G MAC,” in 2024 Joint European Conference on Networks and\nCommunications & 6G Summit (EuCNC/6G Summit).\nIEEE, 2024, pp.\n723–728.\n[12] J. Park, S.-W. Ko, J. Choi, S.-L. Kim, and M. Bennis, “Towards semantic\ncommunication protocols for 6g: From protocol learning to language-\noriented approaches,” arXiv preprint arXiv:2310.09506, 2023.\n[13] S. Seo, J. Park, S.-W. Ko, J. Choi, M. Bennis, and S.-L. Kim, “Toward\nsemantic communication protocols: A probabilistic logic perspective,”\nIEEE Journal on Selected Areas in Communications, vol. 41, no. 8, pp.\n2670–2686, 2023.\n[14] N. Keshtiarast and M. Petrova, “Ml framework for wireless mac protocol\ndesign,” arXiv preprint arXiv:2402.07208, 2024.\n[15] H. B. Pasandi and T. Nadeem, “Towards a learning-based framework\nfor self-driving design of networking protocols,” IEEE Access, vol. 9,\npp. 34 829–34 844, 2021.\n[16] J. Pan, J. Wang, Z. Yun, Z. Xiao, Y. Ouyang, W. Cheng, and W. Zhang,\n“MAC Revivo: Artificial Intelligence Paves the Way,” arXiv preprint\narXiv:2410.15820, 2024.\n[17] D. Kalathil, N. Nayyar, and R. Jain, “Decentralized learning for multi-\nplayer multiarmed bandits,” IEEE Transactions on Information Theory,\nvol. 60, no. 4, pp. 2331–2345, 2014.\n[18] J. Rosenski, O. Shamir, and L. Szlak, “Multi-player bandits–a musical\nchairs approach,” in International Conference on Machine Learning.\nPMLR, 2016, pp. 155–163.\n[19] L. Besson and E. Kaufmann, “Multi-player bandits revisited,” in Algo-\nrithmic Learning Theory.\nPMLR, 2018, pp. 56–92.\n[20] W. Huang, R. Combes, and C. Trinh, “Towards optimal algorithms for\nmulti-player bandits without collision sensing information,” in Confer-\nence on Learning Theory.\nPMLR, 2022, pp. 1990–2012.\n[21] F.\nWilhelmi,\nC.\nCano,\nG.\nNeu,\nB.\nBellalta,\nA.\nJonsson,\nand\nS. Barrachina-Mu˜noz, “Collaborative spatial reuse in wireless networks\nvia selfish multi-armed bandits,” Ad Hoc Networks, vol. 88, pp. 129–141,\n2019.\n[22] R. Combes, M. S. Talebi Mazraeh Shahi, A. Proutiere et al., “Combi-\nnatorial bandits revisited,” Advances in neural information processing\nsystems, vol. 28, 2015.\n[23] R. Combes, J. Ok, A. Proutiere, D. Yun, and Y. Yi, “Optimal rate\nsampling in 802.11 systems: Theory, design, and implementation,” IEEE\nTransactions on Mobile Computing, vol. 18, no. 5, pp. 1145–1158, 2018.\n[24] M. S. Talebi, Z. Zou, R. Combes, A. Proutiere, and M. Johansson,\n“Stochastic online shortest path routing: The value of feedback,” IEEE\nTransactions on Automatic Control, vol. 63, no. 4, pp. 915–930, 2017.\n[25] T. Cuvelier, R. Combes, and E. Gourdin, “Statistically efficient,\npolynomial-time algorithms for combinatorial semi-bandits,” Proceed-\nings of the ACM on Measurement and Analysis of Computing Systems,\nvol. 5, no. 1, pp. 1–31, 2021.\n[26] A. Seferagi´c, J. Famaey, E. De Poorter, and J. Hoebeke, “Survey on\nwireless technology trade-offs for the industrial internet of things,”\nSensors, vol. 20, no. 2, p. 488, 2020.\n[27] A. Leivadeas and M. Falkner, “A survey on intent-based networking,”\nIEEE Communications Surveys & Tutorials, vol. 25, no. 1, pp. 625–655,\n2022.\n[28] M. M. Drugan and A. Nowe, “Designing multi-objective multi-armed\nbandits algorithms: A study,” in The 2013 International Joint Conference\non Neural Networks (IJCNN), 2013, pp. 1–8.\n[29] A.\nNetravali\nand\nB.\nHaskell,\nDigital\nPictures:\nRepresentation,\nCompression and Standards, ser. Applications of Communications\nTheory.\nSpringer US, 1995. [Online]. Available: https://books.google.\npl/books?id=-TXYfZrCBuQC\n[30] N. A. Mohammed, A. M. Mansoor, and R. B. Ahmad, “Mission-critical\nmachine-type communication: An overview and perspectives towards\n5g,” IEEE Access, vol. 7, pp. 127 198–127 216, 2019.\n[31] H. Zhou, C. She, Y. Deng, M. Dohler, and A. Nallanathan, “Machine\nlearning for massive industrial internet of things,” IEEE Wireless Com-\nmunications, vol. 28, no. 4, pp. 81–87, 2021.\n[32] B. A. Salau, A. Rawal, and D. B. Rawat, “Recent advances in artificial\nintelligence for wireless internet of things and cyber–physical systems: A\ncomprehensive survey,” IEEE Internet of Things Journal, vol. 9, no. 15,\npp. 12 916–12 930, 2022.\n[33] Y. Cheng, D. Yang, H. Zhou, and H. Wang, “Adopting ieee 802.11 mac\nfor industrial delay-sensitive wireless control and monitoring applica-\ntions: A survey,” Computer Networks, vol. 157, pp. 41–67, 2019.\n[34] L. Galati-Giordano, G. Geraci, M. Carrascosa, and B. Bellalta, “What\nwill Wi-Fi 8 Be? A Primer on IEEE 802.11bn Ultra High Reliability,”\nIEEE Communications Magazine, vol. 62, no. 8, pp. 126–132, 2024.\n[35] M. Aboubakar, P. Roux, M. Kellil, and A. Bouabdallah, “An efficient\nand adaptive configuration of ieee 802.15. 4 mac for communication\ndelay optimisation,” in 2020 11th international conference on network\nof the future (NoF).\nIEEE, 2020, pp. 1–7.\n[36] C. Savaglio, P. Pace, G. Aloi, A. Liotta, and G. Fortino, “Lightweight\nreinforcement learning for energy efficient communications in wireless\nsensor networks,” IEEE Access, vol. 7, pp. 29 355–29 364, 2019.\n[37] M. Kherbache, O. Sobirov, M. Maimour, E. Rondeau, and A. Benyahia,\n“Reinforcement learning tdma-based mac scheduling in the industrial\ninternet of things: A survey,” IFAC-PapersOnLine, vol. 55, no. 8, pp.\n83–88, 2022.\n[38] H. Farag, M. Gidlund, and P. ¨Osterberg, “A delay-bounded mac protocol\nfor mission-and time-critical applications in industrial wireless sensor\nnetworks,” IEEE Sensors Journal, vol. 18, no. 6, pp. 2607–2616, 2018.\n[39] M. Raza, H. Le-minh, N. Aslam, and S. Hussain, “A novel mac proposal\nfor critical and emergency communications in industrial wireless sensor\nnetworks,” Computers & Electrical Engineering, vol. 72, pp. 976–989,\n2018.\n[40] S. Bica¨ıs and J.-B. Dor´e, “Design of digital communications for strong\nphase noise channels,” IEEE Open Journal of Vehicular Technology,\nvol. 1, pp. 227–243, 2020.\n[41] D. Marasinghe, L. H. Nguyen, J. Mohammadi, Y. Chen, T. Wild, and\nN. Rajatheva, “Constellation shaping under phase noise impairment for\nsub-thz communications,” in ICC 2024 - IEEE International Conference\non Communications, 2024, pp. 3833–3838.\n[42] ——, “Waveform learning under phase noise impairment for sub-thz\ncommunications,” IEEE Transactions on Communications, pp. 1–1,\n2024.\n[43] L. H. Nguyen, H. Heimpel, D. Marasinghe, H. Halbauer, and T. Wild,\n“Sub-thz waveform evaluation in the d-band: A proof of concept study,”\nin 2024 Joint European Conference on Networks and Communications\n& 6G Summit (EuCNC/6G Summit), 2024, pp. 1027–1032.\n[44] E. Even-Dar, Y. Mansour, and P. Bartlett, “Learning Rates for Q-\nlearning.” Journal of machine learning Research, vol. 5, no. 1, 2003.\n[45] I. Bistritz and N. Bambos, “Cooperative multi-player bandit optimiza-\ntion,” Advances in Neural Information Processing Systems, vol. 33, pp.\n2016–2027, 2020.\n[46] M. Chen, D. G¨und¨uz, K. Huang, W. Saad, M. Bennis, A. V. Feljan,\nand H. V. Poor, “Distributed learning in wireless networks: Recent\nprogress and future challenges,” IEEE Journal on Selected Areas in\nCommunications, vol. 39, no. 12, pp. 3579–3605, 2021.\n[47] A. Feriani and E. Hossain, “Single and multi-agent deep reinforcement\nlearning for ai-enabled wireless networks: A tutorial,” IEEE Communi-\ncations Surveys & Tutorials, vol. 23, no. 2, pp. 1226–1252, 2021.\n[48] D. J. Leith and P. Clifford, “A self-managed distributed channel selec-\ntion algorithm for WLANs,” in 2006 4th International Symposium on\nModeling and Optimization in Mobile, Ad Hoc and Wireless Networks.\nIEEE, 2006, pp. 1–9.\n[49] S. Barrachina-Mu˜noz, A. Chiumento, and B. Bellalta, “Multi-armed\nbandits for spectrum allocation in multi-agent channel bonding wlans,”\nIEEE Access, vol. 9, pp. 133 472–133 490, 2021.\n[50] P. E. Iturria-Rivera, M. Chenier, B. Herscovici, B. Kantarci, and M. Erol-\nKantarci, “Channel Selection for Wi-Fi 7 Multi-Link Operation via\nOptimistic-Weighted VDN and Parallel Transfer Reinforcement Learn-\ning,” in 2023 IEEE 34th Annual International Symposium on Personal,\nIndoor and Mobile Radio Communications (PIMRC).\nIEEE, 2023, pp.\n1–6.\n[51] S. Maghsudi and S. Sta´nczak, “Joint channel selection and power control\nin infrastructureless wireless networks: A multiplayer multiarmed ban-\ndit framework,” IEEE Transactions on Vehicular Technology, vol. 64,\nno. 10, pp. 4565–4578, 2014.\n[52] F. Wilhelmi, S. Barrachina-Munoz, B. Bellalta, C. Cano, A. Jonsson,\nand G. Neu, “Potential and pitfalls of multi-armed bandits for decen-\ntralized spatial reuse in WLANs,” Journal of Network and Computer\nApplications, vol. 127, pp. 26–42, 2019.\n\n\n14\n[53] F. Wilhelmi, B. Bellalta, S. Szott, K. Kosek-Szott, and S. Barrachina-\nMu˜noz, “Coordinated Multi-Armed Bandits for Improved Spatial Reuse\nin Wi-Fi,” arXiv preprint arXiv:2412.03076, 2024.\n[54] P. E. Iturria-Rivera, M. Chenier, B. Herscovici, B. Kantarci, and M. Erol-\nKantarci, “Cooperate or not Cooperate: Transfer Learning with Multi-\nArmed Bandit for Spatial Reuse in Wi-Fi,” IEEE Transactions on\nMachine Learning in Communications and Networking, 2024.\n[55] M. Wojnar, W. Ciezobka, K. Kosek-Szott, K. Rusek, S. Szott, D. Nunez,\nand B. Bellalta, “IEEE 802.11 bn Multi-AP Coordinated Spatial Reuse\nwith Hierarchical Multi-Armed Bandits,” IEEE Communications Letters,\n2024.\n[56] A. Bardou and T. Begin, “Inspire: Distributed bayesian optimization for\nimproving spatial reuse in dense wlans,” in Proceedings of the 25th\nInternational ACM Conference on Modeling Analysis and Simulation of\nWireless and Mobile Systems, 2022, pp. 133–142.\n[57] M. Girmay, A. Shahid, V. Maglogiannis, D. Naudts, and I. Moerman,\n“Machine learning enabled Wi-Fi saturation sensing for fair coexistence\nin unlicensed spectrum,” IEEE Access, vol. 9, pp. 42 959–42 974, 2021.\n[58] Y. Shen, Y. Shi, J. Zhang, and K. B. Letaief, “A graph neural network\napproach for scalable wireless power control,” in 2019 IEEE Globecom\nWorkshops (GC Wkshps).\nIEEE, 2019, pp. 1–6.\n[59] M. Wojnar, S. Szott, K. Rusek, and W. Ciezobka, “Reinforced-lib:\nRapid prototyping of reinforcement learning solutions,” SoftwareX,\nvol. 26, p. 101706, 2024. [Online]. Available: https://www.sciencedirect.\ncom/science/article/pii/S2352711024000773\n[60] A. Slivkins, “Introduction to multi-armed bandits,” Foundations and\nTrends® in Machine Learning, vol. 12, no. 1-2, pp. 1–286, 2019.\n[61] M. Mi´skowicz, “Unfairness of random access with collision avoidance\nin industrial internet of things networks,” Sensors, vol. 21, no. 21, p.\n7135, 2021.\n\n\n",
  "metadata": {
    "source_file": "dataset/pdfs/arxiv_2502.20996v1.pdf",
    "total_pages": 14,
    "title": "Towards Specialized Wireless Networks Using an ML-Driven Radio Interface",
    "authors": [
      "Kamil Szczech",
      "Maksymilian Wojnar",
      "Katarzyna Kosek-Szott",
      "Krzysztof Rusek",
      "Szymon Szott",
      "Dileepa Marasinghe",
      "Nandana Rajatheva",
      "Richard Combes",
      "Francesc Wilhelmi",
      "Anders Jonsson",
      "Boris Bellalta"
    ],
    "abstract": "Future wireless networks will need to support diverse applications (such as\nextended reality), scenarios (such as fully automated industries), and\ntechnological advances (such as terahertz communications). Current wireless\nnetworks are designed to perform adequately across multiple scenarios so they\nlack the adaptability needed for specific use cases. Therefore, meeting the\nstringent requirements of next-generation applications incorporating technology\nadvances and operating in novel scenarios will necessitate wireless specialized\nnetworks which we refer to as SpecNets. These networks, equipped with cognitive\ncapabilities, dynamically adapt to the unique demands of each application,\ne.g., by automatically selecting and configuring network mechanisms. An enabler\nof SpecNets are the recent advances in artificial intelligence and machine\nlearning (AI/ML), which allow to continuously learn and react to changing\nrequirements and scenarios. By integrating AI/ML functionalities, SpecNets will\nfully leverage the concept of AI/ML-defined radios (MLDRs) that are able to\nautonomously establish their own communication protocols by acquiring\ncontextual information and dynamically adapting to it. In this paper, we\nintroduce SpecNets and explain how MLDR interfaces enable this concept. We\npresent three illustrative use cases for wireless local area networks (WLANs):\nbespoke industrial networks, traffic-aware robust THz links, and coexisting\nnetworks. Finally, we showcase SpecNets' benefits in the industrial use case by\nintroducing a lightweight, fast-converging ML agent based on multi-armed\nbandits (MABs). This agent dynamically optimizes channel access to meet varying\nperformance needs: high throughput, low delay, or fair access. Results\ndemonstrate significant gains over IEEE 802.11, highlighting the system's\nautonomous adaptability across diverse scenarios.",
    "published_date": "2025-02-28",
    "source": "arxiv"
  }
}