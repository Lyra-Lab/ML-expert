{
  "id": "arxiv_2502.20549v1",
  "text": "Toward Fully Autonomous Flexible Chunk-Based Aerial\nAdditive Manufacturing: Insights from Experimental\nValidation\nMarios-Nektarios Stamatopoulos*, Jakub Haluska, Elias Small, Jude\nMarroush, Avijit Banerjee, George Nikolakopoulos\nRobotics & AI Team, Department of Computer, Electrical and Space Engineering,\nLuleå University of Technology, Luleå SE-97187, Sweden\n*Corresponding author email: marsta@ltu.se\nAbstract\nA novel autonomous chunk-based aerial additive manufacturing framework is\npresented, supported with experimental demonstration advancing aerial 3D\nprinting. An optimization-based decomposition algorithm transforms struc-\ntures into sub-components, or chunks, treated as individual tasks coordinated\nvia a dependency graph, ensuring sequential assignment to UAVs consider-\ning inter-dependencies and printability constraints for seamless execution.\nA specially designed hexacopter equipped with a pressurized canister for\nlightweight expandable foam extrusion is utilized to deposit the material in a\ncontrolled manner. To further enhance precise execution of the printing, an\noffset-free Model Predictive Control mechanism is considered compensating\nreactively for disturbances and ground effect during execution. Addition-\nally, an interlocking mechanism is introduced in the chunking process to en-\nhance structural cohesion and improve layer adhesion. Extensive experiments\ndemonstrate the framework’s effectiveness in constructing precise structures\nof various shapes, while seamlessly adapting to practical challenges, prov-\ning its potential for a transformative leap in aerial robotic capability for\nautonomous construction. A video with the overall demonstration can be\nfound here: https://youtu.be/WC1rLMLKEg4.\nKeywords:\nAerial Additive Manufacturing, Mesh Decomposition, Autonomous\nconstruction, UAV, Offset-Free Control\nPreprint submitted to Journal of Automation In Construction\nFebruary 27, 2025\n\n\n1. Introduction\nIn recent times, ground breaking advancement in additive manufacturing,\nseamlessly integrated with autonomous robotics, are unlocking an exciting\nfrontier in next generation construction and manufacturing process. Additive\nmanufacturing has demonstrated a paradigm shift impact, addressing com-\nplex manufacturing processes with unprecedented precision and efficiency.\nIts transformative potential is becoming increasingly evident as it evolves\nand finds applications across a wide range of industries [1, 2, 3], while simul-\ntaneously paving the way for further innovations in the future. An intriguing\ndevelopment is its recent integration into the construction industry, capital-\nizing on its ability to automate construction processes, provide extensive de-\nsign flexibility, and construct intricate structures designed using Computer-\nAided Design (CAD) software [4, 5]. Numerous studies have demonstrated\nthe design and deployment of large-scale robotic arms and gantry systems\nfor printing building components and even entire houses using a variety of\nbase materials [6]. A key advantage of such methods is their ability to adapt\nwith high level of automation throughout the construction process, mak-\ning them particularly well-suited for deployment in remote, inaccessible, and\nharsh environments[7, 8]. Notable examples include disaster-stricken areas,\nsuch as regions impacted by fires and earthquakes, where the rapid con-\nstruction of shelters and basic infrastructure is imperative. The implication\nof autonomous construction technology is significant for extraterrestrial set-\ntlements where immediate human presence is minimal or nonexistent [9].\nHowever, a significant challenge facing both these emerging techniques and\nconventional construction methods is the requirement for existing infrastruc-\nture to facilitate the transportation logistics of the necessary machinery on\nsite and their installation [10]. On top of that, the dimension and the ge-\nometry of their available workspace is bounded by their scale, rendering the\nscalability of the overall structure very difficult and tedious.\nDrawing inspiration from nature and biological creatures like bees and\nwasps in the construction of hives, recent research is exploring the prospect\nof utilizing the latest innovations in Unmanned Aerial Vehicles (UAVs) and\nrobotics technology, specifically within the field of aerial additive manufac-\nturing, a pioneering concept that is currently in its early conceptual devel-\nopmental stage is being introduced [11, 12, 13]. In this particular approach,\nthe UAVs act as flying construction workers, where portions of the material\nused to construct the overall structure. The construction process is executed\n2\n\n\nby depositing material carried by UAVs in consecutive layers to build the\nstructure. This groundbreaking concept of employing the aerial autonomous\nagents in the construction industry has the potential to transform the con-\nstruction landscape and further enhance the autonomous large-scale con-\nstruction. Although still in its infancy, this technology holds great potential\nfor further research and development. However, several challenges must be\naddressed to ensure a seamless process. Key obstacles include the limited\npayload capacity of UAVs, their shorter battery life compared to traditional\nconstruction vehicles, and the complexities of planning and coordinating au-\ntonomous missions. These challenges remain critical barriers to overcome.\nIn accordance with this objective, this article presents an innovative\nchunk-based fully autonomous aerial additive manufacturing framework de-\nsigned to utilize UAVs for autonomous construction. The development high-\nlights the associated challenges and provides a step-by-step intricate details\nalong with insights from experimental evaluation. Given a generic shape in\nthe form of a CAD model mesh to be constructed, the framework offers the\nflexibility to adapt the process to the characteristics of the available UAVs\nand the geometry of the mesh, transforming the UAVs into a coordinated\naerial construction worker.\nTo validate the approach, a custom-designed\nhexacopter is used, equipped with a pressurized can carrying expandable\nfoam material, serving as the primary construction material for the entire\nprocess. A visual depiction of the experimental setup is presented in Fig. 1.\n3\n\n\nExtruder\nPrinting\nSurface\nPrinted\nChunk\nLanding\nGear\nDownwash\nCover\nFigure 1: Aerial robotic constructor autonomously building a chunk using the proposed\nmesh decomposition-based aerial additive manufacturing framework, while extruding ma-\nterial below it.\n1.1. Related Work\nThe concept of employing robots to automate the construction process\nhas been a long-standing area of research and remains a significant focus of\nongoing studies. The majority of the research so far primarily focused on\nmanipulators supported with ground robots, which either transport and as-\nsemble basic building blocks to form a given structure or follow the material\ndeposition based additive manufacturing approach, where material is either\ncarried by the robots or supplied externally [14]. In [15] pioneering research\ndemonstrates multiple ground robots collaboratively constructing structures\nusing stigmergy, an indirect coordination mechanism, by assembling the fun-\ndamental stigmergy block. Another study presented in [16] used a manipu-\nlator placed on top of a holonomic mobile robot where cementitious material\nwas deposited while simultaneously moving and controlling the arm. This\napproach enhances flexibility and expands the working envelope. Addition-\nally, aiming to achieve automated printing-in-motion a high-level planning\nalgorithm integrated with a Model Predictive Controller (MPC) is intro-\nduced generating robot-base paths in order to avoid collisions and maintain\n4\n\n\ntask reachability [17, 18]. Building on a similar concept, [19] presented two\nmobile ground robots equipped with manipulators that print the same struc-\nture concurrently while handling potential collisions between them. Addi-\ntionally, [20, 21] considered a swarm of ground robots that construct a given\nstructure by splitting it into predefined smaller parts and assigning them to\nthe robots.\nIn contrast, adoption of aerial robots in autonomous construction is evi-\ndently lower compared to the ground-based systems due to their inherent\ncomplexity to achieve highly precise motion and associated control chal-\nlenges. The concept of assembling walls using bricks carried by UAVs was\nfirst introduced in [22], where four quadrotors collaboratively assembled a\nlarge-scale installation, coordinated and monitored in a centralized approach.\nFollowing these initial studies, the concept of autonomous wall building us-\ning aerial robots was further investigated by various teams of researchers as\npart of the globally renowned MBZIRC robotic competition [23, 24, 25]. In\nanother approach towards aerial construction, tensile structures made out of\nropes were build by identifying basic building elements of them like knots\nand ropes and translate them into coordinated quad-copter movements. The\nrobots utilized hybrid force-position control strategies and structures such as\nbridges were built [26]. The concept of equipping UAVs as workers carrying\ncustom ”drone compatible” construction elements is also considered in [27]\nwhere four different families of bricks are created and evaluated in a lab. Re-\nmote controlled flight were executed and primitive shapes were constructed\nand tested.\nThe concept of deploying a flying robot in autonomous construction and\nadditive manufacturing, as a robotic worker carrying extrusion material on-\nboard, is a relatively recent idea, initially presented in a feasibility study [28].\nThe study highlighted the challenges and limitations of the concept applied in\ntwo scenarios, the first for using it as a means to repair damaged structures\nand the second, to construct new structures. Following this idea, a more\nintensive study has been presented in [29], which investigated two different\ntypes of materials for the performance evaluation. Particularly, expandable\npolyurethane foam was carried by a single UAV which after making multiple\nflights it manufactured a large scale tower while a scanner UAV was adjust-\ning the printing process and detecting anomalies and errors in the printing\nstructure. In addition, another UAV equipped with a delta manipulator on\nits bottom part to reduce positioning inaccuracies deposited a cementitious\nmaterial in various patterns. The multi-agent scenario was only tested in\n5\n\n\nsimulation and in real flight emulations, without physical printing, where\nprinting tasks are assigned in a predefined way UAVs. In our recent work\n[13, 30, 31], a chunk based framework towards aerial additive manufactur-\ning is presented. In this framework, a shape to be constructed is split into\nsmaller chunks formed using planar cuts, which can be sequentially assigned\nfor printing based on the order of the execution sequences. However, all our\nprevious efforts have been largely constrained to evaluations within simula-\ntion or emulation scenarios, primarily focusing on the theoretical validation\nof the conceptual development, without any real-world implementation of\nthe aerial construction process through the deployment of UAVs in actual\n3D printing operations, aimed at physically constructing a structure.\n1.2. Contributions\nIn contrast with the existing literature, this article considers a significant\nleap by introducing the experimental evaluation of a novel mesh-decomposition-\nbased aerial 3D printing framework, making a critical advancement in bridg-\ning the gap between simulation and real implementation.\nThe research\ndemonstrates a UAV, precisely maneuvering through designated paths in\nfully autonomous mode while physically extruding material to manufacture\nvarious tangible geometrical shapes. To achieve this milestone, various prac-\ntical limitations associated with aerial operations are carefully considered,\nand intricate challenges associated with real-time execution are systemat-\nically addressed.\nTowards this, an aerial hexacopter robotic construction\nplatform is designed and equipped with a pressurized container of lightweight\nexpandable foam material. The extrusion of the printing material is con-\ntrolled through the onboard computer, enabling precise material deposition\nduring flight. The overall construction pipeline considers an optimal chunk-\ning strategy to efficiently decompose the structure into multiple parts, which\nare systematically organized through a dependency graph to ensure seamless\nsequential execution. Practical execution challenges, such as ground effect\ndisturbances due to the proximity of the aerial platform to the ground, along\nwith the change in the mass of the overall setup while depleting material\nduring flight, lead to significant deviations of the intended flight trajectory.\nIn order to address this issue, the framework integrates an onboard offset-\nfree Nonlinear Model Predictive Control (NMPC) approach coupled with a\nreactive Nonlinear Moving Horizon Estimator (NMHE). This control strat-\negy dynamically updates the prediction model in real time, compensating for\nexternal disturbances and model mismatches, ensuring precise trajectory fol-\n6\n\n\nlowing throughout the printing process. Another challenge encountered is the\nslippage of deposited material after extrusion, due to downward wind gusts\nappearing from the UAV’s propellers. While the material’s adhesiveness is\nideally expected to ensure bonding with the previously deposited layer, in\npractice, the downwash airflow often disrupts the expected behavior. To ad-\ndress this, an interlocking mechanism is introduced in the chunking process\nto enhance structural cohesion and improve layer adhesion. Additionally, a\nprotective umbrella-like structure is integrated into the mechanical design to\nshield the deposition area from propeller-induced wind disturbances. The\narticle provides detailed insights from experimental results, showcasing the\nframework’s successful transition from conceptual development to practical\napplication. The efficacy of the framework is evaluated on various geometric\nshapes and is critically analyzed on various aspects such as deviations be-\ntween the desired and the printed chunks, margins of execution errors and\ninfluence of physical phenomena such as downwash generated by the pro-\npellers while flying and the influence of ground-effects. It concludes with a\ndiscussion of future research directions, paving the way for further advance-\nments in aerial additive manufacturing.\n2. Organization of the Article\nThe rest of the article is organized as follows.\nAll the notation used\nthroughout the paper along with some preliminaries are presented in Sec-\ntion 3. In Section 4, an overview of the problem formulation and the overall\nsystem architecture is presented, while in Section 5 the search algorithm for\nfinding the best planar cuts to fragment the mesh is analyzed. The gen-\neration of the dependency graph mechanism for identifying the precedence\nconstraints between the chunks along with the generation of the manufactur-\ning sequence of the chunks are analyzed in Section 6. A final post-processing\nstep carried out to enhance the enhancing the adhesion between the chunks\nand guarantee the coverage of each chunk from its corresponding manufac-\nturing path are presented in Section 7. The movement execution, control,\ndisturbance estimation and the coordination of the UAV are presented in\nSection 8. Additionally, the hardware setup and the designed robotic plat-\nform along with the material selection can be found in Section 9. The whole\nframework evaluation and concept validation is verified in real-life experimen-\ntation results in Section 10 while a thorough discussion on them is carried\nout in Section 11. Finally, the article is concluded in Section 12.\n7\n\n\n3. Notations and Preliminaries\nThe notation and conventions described in the following will be used\nthroughout the paper. All sets are notated with capital calligraphic letters\nas follows for set 𝒮and |𝒮| denotes the cardinality (number of the items) of\nthe set, while 𝓢is a collection of sets 𝒮𝑖. A three-dimensional vector in space\nis notated as\n⃗𝑣∈ℝ3.\nA graph, denoted as G = {𝒱, ℰ}, will be defined by the vertices set 𝒱\nand the edges set ℰ. A geometrical mesh M = {𝒱, ℱ} is considered a set of\nvertices 𝒱= {𝑣𝑖∣𝑖= 1, 2, … , 𝑁𝑀} where 𝑣𝑖= (𝑥𝑖, 𝑦𝑖, 𝑧𝑖) ∈ℝ3 and a set of\nfaces 𝐹= {𝑓𝑗∣𝑗= 1, 2, … , 𝑚} where 𝑓𝑗= (𝑣𝑖1, 𝑣𝑖2, 𝑣𝑖3) ∣𝑣𝑖1, 𝑣𝑖2, 𝑣𝑖3 ∈𝑉.\nAdditionally, three main frames are used throughout the paper and are\nshown in Fig.1. The world frame 𝕎is arbitrarily placed at the center of the\nroom where the experiment is taking place, the UAVs body frame 𝔹which is\nplaced on the center of mass of the UAV and the extruder’s frame 𝔼which is\nplaced at the tip of the extruder. The above notations and conventions will\nbe applied consistently for clarity and precision.\n4. System Overview\nInitially, the original mesh M𝑜𝑟designed by the user in a Computer-\nAided Design (CAD) software, with the intention of being constructed, is\nprovided as input to the entire framework. The first step of the pipeline is\nto generate printing tasks for the available UAVs via splitting the mesh M𝑜𝑟\ninto smaller sub-parts. This is handled by the Chunking algorithm, which\nsearches for the best set of planar cuts 𝒫that will fragment the mesh into\nmultiple chunks 𝐶𝑖contained in set 𝒞. Both executed cuts and the resulting\nchunks are handled in a structured way using a Binary Space Partitioning\n(BSP) Tree 𝒯[32] and each tree is given a heuristic score that facilitates\ntheir evaluation during the search algorithm. Upon completing the search\nand generating the final chunks, a dependency graph G is constructed. This\ngraph comprehensively captures and manages all interdependencies among\nthe chunks. This systematic approach provides a structured representation of\nthe potential manufacturing pathways and sequences for reconstructing the\noriginal mesh. Furthermore, it enables the identification of available chunks\nfor manufacturing at any given point in time. Through a dependency metric\nfor each chunk in the graph, a manufacturing sequence 𝒞𝑠𝑒𝑞is calculated\niteratively.\nThis sequence imposes the order in which the chunks will be\n8\n\n\nmanufactured sequentially from the available UAVs, ensuring an efficient\nmanufacturing process. Additionally, after the chunks are generated, they\nundergo processing through a slicer software. This slicer after incorporating\nthe corresponding hardware and material specifications of the mission, it\ntransforms each chunk 𝐶𝑘into a manufacturing path 𝒫𝑘which is to be\ntraversed by the extruder while printing in order to successfully manufacture\nthe chunk.\nA coordinator module is reactively commanding the UAV to\ncontinue to the printing process of the next chunk, as soon the currently\nassigned is completed or sending it back to its home position in case its\nbattery is low. A schematic overview of the overall system architecture is\nshown in Fig. 2.\nChunker\nDep.Graph\nGenerator\nSequence\nGenerator\n8\n7\n6\n5\n4\n3\n2\n1\n0\nSlicer\nCoordinator\nPrinting UAV\nOdometry\nFigure 2: Schematic representation of the overall system architecture\nThe extrusion action along with the motion of the UAV are coordinated\nby an printing executor module. Specifically, the reference position of the\nUAV is fed to an onboard Offset-Free Non-Linear Model Predictive Controller\n(NMPC) that then interacts with the low-level flight controller leading to\nthe desired path execution. The model used for the NMPC is dynamically\nupdated using a disturbance estimator in order to improve the accuracy of\nthe printing process. Simultaneously, direct servo commands are given to a\nservo controlling the extruder’s valve and thus the flow of the construction\nmaterial. A schematic overview of the UAV’s onboard execution architecture\nis shown in Fig. 3.\n9\n\n\nFlight\nController\nMeasured\nState \nPath\nExecutor\nNMPC\nRef.\nPosition\nRef.\nAttitude\nThrust\nUAV\nExtruder\nDisturbance\nEstim.\nEstimated\nDisturbance\nManufac.\nPath\nFigure 3: Printing UAV’s onboard execution architecture\n5. Mesh Decomposition - Chunking\nThe splitting of the given mesh is executed using multiple planar cuts that\nslice it into smaller sub-parts notated as chunks. Each planar cut, notated\nas Π𝑘, corresponds to a plane 𝑝𝑖,𝑗defined by the normal vector\n⃗𝑛𝑖∈ℝ3 and\nthe origin point\n⃗𝑝𝑗∈ℝ3 which is a point laying on it. Whenever a cut Π𝑘of\na plane 𝑝𝑖,𝑗is executed with a single mesh 𝑀𝑘, it splits it into two parts, one\nlaying over the plane in the half-space in the direction of the normal vector\n⃗𝑛𝑖which is called positive and notated as 𝑀+\n𝑘and the negative one 𝑀−\n𝑘that\nis laying in the half space below the plane in the opposite direction of the\nnormal. All the sequential cuts to the original mesh M𝑜𝑟are handled via a\nBSP tree 𝒯where all of its leaves nodes correspond to the generated chunks\n𝐶𝑘and the planar cuts along with the resulting meshes at the various depths\nare stored in the intermediate ones. Whenever a new cut is executed, the\naffected chunk nodes are extended by following the convention of placing the\nnegative chunk as the left subordinate. Thus, a systematic way of handling\nthe chunks, executing new cuts, and extending the tree is realized.\nThe search for finding the best planar cuts set 𝒫= {Π0, Π1, … , Π𝑀},\nwhere 𝑀is the total number of selected cuts occurs iteratively, following a\nbeam search algorithm [13]. This happens by generating a pool of normals\n⃗𝑛𝑖and uniformly sampling them from a spherical space 𝓢. In each iteration\nof the algorithm, various possible extensions of the current search trees are\nevaluated by generating a family of planes for each sampled normal\n⃗𝑛𝑖by\ncalculating origin points\n⃗𝑝𝑗along the direction of the normal. Between all\n10\n\n\nthe extensions of each tree 𝒯𝜇, the top 𝑊𝑖𝑛𝑛𝑒𝑟are selected to be placed in\nthe set of all the extended trees of the iteration. After the extensions of all\nthe trees are placed in the set, the top 𝑊𝑜𝑢𝑡𝑡𝑒𝑟ones are selected to proceed to\nthe next iteration. In this way, the computational burden of calculating all\nthe possible trees , which scales exponentially in size and calculation time, is\nmitigated by forwarding the most promising trees to the following iterations.\nThe search algorithm halts when all the 𝑊𝑜𝑢𝑡𝑡𝑒𝑟trees are considered terminal.\n5.1. Printability Constraints\nThe sampling space 𝓢of the normals\n⃗𝑛𝑖is of radial distance 𝑟= 1.\nAn upper bound, denoted as 𝜙max, is enforced on the polar angle 𝜙to ad-\nhere to printing constraints, while the azimuthal angle 𝜃is also constrained\nwithin 𝜃max. These bounds are carefully chosen based on the printability con-\nstraints and the limitations of the available hardware setup [13]. Specifically,\nto ensure sufficient overlap between adjacent faces of printed chunks, thus\nenabling consecutive layers to possess sufficient contact surface for bonding\nand resulting in a structurally robust outcome, an initial constraint 𝜙max\nar\nis set on the polar angle 𝜙. Additionally, another bound 𝜙𝑐𝑜𝑙𝑙\n𝑚𝑎𝑥is imposed\nthat ensures no collision between the extruder and the previously deposited\nmaterial will occur. The extruder head is considered a rectangle of length 𝑙\nand height ℎresulting into 𝜙𝑐𝑜𝑙𝑙\n𝑚𝑎𝑥= 𝑎𝑟𝑐𝑡𝑎𝑛(ℎ/𝑙). Finally, the upper bound\nof the polar angle is considered the maximum of the aforementioned ones\n𝜙𝑚𝑎𝑥= 𝑚𝑎𝑥(𝜙𝑎𝑟\n𝑚𝑎𝑥, 𝜙𝑐𝑜𝑙𝑙\n𝑚𝑎𝑥) so finally 𝜙∈[0, 𝜙𝑚𝑎𝑥]. The constraint in the\nazimuthial angle 𝜃is irrelevant of the hardware setup and is selected to be\n𝜃∈[−𝜋, 𝜋] so that it covers the whole range.\n5.2. Tree Evaluation Heuristics\nIn the evaluation process, each extended tree, denoted as 𝒯𝑖, undergoes\nevaluation using a heuristic scoring system aimed at identifying the most\npromising candidates. This heuristic integrates various desired characteris-\ntics essential for optimal performance in the manufacturing process facilitated\nby the available UAVs. These attributes, defined mathematically, encompass\nqualities conducive to smooth, efficient and seamless manufacturing process.\nThese features, are assessed collectively by either rewarding the favorable\nones and penalizing the undesired ones.\n11\n\n\n5.2.1. Volume Dispersion\nUniform volume distribution among the chunks is preferred, so their man-\nufacturing times will remain similar and lead to a smaller waiting time of the\nUAV being idle and waiting for the other to finish, thus resulting in a faster\noverall printing time. Furthermore, uniform volume distribution ensures an\neven arrangement of chunks, allowing for adequate spacing between their ge-\nometric centers. This trait is formulated using the volume dispersion metric\n𝑐𝑣= 𝜎/𝜇∈ℝwhere 𝜇= ∑𝑁\n𝑖=1 𝑉𝑖/𝑁, 𝜎= ∑𝑁\n𝑖=1(𝑉𝑖−𝜇)2/𝑁and 𝑉𝑖denot-\ning the volume of the 𝑖-th chunk, while 𝑁the total number of the generated\nchunks. Finally, the resulting volume dispersion heuristic is as follows:\nℎ𝑑= 𝒲𝑑𝑐𝑣\n(1)\n5.2.2. Seed Chunks\nAiming to parallelize the generated printing tasks that are going to be\nassigned to the UAVs and thus make the whole manufacturing process faster,\nthe number of seed chunks in the final tree is rewarded. Specifically, similarly\nto the notation in [33], a ”seed” chunk is a chunk that all of its faces, apart\nfrom the one that is parallel to the ground, are acting as support to the adja-\ncent chunks. With their presence, the manufacturing complexity is decreased\nsince they can be printed on top of a flat chunk or on the ground and all of\ntheir faces act as supports for the other chunks. Towards the seed evaluation\nof a chunk 𝐶𝑘, its faces generated from the planar cuts are examined. A\nface 𝑓𝑗that is co-planar with the cut Π𝑖and lies on the negative half-space\ndefined by it is called positive and is indicated by the term 𝑓+\n𝑗= 1. The\nnecessary condition for the chunk to be considered seed is that all of its faces,\nexcluding the one parallel to the ground, are positive. Its seed property is\nsignified by the term 𝑠𝑘= 1. An indicative example of a seed chunk 𝐶𝑘is\nshown in Fig. 4. There are three planes Π𝑖, Π𝑗, Πℎinvolved in the generation\nof its faces and the two of them are defining cuts in which the mesh is in\nthe negative side of both of them while the Πℎis a ground plane and is not\ntaken into consideration in the evaluation.\nThe seed chunk is rewarded by including it in the heuristic 𝑔(𝐶𝑘) for any\nchunk 𝐶𝑘while the number of the positive faces is included as well as shown\nin Eq. 2.\n𝑔(𝐶𝑘) = 𝒲𝑠𝑠𝑘+ 𝒲𝑓\nΓ\n∑\n𝑗=0\n𝑓+\n𝑗\n(2)\n12\n\n\nFigure 4: Seed Chunk 𝐶𝑘Representation with Faces Touching Planes: Faces for Π𝑖and\nΠ𝑗are Positive, while Πℎis Parallel to the Ground.\nwhere 𝒲𝑠, 𝒲𝑓∈ℝ−are tunable weights. In this particular case, since\nthis term needs to be rewarded the gains are selected to be non-positive.\n5.2.3. Ground planes\nIt is observed that planar cuts with normals perpendicular to the ground\nfacilitate the construction process. This is because the resulting chunks, upon\nextraction, rest neatly atop one another, providing sufficient area for support.\nMoreover, the flat faces of these chunks contribute to enhancing the quality\nof the final construction. Despite potential inaccuracies in UAV and extruder\nplacement, these flat faces offer stable surfaces to support subsequent lay-\ners. Therefore, the selection of such cuts is considered advantageous for the\nprocess. However, it is not mandatory to include them in every instance,\nas an excess of ground cuts can be unfavorable since too many ground cuts\nincrease dependencies and fail to parallelize printing tasks efficiently. Thus\naiming to let the search algorithm select them, the number of ground cuts\nis rewarded and included in the heuristic function. A planar cut Π𝑖is con-\nsidered a ground cut if its normal vector\n⃗𝑛𝑖is parallel to the ground plane\nnormal\n⃗𝑛𝑔= [0, 0, 1]. So the term 𝑔𝑖referring to the planar cut Π𝑖is included\nin a sub-heuristic ℎ𝑔\nℎ𝑔=\n𝑀\n∑\n𝑖=0\n𝑔𝑖\n(3)\nwhere 𝑀corresponds to the number of planar cuts and\n𝑔𝑖= {1\n, if\n⃗𝑛𝑖×\n⃗𝑛𝑔= 0\n0\n, otherwise\n(4)\n13\n\n\nAll the planes of the set 𝒫identified as ground ones as well, are placed\nin the subset 𝒫𝐺⊆𝒫.\n5.2.4. Critical size Chunks\nThroughout the execution of multiple planar cuts, it is possible that small\nchunks may appear. These are considered side-effects of the chunking algo-\nrithm and are not useful for the overall manufacturing of the original mesh\nsince they result in extra movements and waiting time for the rest of the\nUAVs. Aiming to mitigate such kind of chunks, a critical threshold 𝑉𝑐𝑟∈ℝ\nis considered on their volume. The existence of chunks having a volume less\nthan the threshold is penalized by incorporating into the heuristics as follows:\nℎ𝑐𝑟\n𝑉=\n𝑁\n∑\n𝑖=0\n𝒲𝑐𝑟𝑠𝑐𝑟\n𝑘\n(5)\nwhere\n𝑠𝑐𝑟\n𝑘= {𝑉𝑘\n, if 𝑉𝑘< 𝑉𝑐𝑟\n0\n, otherwise\n(6)\nSince the volume is penalized only if it crosses the lower bound and 𝒲𝑐𝑟,\na tunable gain set to a high value represents an impulse penalization of the\nsmall chunks.\nIn similar fashion. chunks with at least one dimension smaller than the\nprinting line width are likely to cause issues during the slicing process, where\nmanufacturing paths are generated.\nThese chunks may not be identified\ncorrectly or, due to their small size, may make execution more difficult.\nFollowing that, each chunk is further evaluated by generating the Oriented\nBounding Box(OBB) 𝒪𝐵𝐵corresponding to it. The OBB is a generalized\nform of a simple bounding box that is also rotated in the 3D space so that\nit encaptures the given mesh completely. It is defined as follows:\n𝒪BB = {𝑝∈ℝ3 ∶𝑝= 𝐶+ 𝜆1 ⃗𝑢1 + 𝜆2 ⃗𝑢2 + 𝜆3 ⃗𝑢3}\n(7)\nwhere 𝐶∈ℝ3 denotes the center of the box,\n⃗𝑢1, ⃗𝑢2, ⃗𝑢3 are orthonormal\nunit vectors defining the orientation of the box and 𝑒1, 𝑒2, 𝑒3 ∈ℝare the\nextents along each axis. In the case that the minimum of the extents 𝑒min =\nmin(𝑒1, 𝑒2, 𝑒3) is less than the line-width 𝑙𝑤, another critical penalization\n14\n\n\noccurs. It is formally formulated as follows:\nℎ𝑐𝑟\nBB =\n𝑁\n∑\n𝑖=0\n𝒲𝑐𝑟𝑏𝑐𝑟\n𝑘\n(8)\nwhere\n𝑏𝑐𝑟\n𝑘= {1\n, if 𝑒𝑘\nmin < 𝑙𝑤\n0\n, otherwise\n(9)\nFinally the two aforementioned heuristic of critical size and dimension\npenalization are fused into a common one:\nℎ𝑐𝑟= ℎ𝑐𝑟\n𝑉+ ℎ𝑐𝑟\nBB\n(10)\n5.2.5. Overall Heuristic\nAll the aforementioned heuristics for any given BSP tree 𝒯are fused into\na common one ℎ𝒯∈ℝby summing them as follows:\nℎ𝒯= ℎ𝑑+\n𝑁\n∑\n𝑘=0\n𝑔(𝐶𝑘) + ℎ𝑔+ ℎ𝑉\n(11)\n5.3. Terminal Condition\nMaking the chunking adaptive to the available UAV fleet characteristics,\nthe beam search is conducted iteratively until all outer trees 𝒲𝑜𝑢𝑡𝑡𝑒𝑟for-\nwarded to the next search iteration are terminated.\nA tree 𝒯is deemed\nterminal when all of its components can be printed by at least one UAV.\nThis follows the convention that each chunk is printed by only one UAV, and\none UAV can print multiple chunks, but not vice versa. Towards that, the\nvolume of the material carried by a UAV 𝑟is denoted as 𝑑𝑟and all the avail-\nable UAVs’ volumes are placed in a descending order in the set 𝒟. Similarly,\nthe volume of the chunk 𝐶𝑘is denoted as 𝑐𝑘and all of them are placed in\ndescending order in the set 𝒞. Thus, the tree is considered terminated when\na non-empty set 𝒮exists and is defined as follows:\n𝑆= {𝑎𝑙= (𝑑𝑗, 𝑐𝑖) ∶𝑑𝑗> 𝑐𝑖} ≠∅, ∀𝑙= [1, … , 𝑘]\n(12)\nand the aforementioned sets are updated recursively.\n15\n\n\nPlanes Contact\nPolygon Calculation\n2D Polygon Projection\nIntersection\nChunks Pair \nEvaluation\nFigure 5: Plane contact and face contact checking during Dependency Graph Generation.\nDepsite the coorespondling planes of faces are touching in both cases, there is contact on\nthe faces level only on the bottom one.\n6. Dependency Graph - Printing Tasks Assignment\nAfter having generated all the chunks, there are various ways the manu-\nfacturing process could be conducted so that the original mesh is constructed.\nThe constraint that the negative chunks should be printed prior to the pos-\nitive ones must be followed since they act as support for them. Aiming to\ncapture all their inter-dependencies, a dependency graph is calculated that\ntransforms the BSP tree 𝒯to a graph mechanism used to indicate the chunks\nthat can be printed at any given time without violating the rule mentioned\nbefore and be updated recursively whenever a new chunk is manufactured.\nSpecifically, a directed graph G = (𝒞, ℰ) is derived from the generated BSP\ntree, where the set of nodes is denoted as 𝒞= {𝐶𝑘, 𝑖= 0, .., 𝑁} correspond-\ning to the set of generated chunks and 𝑁equal to the number of generated\nchunks and the set ℰ= {𝐸𝑖,𝑗} containing all the directed edges. An edge\n𝐸𝑖,𝑗between nodes representing chunks 𝐶𝑖and 𝐶𝑗exists if and only if 𝐶𝑖\nis dependent on 𝐶𝑗. An algorithmic approach is conducted to calculate the\ndependency between two chunks.\nToward the calculation of dependency between two chunks 𝐶𝑘and 𝐶𝜆,\nall of their faces are evaluated in pairs. Initially, all planar cuts Π𝑖of the tree\nthat were involved in the generation of chunk 𝐶𝑘are gathered in a set 𝒫𝑘and\nall the faces of the chunk are placed into the set ℱ𝑎𝑙𝑙\n𝑘\n= {𝑓𝑘\n𝑖, 𝑖= 0, 1, 𝑀𝑖}\nwhere 𝑓𝑘\n𝑖denotes the plane corresponding to the 𝑖-th facet of the chunk 𝐶𝑘.\n16\n\n\nThe intersection of the aforementioned sets ℱ𝑘= 𝒫𝑘∩𝐹𝑎𝑙𝑙\n𝑘\nis calculated and\nused for the remainder of the process. Having computed the sets ℱ𝑘and ℱ𝜆\nfor the chunks, the pairs of their faces are evaluated for dependency between\nthem. This happens in a two-step method, initially, a check is carried out for\nevaluating whether the two planes corresponding to the faces are co-planar,\nand if this is true the contact between the faces is calculated. The condition\nto determine that the planes Π𝑘\n𝑖, Π𝜆\n𝑗of two facets 𝑓𝑘\n𝑖, 𝑓𝜆\n𝑗are co-planar is\nhaving their normal vectors\n⃗𝑛𝑖and\n⃗𝑛𝑗parallel to each other while at the\nsame time the distance between them 𝑑𝑘,𝑖\n𝜆,𝑗is less or equal than a low positive\nthreshold 𝜖∈ℝ+. The distance between planes is defined as follows:\n𝑑𝑘,𝑖\n𝜆,𝑗= |(⃗⃗⃗⃗⃗⃗⃗⃗\n𝑜𝑘\n𝑖−⃗⃗⃗⃗⃗⃗⃗⃗\n𝑜𝜆\n𝑗) ⋅⃗⃗⃗⃗⃗⃗⃗\n𝑛𝑖|\n(13)\nwhere ⃗⃗⃗⃗⃗⃗⃗⃗\n𝑜𝑘\n𝑖, ⃗⃗⃗⃗⃗⃗⃗⃗\n𝑜𝜆\n𝑗are points lying on the planes of faces 𝑓𝑘\n𝑖and 𝑓𝜆\n𝑗and\n⃗𝑛𝑖\nthe normal vector corresponding to both of them since it has already been\nverified that they are parallel in the previous check. Given that the condition\n𝑑𝑘,𝑖\n𝜆,𝑗≤𝜖is true (where 𝜖∈ℝis a small number), the planes of the faces are\nin contact but the faces themselves need to be checked further to verify the\ndependency. Towards this examination, the polygons 𝑝𝑘\n𝑖and 𝑝𝜆\n𝑗generated\nfrom the edges of the faces 𝑓𝑘\n𝑖and 𝑓𝜆\n𝑗are calculated and projected into the\n2D plane defined by the faces’ planes. The calculation of the overlapping area\nbetween the 2D polygons is carried out and in case it is greater than zero it\nis signified that the two chunks are in contact and concluding in the fact that\nthere is a dependency relation between them. A visual representation of the\nsteps carried out toward the evaluation of the contact between two pairs of\nchunks is shown in Fig. 5.\nOn determining the dependency between chunks, the constraint that the\nvertical 𝑧component of the normal vector\n⃗𝑛𝑖is consistently positive, ensuring\nthe vector always points upwards, is leveraged. Specifically, the characteristic\nof positive and negative chunks, as detailed in Section 5, is exploited to\nidentify the dependent chunk. Given that the positive chunk 𝐶+ consistently\nresides in the half-space defined by the normal vector’s direction, it inevitably\nlays on top of the negative one 𝐶−, establishing that the positive is dependent\non the negative. The pseudocode for the dependency calculation process is\nshown in Algorithm 1.\n17\n\n\nAlgorithm 1 Dependency Calculation of 𝐶𝑘to 𝐶𝜆\nfor 𝑓𝑖\n𝑘in ℱ𝑖do\nfor 𝑓𝑗\n𝜆in ℱ𝑗do\nif 𝑓𝑖\n𝑘.parallel(𝑓𝑗\n𝑘) and 𝑓𝑖\n𝑘.distance(𝑓𝑗\n𝑘) \u0000𝜖then\n𝑝𝑜𝑙𝑘\n𝑖←𝑔𝑒𝑡𝑃𝑜𝑙𝑦𝑔𝑜𝑛(𝑓𝑖\n𝑘)\n𝑝𝑜𝑙𝜆\n𝑗←𝑔𝑒𝑡𝑃𝑜𝑙𝑦𝑔𝑜𝑛(𝑓𝑗\n𝑘)\n𝑎𝑟𝑒𝑎←𝑔𝑒𝑡𝑂𝑣𝑒𝑟𝑙𝑎𝑝(𝑝𝑜𝑙𝑘\n𝑖, 𝑝𝑜𝑙𝜆\n𝑗)\nif 𝑎𝑟𝑒𝑎≥0 and 𝑓𝑖\n𝑘.𝑛𝑒𝑔𝑎𝑡𝑖𝑣𝑒𝑇𝑜(𝑓𝑗\n𝑘) then\nreturn True\nend if\nend if\nend for\nend for\nreturn False\n6.1. Printing Sequence\nEach chunk 𝐶𝑘is considered as an individual printing task that is going\nto be assigned to one of the available UAVs. Having computed the graph G,\na sequence 𝒮in which the chunks are going to be manufactured is selected.\nThis sequence needs to be with respect to the geometrical constraints of the\nchunks, as encaptured by the dependency graph while at the same time, the\naim of alleviating the graph from complex dependency schemes is favorable.\nThe graph serves as a mechanism that contributes to the discovery of the\navailable chunks that can be printed at any given time since the state of\nthe chunks can be set to manufactured and are updated dynamically.\nA\nchunk 𝐶𝑘is considered available to be printed if and only if no nodes are\ndependent on it or if all of its dependent nodes have been manufactured. All\nthe manufactured nodes are placed in the set ℳ. Thus, the availability of\na chunk can be mathematically formulated using the term 𝑎𝑘= 1 which is\ndefined as follows:\n𝑎𝑘= {1, if |𝒩−(𝐶𝑘)| = 0 or 𝒩−(𝐶𝑘) ⊆ℳ\n0, otherwise\n(14)\nwhere 𝒩−(𝐶𝑘) denotes the set of all the descendants of the node corre-\nsponding to the chunk 𝐶𝑘and |.| represents the cardinality of the set. At\n18\n\n\nany given moment, the chunks that can be printed are gathered in the set\n𝒜= {𝐶𝑖∶𝑎𝑖= 1, ∀𝑖= 1, 2, … 𝑁𝑎}. where 𝑁𝑎corresponds to the total\nnumber of the available chunks. In the realm of simplifying the complexity\nof the printing sequence, the chunks with the most dependent nodes on them\nare prioritized in the selection process for generating the manufacturing se-\nquence. Therefore, a score 𝑠𝑘= |𝒩+(𝐶𝑘)| is assigned to each chunk node\nwhere 𝒩+(𝐶𝑘) denotes the set of all the predecessors of the node correspond-\ning to chunk 𝐶𝑘. On top of that, a manufacturability constraint is imposed\nregarding the relative position of the chunks with respect to the utilized\nground planar cuts Π𝑖∈𝒫𝐺, 𝑖= 0, 1, … , 𝑁𝐺where 𝑁𝐺denotes their total\nnumber. Particularly, 𝑁𝐺+1 number of chunk layers ℒ𝐺\n𝑖, 𝑖∈[1, 𝑁𝐺+1] are\nformed, each one of them bounded between either the ground and a ground\nplane or two consecutive ground planes. An iterative process is carried out\nwhere in each iteration the best chunk from the set 𝒜𝒢is evaluated and\nselected to be the next one to be assigned and manufactured to the avail-\nable UAV. The set 𝒜𝑖\n𝒢= 𝐴∩ℒ𝐺\n𝑖is defined as the intersection of the sets\nof available chunks to be printed and the chunks of the ground layer ℒ𝐺\n𝑖.\nInitially, 𝑖is set to 0 and it is increased by one whenever all the chunks of\nthe layer contained in the set ℒ𝐺\n𝑖are manufactured, hence 𝒜𝑖\n𝒢= ∅. As soon\nas a chunk is assigned, it is placed in the set ℳalong with all the manufac-\ntured ones and the graph G is updated. The iterative process is carried out\nuntil 𝒜= ∅, indicating that no more chunks are available and all of them\nhave been manufactured, resulting in the construction of the given mesh. An\noverview of the printing sequence calculation process is shown in Algorithm\n2.\n6.2. Chunks Assignment\nThe assignment of the chunks to each material canister is executed based\non the volume of it. Specifically, each canister is used only once by the robot,\nso all of canister volumes 𝑑𝑖are placed in the set 𝒟in a descending order.\nAn iterative process is carried out where the chunks of the sequence 𝒮are\nassigned to each canister 𝑑𝑖and the assignments are placed in the set 𝒜𝑎𝑠\nas follows 𝒜𝑎𝑠= {(𝑐𝑖, 𝑑𝑗)|𝑐𝑖∈𝒞, 𝑑𝑗∈𝒟} until the available material can\nno longer accommodate for the next chunk in 𝒮. In that case, the canister is\nconsidered fully assigned and the algorithm proceeds to the next one while\n𝒮is updated. The iterative process is carried out until there are no chunks\nleft in 𝒮. An overview of the aforementioned process in pseudocode can be\nfound in Algorithm 3.\n19\n\n\nAlgorithm 2 Printing Sequence Calculation\n𝑖←0\nwhile 𝒜≠∅do\n𝒜←𝑔𝑒𝑡𝐴𝑣𝑎𝑖𝑙𝑎𝑏𝑙𝑒𝑁𝑜𝑑𝑒𝑠(𝐺, ℳ)\nℒ𝑖\n𝐺←𝑔𝑒𝑡𝐶ℎ𝑢𝑛𝑘𝑠𝑂𝑓𝐿𝑎𝑦𝑒𝑟(𝐺, 𝑖)\n𝒜𝐺←𝑖𝑛𝑡𝑒𝑟𝑒𝑠𝑒𝑐𝑡𝑖𝑜𝑛(𝒜, ℒ𝑖\n𝒢)\nif 𝒜𝐺== ∅then\n𝑖←𝑖+ 1\nelse\n𝐶𝑛𝑥𝑡←𝑔𝑒𝑡𝑇𝑜𝑝𝐶ℎ𝑢𝑛𝑘(𝒜𝐺)\n𝑎𝑠𝑠𝑖𝑔𝑛𝑁𝑒𝑥𝑡𝐶ℎ𝑢𝑛𝑘(𝐶𝑛𝑥𝑡)\nℳ.𝑎𝑝𝑝𝑒𝑛𝑑(𝐶𝑛𝑥𝑡)\nend if\nend while\nAlgorithm 3 Chunks Assignment to Canisters\nRequire: 𝒮= {𝑠1, 𝑠2, … , 𝑠𝑛}\nRequire: 𝒟= {𝑑1, 𝑑2, … , 𝑑𝑚}\n▷Sorted in descending order\n𝒜𝑎𝑠←∅\n𝑖, 𝑗←1, 1\n▷Canister, Chunk index\nwhile 𝑖≤𝑛do\n𝑣𝑖←𝑑𝑖\n▷Remaining volume of canister 𝑖\nwhile 𝑗≤𝑛and 𝑠𝑗≤𝑣𝑖do\n𝑣𝑖←𝑣𝑖−𝑠𝑗\n▷Update rem. volume of canister\n𝒜𝑎𝑠←𝒜𝑎𝑠∪{(𝑠𝑗, 𝑑𝑖)}\n▷Update assignments\n𝑗←𝑗+ 1\nend while\n𝑖←𝑖+ 1\n▷Move to the next canister\nend while\nReturn 𝒜𝑎𝑠\n▷Return the final assignment list\n20\n\n\n7. Chunks Interlocking Mechanism\nAfter all chunks are generated and the dependency graph is calculated\nas stated in both Sections 5 and 6, a post-processing step is carried out in\norder to reinforce the cohesiveness between chunks in contact and ensure that\nthe manufacturing paths are covering each chunk entirely, without any gaps.\nSpecifically, after the chunking, the two faces of the contacting chunks gen-\nerated by the planar cut are responsible for their interconnection. However,\ngiven the fact that the layer height is comparable to the overall dimensions\nof the chunks (not a usual phenomenon in conventional 3D printing), there\nare cases during the segmentation of the chunk into layers from the slicing\nsoftware where regions of each layer will have a lower height due to the incli-\nnation of the planar face. These areas are not sliced since they do not suffice\nto be considered as part of the chunk to be manufactured and are discarded.\nExamples of such regions are shown in Fig. 6.a annotated with green color.\n(a)\n(b)\n(c)\n(d)\nFigure 6: Chunks Interlocking Process Intermediate steps. The mesh is splitted into layer\nsegments (a), vertical lines are calculated in the intersection of layers and the faces (b),\nthe regions of inclination are calculated (c) and the final ”stair-case” pattern is formed.\nAiming to accommodate for such resolution artifacts, an intermediate\nprocess is introduced between the chunking and the final slicing of all chunks\n𝐶𝑘∈𝒞. Initially, all pairs of chunks in contact are placed in a set\n𝒞𝑐𝑜𝑛= {(𝐶𝑘, 𝐶𝑙) ∶𝑓𝑐(𝐶𝑘, 𝐶𝑙) = 1}\n(15)\nwhere 𝑓𝑐(𝐶𝑘, 𝐶𝑙) signifies the contact between the 𝑘-th and 𝑙-th chunks\nand a connection algorithm is carried out for each pair in it. Both chunks\nare explicitly sliced into layer segments 𝑙𝑘\n𝑖∈ℒ𝑘, 𝑙𝜆\n𝑗∈ℒ𝜆by cutting them\nwith a vertical plane in intervals equal to the layer height 𝑙ℎ∈ℝ(shown\nin Fig. 6.b). Later, a calculation of the points 𝑃𝑖𝑛\n𝜇\nis carried out, where\n𝑃𝑖𝑛\n𝜇are the intersection points between the diagonal line 𝑑𝜅,𝜆defined by the\nfaces in contact and the horizontal lines ℎ𝑖used to segment the chunks in\n21\n\n\nlayers. For every point 𝑃𝑖𝑛\n𝜇, a vertical line 𝑣𝜅,𝜆\n𝑖\n∈𝒱𝜅,𝜆is passing through\nit, separating the top chunk 𝐶𝜆further into regions of inclination 𝑖𝑖∈ℐ𝜅,𝜆\nand regions with flat borders 𝑏𝑖∈ℬ𝜅,𝜆as shown in Fig. 6.c. Finally, a\nconvention is used defining that during the interlocking process, the artifacts\ndue to layer segmentation are incorporated into the bottom chunk of each\npair in contact and extend it so that they form a staircase-like pattern. The\ngreen regions notated with 𝑖𝑖are connected with their corresponding layer\nsegment 𝑙𝜅\n𝑖resulting into the final result shown in Fig. 6.d. An overview of\nthe whole process is shown in Algorithm 4.\nAlgorithm 4 Chunks Interlocking Algorithm\n𝒞𝑐𝑜𝑛←𝑔𝑒𝑡𝐶ℎ𝑢𝑛𝑘𝑃𝑎𝑖𝑟𝑠𝐼𝑛𝐶𝑜𝑛𝑡𝑎𝑐𝑡()\nfor 𝐶𝑖, 𝐶𝑗in 𝒞𝑐𝑜𝑛do\nℒ𝑘, ℒ𝜆←𝑠𝑙𝑖𝑐𝑒𝐻𝑜𝑟𝑖𝑧𝑜𝑛𝑡𝑎𝑙𝐿𝑎𝑦𝑒𝑟𝑠(𝐶𝑖, 𝐶𝑗)\n𝒱𝜅,𝜆←𝑐𝑎𝑙𝑐𝑢𝑙𝑎𝑡𝑒𝑉𝑒𝑟𝑡𝑃𝑙𝑎𝑛𝑒𝑠(ℒ𝑘, ℒ𝜆, 𝑑𝜅,𝜆)\nℐ𝜅,𝜆, ℬ𝜅,𝜆←𝑠𝑙𝑖𝑐𝑒𝐿𝑎𝑦𝑒𝑟𝑠𝑊𝑖𝑡ℎ𝑃𝑙𝑎𝑛𝑒𝑠(ℒ𝜆, 𝒱𝜅,𝜆)\nℒ𝑘←𝑐𝑜𝑛𝑛𝑒𝑐𝑡𝐹𝑟𝑎𝑔𝑚𝑒𝑛𝑡𝑠𝑇𝑜𝐵𝑜𝑡𝑡𝑜𝑚(ℒ𝑘, ℐ𝜅,𝜆)\n𝐶𝑖, 𝐶𝑗←𝑢𝑛𝑖𝑡𝑒𝐵𝑎𝑐𝑘𝑇𝑜𝑔𝑒𝑡ℎ𝑒𝑟(ℒ𝑘, ℬ𝜅,𝜆)\nend for\nThe aforementioned process steps are shown in 3D in Fig. 7, where two\nchunks in contact originated from a decomposed solid rectangle are connected\nusing the staircase pattern. Initially, the vertical planes are calculated and\nvisualised (top), later along with the horizontal plane the parts 𝑖1, 𝑖2 ∈𝕀\nare calculated after the slicing with the planes and are visualised with green\n(middle). The final processed chunks are shown (bottom) where the ”stair-\ncase” pattern between the chunks is formed. All the chunks of the solid box\nbefore and after the interlocking post-processing module are shown in Fig.\n8.\n22\n\n\nFigure 7: 3D visualization of the intermediate steps during during the interlocking process\nof two chunks (blue and yellow) in contact generated from a decomposed solid rectangle.\n23\n\n\n(a) Chunks before the interlocking process\n(b) Chunks after the interlocking process\nFigure 8: Chunk Interlocking Mechanism applied to a decomposed mesh: Initially, planar\ncuts define the connections (a), but after processing (b), increased contact areas improve\nadhesion and ensure proper handling during slicing.\n8. UAVs Printing Execution\nBefore any chunk 𝐶𝑘is assigned to an available UAV, a series of steps is\nperformed so that the 3D geometry of the mesh is transformed into actual\nmovements of the UAV and deposition of the carried material. Specifically, a\nslicer software accommodates for the 3D triangles set to manufacturing paths\nthat the UAV needs to traverse in order to achieve the manufacturing of the\nrespective part. Having generated the path 𝒫𝑘for the UAV, it is passed to\nthe printing executor module that coordinates the motion of the UAV by\ninterfacing a Non-Linear Model Predictive Controller (NMPC) and directly\ncontrolling the extrusion of the material.\n8.1. Chunks Slicing - Manufacturing Paths\nEach chunk 𝐶𝑘is handled in a stereo-lithography format(.stl) consisting\nof a set of vertices and triangles connecting them. The transformation of\nthis abstract geometric structure to meaningful paths that the UAV will\ntraverse is handled by an open-source slicer software ’Cura’ [34] which is\nconsidered one of the standards for classic 3D printing. Specifically, adjusting\n24\n\n\nthe parameters and setting up the software in the particularities of the aerial\n3D printing setup such as the material line width, layer height, extruder\ndimensions, etc., the path 𝒫𝑒𝑥\n𝑘\nis generated. This 3D path is consisted of\npoints that the extruder needs to visit by executing linear movements in each\nsegment so that it results in the construction of the given chunk. Additional\ninformation generated from the slicer such as extruder temperature, moving\nspeed and extrusion rate are neglected since there is no need for a heating\nelement for the current material section and both UAV speed and extrusion\nrate of the material are handled by the printing executor module. However,\nthe path 𝒫𝑒𝑥\n𝑘\ncorresponds to the extruder movement, not the UAV itself.\nAssuming that the roll and pitch angle of the UAV is sufficiently small so\nthat its rotation does not diverge the tip of the extruder, a vertical elevation\nof the path to match the body frame of the UAV is performed and the final\npath 𝒫UAV\n𝑘\nis calculated. The generated manufacturing paths for two chunks\nthat are later going to be assigned to the UAVs are shown in Fig. 9.\nManufacturing Path\nIntermediate Segments\n(a) Side View\n(b) Top View\nFigure 9: Generated Manufacturing paths of two chunks after slicing. The Manufacturing\npath is marked with red while the intermediate segments where no material extrusion\noccurs are marked with blue.\n8.2. Printing executor\nOnce the path 𝒫𝑈𝐴𝑉\n𝑘\nis generated, it is sent to the printing executor mod-\nule. This module manages all the movements of the UAV, and it is responsible\nfor coordinating with the chunker to receive the generated chunks. At the\nsame time, it interfaces with the extrusion mechanism to control the material\ndeposition. Additionally, it provides position references to the NMPC mod-\nule, which handles the traversal of the manufacturing path. This is done by\n25\n\n\nassuming a constant deposition speed 𝑉𝑑𝑒𝑝∈ℝduring the printing execution.\nEach linear segment 𝑙𝑖of the path 𝒫𝑈𝐴𝑉\n𝑘\nis interpolated and the sequential\npoints are provided to the NMPC with respect to the aforementioned speed\n𝑉𝑑𝑒𝑝. In parallel with the traversal of the path, the executor commands the\nstart of the deposition of the material right before the execution of the first\nlinear segment and commands its halt at the end of the traversal since vari-\nous movements are occurring from the UAVs’ home positions to the printing\nworkspace.\n8.3. Non-Linear Model Predictive Controller (NMPC)\nConcerning the movement of the UAV in space, an onboard Non-Linear\nModel Predictive Controller (NMPC) [35] is utilized. As mentioned before, it\nis commanded by the printing executor that is feeding it position references\nfor the UAV and it executes the movements by interfacing with an onboard\nflight controller. Specifically, the UAV dynamics are described via the world\nframe 𝕎∈ℝ3 and the body frame 𝔹∈ℝ3 attached to the center of mass of\nthe UAV as shown in Fig. 1.\nThe dynamic non-linear equations governing the motion of the UAV in\nthe 3D space are as follows:\ṅ𝑝(𝑡)\n=\n𝑣(𝑡) + 𝑤𝑝\ṅ𝑣(𝑡)\n=\n𝑅𝑥,𝑦(𝜃, 𝜑)T + G −A𝑣(𝑡) + 𝑤𝑣\n(16)\ṅ𝜑(𝑡)\n=\n1\n𝜏𝜑\n(𝐾𝜑𝜑ref(𝑡) −𝜑(𝑡)) + 𝑤𝜑\ṅ𝜃(𝑡)\n=\n1\n𝜏𝜃\n(𝐾𝜃𝜃ref(𝑡) −𝜃(𝑡)) + 𝑤𝜃\nwhere the position of the UAV in any given time 𝑡is denoted by 𝑝(𝑡) ∈ℝ3\nand the velocity by 𝑣(𝑡) ∈ℝ3 referring both to the world frame 𝕎. The roll,\npitch and yaw angle of the UAV are denoted by 𝜑, 𝜗, 𝜓∈ℝrespectively while\n𝑅(𝜑, 𝜃, 𝜓) ∈𝑆𝑂(3) is the rotation matrix representing the transformation of\nthrust-induced acceleration from the UAV’s body frame to the corresponding\ncomponents in the world frame. The attitude dynamics are modeled via first-\norder response systems of time constants 𝜏𝜑and 𝜏𝜗. They are incorporated\nin this way since a low-level onboard controller is being executed in the flight\ncontroller of the UAV and its tracking the reference angles 𝜑𝑟𝑒𝑓, 𝜗𝑟𝑒𝑓∈ℝand\nthe reference thrust value 𝑇𝑟𝑒𝑓∈ℝsimilar to [35]. These three terms form\n26\n\n\nthe vector 𝑢= [𝜑𝑟𝑒𝑓, 𝜃𝑟𝑒𝑓, 𝑇𝑟𝑒𝑓] that is considered as control variable of the\ncontrol loop. Finally, terms 𝑤𝑝, 𝑤𝑣∈ℝ3 and 𝑤𝜑, 𝑤𝜃∈ℝare velocity, force\nand angular roll and pitch rate disturbances constituting the disturbance\nvector 𝑤= [𝑤𝑝, 𝑤𝑣, 𝑤𝜑, 𝑤𝜃] ∈ℝ8 which is later analyzed in Section 8.4. The\nnon-linear continuous model of Eq. 16 is discretized using the Forward Euler\nMethod through a sampling time of 𝛿𝑡∈ℝwithin a prediction horizon of 𝑁\ntimesteps and contributes in the prediction of the state of the UAV in each\ntime instant (𝑘+ 𝑗|𝑘), where (𝑘+ 𝑗|𝑘) denotes the prediction of the time\nstep 𝑘+ 𝑗computed at the time step 𝑘. The objective of the controller is\nto compute an optimal sequence of input vectors 𝑢within the horizon time\nsteps in order to minimize the cost function 𝐽which is defined as follows:\n𝐽=\n𝑁\n∑\n𝑗=1\n(𝑥𝑟𝑒𝑓−𝑥𝑘+𝑗∣𝑘)𝑇𝑄𝑥(𝑥𝑟𝑒𝑓−𝑥𝑘+𝑗∣𝑘)\n⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟\nstate deviation cost\n+ (𝑢𝑛𝑜𝑚−𝑢𝑘+𝑗∣𝑘)𝑇𝑄𝑢(𝑢𝑛𝑜𝑚−𝑢𝑘+𝑗∣𝑘)\n⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟\nnominal input cost\n+ (𝑢𝑘+𝑗∣𝑘−𝑢𝑘+𝑗−1∣𝑘)𝑇𝑄Δ𝑢(𝑢𝑘+𝑗∣𝑘−𝑢𝑘+𝑗−1∣𝑘)\n⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟\ninput smoothness cost\n(17)\nwhere the state vector is denoted by 𝑥= {𝑝𝑥, 𝑝𝑦, 𝑝𝑧, 𝑣𝑥, 𝑣𝑦, 𝑣𝑧, 𝜑, 𝜗}, 𝑄𝑥∈\nℝ8×8, 𝑄𝑢and 𝑄Δ𝑢∈ℝ3×3. The deviation of the predicted future states from\nthe reference one is incorporated into the ”state deviation cost”. Towards\naiming to minimize the energy of the control action of the controller a nomi-\nnal input 𝑢𝑛𝑜𝑚= {0, 0, 𝑔} is defined corresponding to the state that the UAV\nis hovering stationary. Any deviations from this input during the operation\nare penalized using the ”nominal input cost” term. Any differences between\nsequential inputs are penalized via the ”input smoothness cost” term to en-\nforce smooth control actions since large discontinuities of the control vector\nbetween time steps are proportionally penalized.\nThe input vector 𝑢is bounded by the lower and upper bounds 𝑢𝑚𝑖𝑛, 𝑢𝑚𝑎𝑥∈\nℝ3 while additional constraints are imposed to the rate of the absolute rate\nof change of reference angles 𝜑𝑟𝑒𝑓, 𝜗𝑟𝑒𝑓denoted with the bounds Δ𝜑𝑚𝑎𝑥\nand Δ𝜃𝑚𝑎𝑥. On top of the aforementioned inequality constraints, the model\ndynamics of Eq. 16 are formulated as equality constraints and used as the\nbasis of the prediction part of the optimization. The non-linear optimization\nproblem is solved through the Optimization Engine (OpEn) software [36] in\nwhich the PANOC method with a single-shooting approach [37] is utilized.\n27\n\n\nThe yaw angle 𝜓of the UAV is not considered in the model predictive\ncontroller but is controlled using a decoupled PID controller sending direct\nyaw rate commands\ṅ𝜓𝑟𝑒𝑓to the onboard low-level flight controller.\n8.4.\nOffset-Free MPC - Non-Linear Moving Horizon Estimator (NMHE)\nThe aforementioned MPC provides smooth and responsive flight, how-\never, a steady state offset during tracking of the given paths is present. This\nconstant deviation from the goal position can be accounted to various causes\nfrom unbalanced manufacturing of the UAV, miscalibrated sensors, actuator\nmismatch, inaccurate model used in the prediction scheme, ground effect and\ngradual weight loss due to the extrusion of the material. Given the fact that\nthe application of aerial additive manufacturing requires meticulous precision\nand accuracy in order to manufacture the given mesh, these offsets need to\nbe eliminated since any deviation from the path will result in the incorrect\nplacement of the chunk that is being printed and consequently, may cause\nproblems to the assembly of the whole structure. Given the fact that these\ninaccuracies and errors can be limited but not fully eliminated, similar to\nthe methodology of the offset-free MPC [38, 39] all the aforementioned de-\nficiencies are modeled as disturbances to the initial nominal model and are\nestimated in real-time while the UAV is airborne. In particular, the UAV is\nconsidered as a time-invariant dynamical system in the form of\ṅ𝑥𝑝= 𝑓𝑝(𝑥𝑝, 𝑢)\n𝑦𝑝= ℎ(𝑥𝑝, 𝑢)\n(18)\nwhere 𝑥𝑝∈ℝ8, 𝑢∈ℝ3 and 𝑦𝑝∈ℝ8 denote the current plant state, the input\nand the output of the plant. The functions 𝑓𝑝(𝑥𝑝, 𝑢) ∶ℝ8×ℝ3×ℝ8 →ℝ8 and\nℎ𝑝(𝑥𝑝) ∶ℝ8 →ℝ8 are not known precisely and are assumed to be continuous.\nThe model used for the prediction scheme of the MPC is defined as the\nnominal and is as follows:\ṅ𝑥= 𝑓(𝑥, 𝑢)\n𝑦= ℎ(𝑥)\n(19)\nwhere 𝑥∈ℝ8 and 𝑦∈ℝ8 denote the current state and the output of the\nmodel and the dynamics function 𝑓(𝑥, 𝑢) correspond to the nominal model\ndynamics of the UAV, initially introduced in Eq. 16. Thus, the deviation\nbetween the plant and the model 𝑤∈ℝ8 is formulated as shown below:\n𝑤= 𝑓𝑝(𝑥𝑝, 𝑢) −𝑓(𝑥, 𝑢)\n(20)\n28\n\n\nIn this specific application, the state of the plant is fully measurable,\nwhich simplifies both ℎ𝑝(𝑥𝑝, 𝑣𝑝) and ℎ(𝑥) to 𝑥𝑝and 𝑥, respectively. Further-\nmore, it is assumed that the state disturbance is bounded within a compact\nset 𝑤∈𝕎, and that this disturbance is additive in nature. Its value changes\nover time during the plant’s operation, so it must be estimated in real time\nwhile the UAV is flying.\nTowards that, a Nonlinear Moving Horizon State Estimation (NMHE)\napproach is utilized to estimate the disturbance 𝑤in the aforementioned\nmodel. A window of past measurements of both state and control input is\nkept locally and an optimization problem is formulated aiming to estimate\na value for 𝑤which minimizes the deviation of the model estimation from\nthe actually measured states. Each estimation window is of size 𝑁𝑒and the\ndisturbance is assumed to be static throughout it leading to\ṅ𝑤= 0. Follow-\ning the aforementioned assumptions, the estimation model is formulated as\nfollows:\ṅ𝑥= 𝑓(𝑥, 𝑢) + 𝑤\ṅ𝑤= 0\n𝑦= 𝑥\n(21)\nSimilarly to the model of the MPC mentioned in section 8.3, the model\nis discretized using the Forward Euler Method via a sampling time of 𝛿𝑡∈ℝ\nwithin an estimation window of 𝑁𝑒time-steps and contributes in the predic-\ntion of the state of the UAV in each time instant. At each time instant 𝑘\nthroughout the whole mission, a set 𝑌= {𝑦𝑘−𝑖, 𝑖= 0, … , 𝑁𝑒} of the previ-\nous state measurements and a set 𝑈= {𝑢𝑘−𝑖, 𝑖= 0, … , 𝑁𝑒} of the previous\ninputs are gathered in order to be used for the estimation. Specifically, a set\nof state estimates\n̂𝑋= { ̂𝑥𝑘−𝑖, 𝑖= 0, … , 𝑁𝑒} is obtained by calculating the\nunknown disturbance vector 𝑤that will minimize the deviations between the\nestimates and the actual measurements. Towards that, a nonlinear optimiza-\ntion problem is formulated for the estimation window with the following cost\nfunction:\n𝐽𝑒𝑠𝑡=\n𝑁𝑒\n∑\n𝑖=0\n( ̂𝑥𝑘−𝑖∣𝑘−𝑦𝑘−𝑖)𝑇𝑄𝑒( ̂𝑥𝑘−𝑖∣𝑘−𝑦𝑘−𝑖)\n⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟\nestimation deviation\n+ (𝑤𝑘−𝑖∣𝑘−𝑤pr)𝑇𝑄𝑐ℎ(𝑤𝑘−𝑖∣𝑘−𝑤pr)\n⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟⏟\ndisturbance rate cost\n+ 𝑤𝑇\n𝑘−𝑖∣𝑘𝑅𝑒𝑤𝑘−𝑖∣𝑘\n⏟⏟⏟⏟⏟⏟⏟\nstate disturbance cost\n(22)\n29\n\n\nwhere 𝑄𝑒, 𝑅𝑒, 𝑄𝑐ℎ∈ℝ8 are gain matrices, 𝑤pr ∈ℝ8 is the estimation of\nthe disturbance in the previous execution of the estimation process and the\nsubscript ⋅𝑘−𝑖∣𝑘denotes the model value of ⋅for the time-step 𝑘−𝑖computed\nat time-step 𝑘. The estimation deviation term aims to minimize the deviation\nbetween the estimates and the actual measurements throughout the whole\nwindow so that the updates model is as close as possible to the reality, the\ndisturbance rate cost term is used to limit sudden changes of the disturbance\nestimates that may result in undesired oscillatory behavior and the state\ndisturbance cost is used to minimize the overall disturbance estimate.\nOverall, the optimization problem used in the disturbance estimation is\nprocess is shown below:\narg min\n𝑤\n𝐽𝑒𝑠𝑡( ̂𝑋, 𝑌, 𝑤, 𝑤pr)\ns.t.\n𝑥𝑘−𝑖∣𝑘= 𝑓(𝑥𝑘−𝑖−1∣𝑘, 𝑢𝑘−𝑖−1∣𝑘) + 𝑤𝑘−𝑖∣𝑘\n𝑤𝑘−𝑖∣𝑘= 𝑤𝑘−𝑖−1∣𝑘\n𝑤𝑚𝑖𝑛≤𝑤𝑘−𝑖∣𝑘≤𝑤𝑚𝑎𝑥\n(23)\nwhere 𝑤𝑚𝑖𝑛, 𝑤𝑚𝑎𝑥∈ℝ8 correspond to lower and upper bounds for the state\ndisturbance. The aforementioned non-linear minimization problem is solved\nonboard using OpEn [36] in similar fashion to the solution for the MPC\nmentioned in Section 8.3.\nFinally, in each iteration of the control loop in time-step 𝑘, the model used\nfor the prediction step of the MPC of Eq. 16 is updated with the estimated\ndisturbance 𝑤𝑘∣𝑘and the next control input 𝑢𝑘+1∣𝑘is calculated based on it.\nThese dynamic updates of the model in real time are enabling it to adapt\nto changes of the environment but also to the gradual weight loss due to the\ncontinuous material extrusion while flying.\n9. Hardware Setup\nIn implementing the proposed framework, apart from the aerial vehicle\nitself, two key factors significantly influence the construction parameters,\nresults, and overall quality. One is the selection of the material carried by\nthe UAV, as its deposition in layers determines the formation of the given\nmesh. The material’s properties, such as density and deposition behavior,\nplay a crucial role in shaping the design constraints for both the extruder and\nthe aerial robotic platform. At the same time, the limitations of the UAV,\n30\n\n\nincluding its hardware capabilities and payload capacity, impose restrictions\non material selection. This creates a trade-off, where the choice of material\nmust balance its desired characteristics with the practical constraints of the\naerial platform.\n9.1. Material\nThe material must fulfill two essential criteria, being lightweight for com-\npatibility with the constrained payload of flying robots, and possessing an\noptimal volume-to-mass ratio to maximize coverage for a specified carried\nmass. Thus, aligning with previous iterations [11], [12] an expandable foam\nis selected to be the main construction material of the proposed framework.\nSpecifically, a commercial1 single compound polyurethane foam is utilized\nand is contained in a pressurized commercial canister. Upon extrusion, it\npromptly engages with the surrounding air, resulting in a foamy texture.\nConcurrently, it initiates an expansion process until achieving full hardness\nand curing. It must be noted that the original material selected for the pro-\ncess was an off-the-shelf dual compound foam as well, with greater expansion\nfeatures. However, it was discarded due to safety concerns, given the fact\nthat it contained the chemical substance diisocynate in quantities exceeding\nthe safety standards for indoor use.\n9.2. Extruder\nIn order to handle the deposition action of the material, a modular 3D-\nprinted mechanism is designed and assembled that is encapsulated on the top\nand bottom side of the cannister as shown in Fig. 10. The extruder cannister\nalong with its mounting on the drone and valve to control it are depicted in\nFig. 11 Specifically, the canister’s top is linked directly to a brass ball valve\nto regulate the flow of the deposited material, propelled by the contained\npropulsion gases. The valve’s control leaver is mechanically linked, to the\nservos output shaft, which governs the material flow. A 3D-printed bracket\naffixed to the canister’s bottom secures the servo in place. The servo’s ro-\ntational movement is controlled directly by the onboard computer, enabling\nreal-time activation and deactivation of material extrusion, seamlessly inte-\ngrating it into the proposed framework. At the tip of the extruder lies a\nsmall plastic pipe, affixed to the opposite end of the valve, completing the\nmechanism for material deposition.\n1Sika Boom®-461 Top [40]\n31\n\n\n1\n2\n3\n4\n1\nPressurized\nCan\n2\nConical Cover\n3\nServo Control.\nValve\n4\nExtruder Nozzle\nFigure 10: CAD Design of the custom material extruder and cannister holding it, affixed\non the bottom part of the UAV.\n32\n\n\nFigure 11: UAV platform designed with the extruder mounted below it equipped with a\nservo-controlled valve and protective disks reducing the downwash effect.\n9.3. Robotic Platform\nThe whole extruder mechanism is mounted on the bottom side of an\nin-housed designed and assembled hexacopter aerial robotic platform with\na wingspan of 0.8 meters, mass of 4.5 kilograms (batteries included) and\ndesigned to accommodate a payload of up to 2 kilograms with a flight time\nof approximately 10 minutes under full load. The platform is also equipped\nwith retractable landing gear legs that are retracted when airborne due to the\nfact that the extruder needs to be as close to the printing surface as possible\nand also to prevent any possible collisions with the previously manufactured\nchunks. Finally, aiming to mitigate the effect of the downwash coming from\nthe rotation motion of the propeller and affecting dramatically the material\ndeposition behavior, a set of protective cover and disk is mounted right before\nand after the valve so that the flow is blocked. The degradation due to the\nphenomenon is not fully mitigated but is limited significantly.\n33\n\n\n10. Experimental Results\nThe proposed framework undergoes testing and evaluation within an in-\ndoor environment, where two distinct meshes were manufactured. Specifi-\ncally, the experimentation took place within an indoor flying arena equipped\nwith a Vicon motion-capturing system, providing the UAV with real-time\nodometry at a frequency of 120 Hz. Prior to commencing the manufacturing\nprocess, initial procedures such as chunking, slicing of generated chunks, and\ncomputation of the dependency graph were performed offline on a master PC.\nFor the chunking algorithm beam search, an inner beam width 𝑊𝑖𝑛𝑛𝑒𝑟= 10\nand an outer one 𝑊𝑜𝑢𝑡𝑡𝑒𝑟= 10 were selected while at the same time, each\nplanar family for a given normal\n⃗𝑛𝑖consisted of 5 planes and the maximum\npolar angle of the normal sampling space was set to 𝜙max = 45∘. After con-\nducting handheld extrusion tests and experiments, the tuning parameters for\nthe slicing software were determined. Specifically, a concentric infill pattern\nwith 100% infill was chosen for filling the layers of the chunks. This approach\nminimizes the number of points where movement direction changes, leading\nto smoother and more efficient extrusion.\nSubsequently, the remaining execution, movement, and control modules\nof the framework were executed on the onboard computational unit of the\nUAV, which utilized a LattePanda 3 Delta2. Additionally, the onboard Model\nPredictive Controller (MPC) was operated at a frequency of 20 Hz while the\nparameters of the model, the constraint bounds and the gains of its cost\nfunction are shown in Table 1.\nThe onboard Non-Linear Moving Horizon Estimator (NMHE) was exe-\ncuted in the same rate as the MPC and in each time step the model of the\nMPC was updated with the disturbance estimate 𝑤of the estimator. The\nparameters used for the formulation of the NMHE problem are shown in\nTable 2.\n10.1. Offset-Free MPC\nTo evaluate the offset-free MPC scheme described in Sections 8.3 and 8.4,\na predefined path (shown in blue in Fig. 12) is tracked. Initially, this path is\nfollowed without the disturbance estimation module enabled, with the MPC\nusing only the nominal model for predictions (see Fig. 13a). Although the\n2https://www.lattepanda.com/lattepanda-3-delta\n34\n\n\nParam.\nValue\nParam.\nValue\nA\n[0.1, 0.1, 0.2]\n𝑄𝑢\ndiag(3, 250, 250)\n𝜏𝜑\n0.2\n𝑄Δ𝑢\ndiag(3, 100, 100)\n𝜏𝜃\n0.2\n𝑢𝑚𝑖𝑛\n[3, -0.3, -0.3]\n𝛿𝑡\n50 ms\n𝑢𝑚𝑎𝑥\n[15.5, 0.3, 0.3]\n𝑁\n40\nΔ𝜑𝑚𝑎𝑥\n0.04\n𝑄𝑥\ndiag(100, 100, 50\n4, 4,\n4, 30, 30)\nΔ𝜃𝑚𝑎𝑥\n0.04\nTable 1: NMPC Controller Parameters\nParameter\nValue\n𝑄𝑒\n[ 10𝑒4, 10𝑒4, 10𝑒4, 10𝑒4,\n10𝑒4, 10𝑒4, 10𝑒4, 10𝑒4 ]\n𝑄𝑐ℎ\n[ 10, 10, 10, 10 ]\n[ 10, 10, 10, 10 ]\n𝑅𝑒\n[ 500, 500, 500, 1 ]\n[ 1, 1, 200, 200 ]\n𝑊𝑚𝑖𝑛\n[ −0.05, −0.05, −0.05, −0.6 ]\n[ −0.6, −0.6, −0.05, −0.05 ]\n𝑊𝑚𝑎𝑥\n[ 0.05, 0.05, 0.05, 0.6 ]\n[ 0.6, 0.6, 0.05, 0.05 ]\nTable 2: Parameter values for the Non-Linear Moving Horizon Estimator (NMHE).\noverall pattern and corners of the path were tracked, offsets of 8cm on the\ny-axis and 3 cm on the x-axis are observed.\nAt a specific timestamp 𝑡𝑒, the disturbance estimator is enabled mid-\nflight in order to showcase the enhancement in the tracking performance of\nthe UAV. A disturbance of approximately 0.15 𝑚/𝑠2 on the x-axis and 0.3\n𝑚/𝑠2 on the y-axis is estimated. The deviation from the predefined path is\ngradually decreased to within 2 cm (as shown in Fig. 13b), as the MPC model\ndynamically adapts to real flight conditions. The estimated disturbances on\nthe x and y axes are shown in the figure. It is noted that only the disturbances\non the acceleration part of the model are used, estimating virtual forces on\neach axis. The path measured before the estimator is deployed is marked in\norange, and the path after deployment is marked in green in Fig. 12.\n35\n\n\nAlthough variations in the disturbance estimates occurred, as expected\ndue to the dynamic nature of the estimation process, they do not significantly\naffect the overall mission performance due to the expansive nature of the\nfoam.\n−0.4\n−0.2\n0.0\n0.2\n0.4\nX [m]\n3.6\n3.8\n4.0\n4.2\n4.4\n4.6\nY [m]\nRef.\nMeas.\nMeas.\nEstimator\nFigure 12: Reference Path for a single chunk (blue) along with the measured trajectory of\nthe UAV before (orange) and after (green) the deployment of the estimator during flight.\n36\n\n\n40\n50\n60\n70\n80\n90\n100\n110\n−0.4\n−0.2\n0.0\n0.2\n0.4\n[m]\nPosition X\n40\n50\n60\n70\n80\n90\n100\n110\nt [s]\n−0.4\n−0.2\n0.0\n0.2\n0.4\n[m/ s2 ]\nDisturbance X\n40\n50\n60\n70\n80\n90\n100\n110\n3.6\n3.8\n4.0\n4.2\n4.4\n4.6\nPosition Y\n40\n50\n60\n70\n80\n90\n100\n110\nt [s]\n−0.4\n−0.2\n0.0\n0.2\n0.4\nDisturbance Y\nMeasured\nReference\nEstimator Disabled\nEstimator Enabled\nEstimator Enabled\nEstimator Disabled\n(a) A snapshot of reference and measured position in 𝑋−𝑌coordinates (top) on the\nexecution path along with estimated disturbances (bottom)\n40\n50\n60\n70\n80\n90\n100\n110\nt [s]\n0.00\n0.02\n0.04\n0.06\n0.08\n0.10\n0.12\nError [m]\nEstimator Disabled\nEstimator Enabled\n(b) Planar path tracking error, showing reduced error with the disturbance esti-\nmator enabled (right) versus disabled (left).\nFigure 13: Snapshot of path tracking where disturbance estimator is enabled mid-flight\n(𝑡𝑒= 77 sec) and the timestamp is indicated with the red dotted line. The response of the\nUAV along with the reference paths in each axis along with the estimated disturbances\nper axis are shown on top (a). The 2D error of the UAV during the tracking is shown on\nthe bottom and is consistently decreased after the deployment of the estimator (b).\n10.2. Construction of a Rectangular Shape\nThe framework is initially evaluated on the manufacturing of a solid 55×\n55 cm. rectangle with a height of 8 cm, having a hole in its center with\ndimensions of 20 × 20 cm. The available material for the UAVs that was\nfed to the chunking algorithm is as follows 𝒟= [4.0, 4.0, 4.0, 4.0] L while\n37\n\n\nthe layer height along with the line width used during the slicing process\nare equal to 𝑙ℎ= 2.5 cm and 𝑙𝑤= 3 cm. After feeding it to the chunking\nalgorithm, the mesh is decomposed in 8 chunks as shown in Fig. 14 with\nthe following volumes 𝒞= [1.90, 1.09, 2.51, 2.01, 2.57, 2.06, 2.35, 2.31] L with\na mean value 𝜇= 2.1, standard deviation 𝜎= 0.442 and a total volume\ndispersion 𝑐𝑣= 0.211.\n(a) Color-Coded Decomposed Mesh\n(b) Dependency Graph G\nFigure 14: Color-coded chunks of the decomposed mesh to be printed (a) along with the\ndependency graph showcasing all the inter-dependencies between the chunks (b).\n38\n\n\nFigure 15: Sequential Manufacturing of the Chunks of the Rectangular Decomposed Mesh.\nThe chunk that is printed in each frame is notated with the corresponding color and its\nnumber is highlighted on the top left.\nSequential snapshots of the overall manufacturing process taken right\nafter the completion of each assigned chunk to the UAV are shown in Fig.\n15. The final constructed mesh after having the material fully cured is shown\nin Fig. 16 in different views. As noticed from the figure, while the material\nextruded from the tip of the extruder of the robot is deposited according\nto the manufacturing paths and there is sufficient adhesion both between\nmaterial and the ground platform and the intermediate layers, the deposited\nmaterial is following a serpantine-like pattern while deposited. This can be\naccounted to the fact that material is not released with enough pressure so it\nstarts expanding midair before it reaches either the ground or the previously\ndeposited layer. This phenomenon can be controlled further by adjusting the\nvalve opening through the attached servo on it.\n(a) Top View\n(b) Diagonal View\n(c) Side View\nFigure 16: Final Manufactured Rectangular Mesh after fully curing\n39\n\n\n10.3. Construction of a Hexagonal Shape\nAdditionally, the manufacture of a hexagonal mesh is carried out and\nevaluated. Each side of it has length of 30 cm and width of 10 cm while\nthe height is equal to 10 cm resulting in a total volume of 18.93 L. Four\ndifferent material canisters were considered available during the mesh de-\ncomposition process with 6 L of material each so the vector 𝒟is as follows\n𝒟= [6.0, 6.0, 6.0, 6.0] L.\n(a) Color-Coded Decomposed Mesh\n7\n6\n5\n3\n4\n2\n1\n0\n(b) Dependency Graph G\nFigure 17: Color-coded chunks of the decomposed hexagonal mesh to be printed (a) along\nwith the dependency graph showcasing all the inter-dependencies between the chunks (b).\nA layer height 𝑙ℎ= 4.5 cm was used and a line width of 4 cm as well.\n40\n\n\nThe mesh was decomposed into 8 chunks with the following volumes 𝒞=\n[2.39, 1.34, 2.57, 1.79, 2.77, 1.71, 3.58, 2.79] L corresponding to each chunk 𝐶𝑘,\nresulting in mean value 𝜇= 2.3675, standard deviation 𝜎= 0.678 and a to-\ntal volume dispersion 𝑐𝑣= 0.306. The chunks of the decomposed hexagonal\nmesh are shown color-coded in Fig. 17a while the dependency graph associ-\nated with it is shown in Fig. 17b. An overview of the sequential assignment\nof the chunks based on the assignment algorithm analyzed in Section 6.1 is\nshown in Fig. 18, where multiple snapshots of the printing mission are pre-\nsented in a chronological order and each frame is captured right after the UAV\nhas finished printing the chunk corresponding to it. It is noted that although\nthe chunks can be printed in various sequences, the selection of the chunks\nis happening in layers ℒ1\n𝒢= {𝐶0, 𝐶2, 𝐶4, 𝐶6} and ℒ2\n𝒢= {𝐶1, 𝐶3, 𝐶5, 𝐶7}\nas dictated in the aforementioned Section. Another snapshot view for the\nprinting of a single chunk is shown in Fig. 19, where a camera is placed next\nto the printing platform and the deposition action of the material from the\nextruder is captured. The final constructed hexagonal mesh after letting the\nmaterial fully cure along with the dimension of the original one are shown in\nFig. 20. As shown, the overall constructed shape closely resembles the orig-\ninal structure, with dimensions that are largely maintained. However, some\nregions exhibit uneven material expansion after depletion, resulting in small\ngaps. These gaps are caused by the influence of the downwash generated\nby the propellers, which is further discussed in Section 11. It is important\nto note that this experimental evaluation aims to demonstrate the proof of\nconcept. To this end, the targeted shapes for printing are relatively small,\nmaking execution highly challenging. However, a similar margin of error can\nbe expected even for larger targeted shapes leading to much less noticeable\nartifacts, ensuring smoother and consistent results as the system scales\n41\n\n\nFigure 18: Sequential Manufacturing of the Chunks of the Hexagonal Decomposed Mesh.\nThe chunk that is printed in each frame is added on the visualization on the top right of\neach frame and its number is highlighted on the top left.\nFigure 19: Side view of snapshots taken during the printing of the second chunk in the\nprinting sequence for the hexagonal.\nFigure 20: Dimensions and various length sizes annotated for both the finally constructed\n(a) and the reference (b) Hexagonal Mesh.\n42\n\n\nA presentation of the whole framework along with videos from the two\naforementioned experiments can be found here: https://youtu.be/WC1rLM-\nLKEg4.\n11. Discussions\nA thorough discussion of the experimental results follows focusing on\nthe accuracy of the whole printing procedure and evaluation on the accurate\nrepresentation of the digital fabrication based on volumetric occupancy grids.\nAdditionally, a discussion on phenomena resulting to the degrading of the\nprinting mission and ways of mitigating them.\n11.1. Printing Execution\nThe tracking of the measured position of the UAV as fed from the motion\ncapture tracking system along with the reference path are shown in Fig. 21\nfor the printing of various chunks separated with black dotted line. Given the\nfact that the extruder of the platform is rigidly mounted at the bottom of the\ncanister with a vertical offset equal to 𝑙𝑒𝑥= 30 cm and the pose of the robot\nis known precisely in real-time, a calculation of the extruder is carried out\nso that the tip of it is measured at every measurement while the measured\nand the reference positions of the extruder are shown at the same figure. As\nnoticed from the response in each axis, the paths are tracked with a slight lag\nbetween the reference signal and the response which in the particular case of\nthe initial manufacturing tests is considered acceptable given the fact that it\ndoes not affect the accuracy or the smooth deposition of the material. Slight\ndeviations in the UAV’s commanded reference altitude can be observed in\nthe lower portion of the figure, with variations within a range of 2.5 cm.\nAlthough this behavior does not affect the material deposition process, it is\naccounted for in the UAV’s execution. Specifically, the extruder’s tip is po-\nsitioned with an offset that ensures it remains clear of both the ground and\nthe previously deposited material. This prevents ground contact, even under\nworst-case deviations, as the material is expelled under pressure from the can-\nister, allowing for effective deposition without requiring precise tip-to-ground\ncontact, similar to a spraying action. The trajectory of the extruder exhibits\nslight fluctuations around the reference signal, primarily due to its vertical\nposition relative to the UAV’s center of mass. This offset means that even\nsmall angular deviations of the UAV can introduce amplified movements at\nthe extruder tip. By compensating for these rotational influences, the system\n43\n\n\n-0.25\n0.00\n0.25\nX [m ]\n3.50\n3.75\n4.00\nY [m ]\n120\n130\n140\n150\n160\nt [se c]\n0.2\n0.4\n0.6\nZ [m ]\nRe fe re nce  UAV\nRe fe re nce  Extr.\nMe a sure d UAV.\nMe a sure d Extr.\nFigure 21: Reference and measured trajectory of both UAV an extruder per axis for\ndifferent chunks separated in time using the black dotted line\ncan achieve smoother extrusion paths, ultimately enhancing precision. This\nchallenge also highlights the importance of robust stabilization techniques,\nwhich, when optimized, further improves printing accuracy.\nAnother factor affecting the accuracy of the manufacturing path tracking\nis the ground effect. During material extrusion, the UAV flies at a vertical\ndistance of approximately 30 cm from the ground, which is a critical altitude\nfor the system to be influenced by this phenomenon [41]. The disturbance\nestimator effectively accounts for ground effect by calculating overall unmea-\nsured disturbances due to its reactive nature.\nThis ensures reliable com-\npensation, leading to a robust control system that supports high precision\nand consistency in tracking the intended path, thereby enhancing printing\naccuracy. More detail insights and analysis on robustness properties of such\ncontroller can be found in [42, 43].\nA better 3D view on the actually tracked trajectories for both hexagonal\nand rectangular meshes is shown in Fig. 22. Here, the vertical offset between\n44\n\n\nX [m]\n0.3\n0.2\n0.1\n0.0\n0.1\n0.2\n0.3\nY [m]\n0.2\n0.1\n0.0\n0.1\n0.2\n0.3\nZ [m]\n0.0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\nReference UAV\nMeasured UAV\nMeasured Extr.\nReference Extr.\n(a) Hexagonal Chunks\nX [m]\n0.2\n0.1\n0.0\n0.1\n0.2\n0.3\nY [m]\n3.8\n3.9\n4.0\n4.1\n4.2\n4.3\nZ [m]\n0.3\n0.4\n0.5\nReference UAV\nMeasured UAV\nMeasured Extr.\nReference Extr.\n(b) Rectangular Chunks\nFigure 22: Reference and measured trajectories of both UAV and extruder’s tip in 3D\nduring the printing process of the chunks of the hexagonal mesh(a) and of the chunks of\nthe rectangular mesh(b).\nthe UAV’s and the extruder’s path is more visible and the motion of the\nextruder relative to the UAV is shown clear.\nA holistic overview of the\ntotal error for both UAV and extruder’s tip is shown in Fig.23 where the\ndistribution of the mean error is visualized for the printing of each chunk\nthroughout a whole mission. Notably, the mean error of the UAV is around\n2.1 cm while it never reaches over 5 cm. As expected, the distribution of the\nerror of the extruder is slightly worse with a mean error of 2.5 cm and an\nupper bound of 6 cm.\nIt must be noted that in larger-scale constructions, where the relative\nerror diminishes, these deviations become even less significant, further rein-\nforcing the reliability of the approach.\n11.2. Volumetric Evaluation\nOn further evaluation of the printing execution of the UAV, a volumetric\nrepresentation of the manufacturing paths generated by the slicer and the\nactual trajectory executed by the UAV are compared. Specifically, a 3D oc-\ncupancy grid is generated with dimensions equal to the ones of the printing\nplatform and a height of 0.5 m. Aiming to capture accurately the aforemen-\ntioned trajectories, a voxel size equal to 1 cm is used. This step is carried out\nfor both the measured and the reference paths resulting into two occupancy\n45\n\n\n# 1\n# 2\n# 3\n# 4\n# 5\n# 6\n# 7\n# 8\n0\n2\n4\n6\nError [cm]\nUAV\nExtruder\nFigure 23: Path tracking error while printing all chunks for both the UAV and the extruder.\nmaps 𝑂𝑟and 𝑂𝑚correspondingly. As shown in Fig. 24, the manufacturing\npaths are visualized with green and whenever the extrusion is enabled, the\nmeasured position of the extruder is sampled, padded to dimensions equal to\nthe line width 𝑙𝑤and registered in the occupancy grid.\nReference Path\nMeasured Path\nFigure 24: Volumetric evaluation of the manufactured meshes in an occupancy grid of\nvoxel size equal to 1 cm\n11.3. Air Draft Influence\nAs it can be noticed on both the figures shown so far along with the\naccompanying video, the lightweight nature of the foam used in the printing\nprocess, along with its extrusion in mid-air, makes the final deposition posi-\ntion sometimes susceptible to air drafts. Specifically, the rotating propellers\n46\n\n\nFigure 25: Influence of aircraft on chunk 𝐶4 (marked with red) generated by the propellers\nwhen printing a nearby chunk.\nof the UAVs generate downward airflows, which, when combined with the\nproximity of the UAV to the ground, create unpredictable air patterns due\nto reflections off the surface. These air vortices interfere with the material\ndeposition, often displacing the foam before it cures, making successful de-\nposition impossible as the material is blown away. To address this, a conical\ncover and a protective disk were added above the extruder’s tip, as shown in\nFig. 11. This modification significantly reduced the influence of the drafts,\nallowing the printing process to proceed.\nNevertheless, air drafts generated by the UAVs’ propellers continue to\noccasionally affect the deposition performance and the quality of the final\nprint.\nThis issue becomes particularly apparent when the UAV operates\nnear a recently printed chunk, where the newly deposited layers have not yet\nformed a strong adhesive bond with the substrate or previously deposited\nsections. Throughout the experimentation of the printing of the hexagonal\nmesh, this phenomenon is particularly prominent after the fabrication of\nchunk 𝐶4, the final chunk in the first layer of the hexagonal mesh. Once\nthis chunk is printed, the structure becomes enclosed, preventing the air\ndrafts from escaping. As a result, these trapped drafts exert pressure on\nthe internal walls of the surrounding chunks. as also illustrated in Fig. 25.\nAlthough the displacement of the chunk material is noticeable, it does not\ncritically compromise the structural integrity of the mesh, as the remaining\nmaterial is sufficient to support the subsequent layers of printing.\n47\n\n\n11.4. Material Extrusion\nThroughout the mission, the extrusion process was successfully controlled\nby adjusting the valve’s angle using a servo motor, effectively initiating mate-\nrial flow. This angle was carefully determined through preliminary handheld\nexperiments, providing a solid foundation for the autonomous mission. While\nsome variations in extrusion were observed, they offered valuable insights into\noptimizing flow control. Specifically, at the start of extrusion, a temporary\npressure buildup led to a higher initial flow rate before stabilizing. Similarly,\nas the mission progressed, a gradual decrease in pressure within the canister\ncaused a corresponding reduction in flow rate. Understanding these dynam-\nics presents an exciting opportunity for refinement, paving the way for even\nmore precise and uniform deposition. To further enhance consistency, inte-\ngrating a flow sensor into the valve could enable a feedback control system\nthat dynamically adjusts the servo, ensuring a steady flow rate.\n12. Conclusions and Future Work\nThis article presents a chuck-based aerial additive manufacturing frame-\nwork, supported by experimental evaluation, marking a significant advance-\nment in enhancing aerial robotic capabilities for autonomous construction.\nThe experimental evaluation pushes the boundaries of this framework, driv-\ning it toward a transformative shift while addressing the critical challenges\nof deploying aerial robotic units for construction tasks. This study not only\nhighlights the intricate execution challenges of deploying aerial robotic sys-\ntems for construction but also presents the solutions and insights gained from\nour experimental experience. Towards this development, the chuck based\nframework is augmented with a dependency graph structure that captures\nall inter-dependencies between the chunks. This facilitates the efficient as-\nsignment of each chunk to the available UAVs. Additionally, a more refined\nchunking process reduces excess artifacts, while a post-processing algorithm\nin chunk generation improves adhesion between chunks and ensures their full\ninclusion in the slicing process. A real-time disturbance estimation module\nintegrated with the controller ensures smooth and precise execution of the\nprinting process. An in-house designed and assembled hexacopter equipped\nwith a pressurized canister mounted on its bottom part is deployed as the\naerial robotic construction unit used in the experiments. Using this plat-\nform, the experimental evaluation demonstrates the aerial robotic capability\n48\n\n\nin autonomously constructing two distinct mesh structures, one of them be-\ning a hollow rectangle and the other one a hexagonal mesh, highlighting its\nversatility and effectiveness in aerial additive manufacturing.\nDuring the\nexecution of the construction process, the material carrying canister was re-\nplaced for every landing sequences so that a sequential manufacturing of the\nchunks are carried out seamlessly. A rigorous evaluation of the constructed\nmeshes was conducted, focusing on geometric properties such as shape size\nand volume. Limited discrepancies were observed, which is trivial in experi-\nmental validation and it can be attributed to factors such as uncompensated\ndisturbance noise, model inaccuracies, and the ground effect due to the close\nproximity of the flying platform to the ground.\nAdditionally, in spite of\nthe favorable properties of the material being lightweight and being able to\nexpand, its extrusion behavior was not consistent and smooth throughout\nthe whole execution of the printing mission since variations in its flow rate,\nextrusion pattern and expansion degraded the final printing quality. While\nthe constructed shapes using aerial robotic system shows marginal errors, it\nis majorly due to the fact that the experimental evaluation are performed\ntowards constructing small structures. Considering that the performance of\nthe tracking controller is expected to be independent of the execution path\nlength, the effect of small-scale tracking errors would be insignificantly pro-\nnounced when deployed on a larger scale. When constructing larger struc-\ntures, the relative error margin would remain bounded within acceptable\ntolerance in the overall construction process. It is evident that the proposed\napproach successfully validated the proof of concept demonstration.\nTo enhance printing performance in future development, opting for a more\nsuitable cement like construction material with superior properties could ad-\ndress previously mentioned challenges and improve overall mission efficiency.\nFurthermore, deploying multiple UAVs to manufacture their assigned chunks\nsimultaneously, while managing conflicts arising from concurrent motion, will\nsignificantly accelerate the overall process. Additionally, an elaborate compu-\ntational fluid dynamics (CFD) analysis on the extrusion of the material from\nthe canister along with its deposition in layers, could be further investigated\nand provide further insights improving the overall printing quality. Finally,\naugmenting aerial 3D printing capabilities with conventional well-developed\nmulti-robotic system for a full-scale, real-life implementation of multi-agent\nand multi-modal collaborative construction would significantly enhance the\nenvisioned evolution of autonomy in construction domain.\n49\n\n\nReferences\n[1] J.\nC.\nNajmon,\nS.\nRaeisi,\nA.\nTovar,\n2\n-\nreview\nof\nadditive\nmanufacturing\ntechnologies\nand\napplications\nin\nthe\naerospace\nindustry,\nin:\nF.\nFroes,\nR.\nBoyer\n(Eds.),\nAdditive\nManufac-\nturing\nfor\nthe\nAerospace\nIndustry,\nElsevier,\n2019,\npp.\n7–31.\ndoi:https://doi.org/10.1016/B978-0-12-814062-8.00002-9.\nURL\nhttps://www.sciencedirect.com/science/article/pii/\nB9780128140628000029\n[2] I. Bahnini, M. Rivette, A. Rechia, A. Siadat, A. Elmesbahi, Additive\nmanufacturing technology: the status, applications, and prospects, The\nInternational Journal of Advanced Manufacturing Technology 97 (2018)\n147–161.\n[3] M. Ramola, V. Yadav, R. Jain, On the adoption of additive manu-\nfacturing in healthcare: a literature review, Journal of Manufacturing\nTechnology Management 30 (1) (2019) 48–69.\n[4] A. Paolini, S. Kollmannsberger, E. Rank, Additive manufacturing in\nconstruction: A review on processes, applications, and digital planning\nmethods, Additive Manufacturing 30 (2019) 100894. doi:https://doi.\norg/10.1016/j.addma.2019.100894.\n[5] F. Craveiroa, J. P. Duartec, H. Bartoloa, P. J. Bartolod, Additive manu-\nfacturing as an enabling technology for digital construction: A perspec-\ntive on construction 4.0, Sustain. Dev 4 (6) (2019).\n[6] G. A. Pacillo, G. Ranocchiai, F. Loccarini, M. Fagone, Additive man-\nufacturing in construction: A review on technologies, processes, ma-\nterials, and their applications of 3d and 4d printing, Material De-\nsign & Processing Communications 3 (5) (2021) e253.\ndoi:https:\n//doi.org/10.1002/mdp2.253.\n[7] H. Al Jassmi, F. Al Najjar, A.-H. I. Mourad, Large-scale 3d printing:\nthe way forward, in: IOP Conference Series: Materials Science and\nEngineering, Vol. 324, IOP Publishing, 2018, p. 012088. doi:10.1088/\n1757-899X/324/1/012088.\n[8] M. Bazli, H. Ashrafi, A. Rajabipour, C. Kutay, 3d printing for re-\nmote housing: Benefits and challenges, Automation in Construction\n50\n\n\n148 (2023) 104772. doi:https://doi.org/10.1016/j.autcon.2023.\n104772.\n[9] M. Mehaffy, N. A. Salingaros, Design for a living planet: Settlement,\nscience, & the human future, Sustasis Press, 2017.\n[10] Z. Xu, T. Song, S. Guo, J. Peng, L. Zeng, M. Zhu, Robotics tech-\nnologies aided for 3d printing in construction: A review, The Inter-\nnational Journal of Advanced Manufacturing Technology 118 (11-12)\n(2022) 3559–3574. doi:10.1007/s00170-021-08067-2.\n[11] G. Hunt, F. Mitzalis, T. Alhinai, P. A. Hooper, M. Kovac, 3d printing\nwith flying robots, in: 2014 IEEE international conference on robotics\nand automation (ICRA), IEEE, 2014, pp. 4493–4499.\n[12] K.\nZhang,\nP.\nChermprayong,\nF.\nXiao,\nTzoumanikas,\net\nal.,\nAerial additive manufacturing with multiple autonomous robots, Na-\nture 609 (7928) (2022) 709–717.\ndoi:https://doi.org/10.1038/\ns41586-022-04988-4.\n[13] M.-N. Stamatopoulos, A. Banerjee, G. Nikolakopoulos, Flexible multi-\ndof aerial 3d printing supported with automated optimal chunking, in:\n2023 IEEE/RSJ International Conference on Intelligent Robots and Sys-\ntems (IROS), 2023, pp. 3033–3039.\ndoi:10.1109/IROS55552.2023.\n10341882.\n[14] K. H. Petersen, N. Napp, R. Stuart-Smith, D. Rus, M. Kovac, A review\nof collective robotic construction, Science Robotics 4 (28) (2019) 1–28.\ndoi:10.1126/scirobotics.aau8479.\n[15] M. Allwright, N. Bhalla, H. El-faham, A. Antoun, C. Pinciroli,\nM. Dorigo, Srocs: Leveraging stigmergy on a multi-robot construction\nplatform for unknown environments, in: Swarm Intelligence: 9th Inter-\nnational Conference, ANTS 2014, Brussels, Belgium, September 10-12,\n2014. Proceedings 9, Springer, 2014, pp. 158–169.\n[16] M. E. Tiryaki, X. Zhang, Q. C. Pham, Printing-while-moving:\nA\nnew paradigm for large-scale robotic 3D Printing, IEEE International\nConference on Intelligent Robots and Systems (2019) 2286–2291doi:\n10.1109/IROS40897.2019.8967524.\n51\n\n\n[17] J. Sustarevas, D. Kanoulas, S. Julier, Autonomous mobile 3d printing\nof large-scale trajectories, in: 2022 IEEE/RSJ International Conference\non Intelligent Robots and Systems (IROS), 2022, pp. 6561–6568. doi:\n10.1109/IROS47612.2022.9982274.\n[18] J. Sustarevas, D. Kanoulas, S. Julier, Task-consistent path planning\nfor mobile 3d printing, in: 2021 IEEE/RSJ International Conference\non Intelligent Robots and Systems (IROS), 2021, pp. 2143–2150. doi:\n10.1109/IROS51168.2021.9635916.\n[19] X. Zhang, M. Li, J. H. Lim, Y. Weng, Y. W. D. Tay, H. Pham, Q.-C.\nPham, Large-scale 3d printing by a team of mobile robots, Automation\nin Construction 95 (2018) 98–106.\n[20] L. Poudel, L. G. Marques, R. A. Williams, Z. Hyden, P. Guerra, O. L.\nFowler, Z. Sha, W. Zhou, Toward Swarm Manufacturing: Architecting\na Cooperative 3D Printing System, Journal of Manufacturing Science\nand Engineering, Transactions of the ASME 144 (8) (2022) 1–15. doi:\n10.1115/1.4053681.\n[21] J. Sustarevas, K. X. Benjamin Tan, D. Gerber, R. Stuart-Smith, V. M.\nPawar, Youwasps:\nTowards autonomous multi-robot mobile deposi-\ntion for construction, in: 2019 IEEE/RSJ International Conference on\nIntelligent Robots and Systems (IROS), 2019, pp. 2320–2327.\ndoi:\n10.1109/IROS40897.2019.8967766.\n[22] F. Augugliaro, S. Lupashin, M. Hamer, C. Male, M. Hehn, M. W.\nMueller, J. S. Willmann, F. Gramazio, M. Kohler, R. D’Andrea, The\nflight assembled architecture installation: Cooperative construction with\nflying machines, IEEE Control Systems Magazine 34 (4) (2014) 46–64.\ndoi:10.1109/MCS.2014.2320359.\n[23] C. Lenz, M. Schwarz, A. Rochow, J. Razlaw, A. S. Periyasamy,\nM. Schreiber, S. Behnke, Autonomous wall building with a ugv- uav\nteam at mbzirc 2020, in:\n2020 IEEE International Symposium on\nSafety, Security, and Rescue Robotics (SSRR), 2020, pp. 189–196.\ndoi:10.1109/SSRR50563.2020.9292580.\n[24] T.\nBaca,\nR.\nPenicka,\nP.\nStepan,\nM.\nPetrlik,\nV.\nSpurny,\nD.\nHert,\nM.\nSaska,\nAutonomous\ncooperative\nwall\nbuilding\nby\n52\n\n\na team of unmanned aerial vehicles in the mbzirc 2020 compe-\ntition,\nRobotics\nand\nAutonomous\nSystems\n167\n(2023)\n104482.\ndoi:https://doi.org/10.1016/j.robot.2023.104482.\nURL\nhttps://www.sciencedirect.com/science/article/pii/\nS0921889023001215\n[25] C. Lenz, J. Quenzel, A. S. Periyasamy, J. Razlaw, A. Rochow, M. Spli-\netker, M. Schreiber, M. Schwarz, F. Süberkrüb, S. Behnke, Team nim-\nbro’s ugv solution for autonomous wall building and fire fighting at\nmbzirc 2020, arXiv preprint arXiv:2105.11979 (2021).\n[26] A. Mirjan, F. Gramazio, M. Kohler, F. Augugliaro, R. D’Andrea,\nArchitectural fabrication of tensile structures with flying machines,\nSIM2013 - International Conference on Sustainable Intelligent Manu-\nfacturing (2013) 513–518Conference Location: Lisbon, Portugal; Con-\nference Date: June 26-29, 2013. doi:10.1201/b15002-99.\n[27] S. Goessens, C. Mueller, P. Latteur, Feasibility study for drone-based\nmasonry construction of real-scale structures, Automation in Construc-\ntion 94 (2018) 458–480.\n[28] G. Hunt, F. Mitzalis, T. Alhinai, P. A. Hooper, M. Kovac, 3d printing\nwith flying robots, in: 2014 IEEE international conference on robotics\nand automation (ICRA), IEEE, 2014, pp. 4493–4499. doi:10.1109/\nICRA.2014.6907515.\n[29] K. Zhang, P. Chermprayong, F. Xiao, D. e. a. Tzoumanikas, Aerial addi-\ntive manufacturing with multiple autonomous robots, Nature 609 (7928)\n(2022) 709–717.\n[30] M.-N. Stamatopoulos, A. Banerjee, G. Nikolakopoulos, A decomposi-\ntion and a scheduling framework for enabling aerial 3d printing, Jour-\nnal of Intelligent & Robotic Systems 110 (03 2024).\ndoi:10.1007/\ns10846-024-02081-8.\n[31] M.-N. Stamatopoulos, A. Banerjee, G. Nikolakopoulos, On experimental\nemulation of printability and fleet aware generic mesh decomposition\nfor enabling aerial 3d printing, in: 2024 IEEE International Conference\non Robotics and Automation (ICRA), 2024, pp. 10080–10086.\ndoi:\n10.1109/ICRA57147.2024.10610806.\n53\n\n\n[32] H. Fuchs, Z. M. Kedem, B. F. Naylor, On visible surface generation\nby a priori tree structures, SIGGRAPH Comput. Graph. 14 (3) (1980)\n124–133.\n[33] J. McPherson, W. Zhou, A chunk-based slicer for cooperative 3D print-\ning, Rapid Prototyping Journal 24 (9) (2018) 1436–1446.\n[34] U. B.V., Ultimaker cura (2019).\nURL https://github.com/Ultimaker/Cura\n[35] B. Lindqvist, S. S. Mansouri, P. Sopasakis, G. Nikolakopoulos, Colli-\nsion avoidance for multiple micro aerial vehicles using fast centralized\nnonlinear model predictive control, IFAC-PapersOnLine 53 (2) (2020)\n9303–9309, 21st IFAC World Congress.\ndoi:https://doi.org/10.\n1016/j.ifacol.2020.12.2384.\n[36] P. Sopasakis, E. Fresk, P. Patrinos, Open: Code generation for em-\nbedded nonconvex optimization, IFAC-PapersOnLine 53 (2) (2020)\n6548–6554, 21st IFAC World Congress.\n[37] A. Sathya, P. Sopasakis, R. Van Parys, A. Themelis, G. Pipeleers, P. Pa-\ntrinos, Embedded nonlinear model predictive control for obstacle avoid-\nance using panoc, in: 2018 European control conference (ECC), IEEE,\n2018, pp. 1523–1528.\n[38] G. Pannocchia, M. Gabiccini, A. Artoni, Offset-free mpc explained: nov-\nelties, subtleties, and applications, IFAC-PapersOnLine 48 (09 2015).\ndoi:10.1016/j.ifacol.2015.11.304.\n[39] G. Pannocchia, Offset-free tracking mpc: A tutorial review and com-\nparison of different formulations, in: 2015 European Control Conference\n(ECC), 2015, pp. 527–532. doi:10.1109/ECC.2015.7330597.\n[40] Sika,\nSika\nboom®-461\ntop,\nhttps://swe.sika.com/\nsv/loesningar-inom-bygg/fog/byggfog-och-skum/\nsika-boom-461-top.html (2024).\n[41] X. Kan, J. Thomas, H. Teng, H. G. Tanner, V. Kumar, K. Karydis,\nAnalysis of ground effect for small-scale uavs in forward flight, IEEE\nRobotics and Automation Letters 4 (4) (2019) 3860–3867.\ndoi:10.\n1109/LRA.2019.2929993.\n54\n\n\n[42] X. He, G. Kou, M. Calaf, K. K. Leang, In-Ground-Effect Modeling and\nNonlinear-Disturbance Observer for Multirotor Unmanned Aerial Vehi-\ncle Control, Journal of Dynamic Systems, Measurement, and Control\n141 (7) (2019) 071013. doi:10.1115/1.4043221.\nURL https://doi.org/10.1115/1.4043221\n[43] T. Salzmann, E. Kaufmann, M. Pavone, D. Scaramuzza, M. Ryll,\nNeural-mpc:\nDeep learning model predictive control for quadrotors\nand agile robotic platforms, arXiv preprint (03 2022). doi:10.48550/\narXiv.2203.07747.\n55\n\n\n",
  "metadata": {
    "source_file": "dataset/pdfs/arxiv_2502.20549v1.pdf",
    "total_pages": 55,
    "title": "Toward Fully Autonomous Flexible Chunk-Based Aerial Additive Manufacturing: Insights from Experimental Validation",
    "authors": [
      "Marios-Nektarios Stamatopoulos",
      "Jakub Haluska",
      "Elias Small",
      "Jude Marroush",
      "Avijit Banerjee",
      "George Nikolakopoulos"
    ],
    "abstract": "A novel autonomous chunk-based aerial additive manufacturing framework is\npresented, supported with experimental demonstration advancing aerial 3D\nprinting. An optimization-based decomposition algorithm transforms structures\ninto sub-components, or chunks, treated as individual tasks coordinated via a\ndependency graph, ensuring sequential assignment to UAVs considering\ninter-dependencies and printability constraints for seamless execution. A\nspecially designed hexacopter equipped with a pressurized canister for\nlightweight expandable foam extrusion is utilized to deposit the material in a\ncontrolled manner. To further enhance precise execution of the printing, an\noffset-free Model Predictive Control mechanism is considered compensating\nreactively for disturbances and ground effect during execution. Additionally,\nan interlocking mechanism is introduced in the chunking process to enhance\nstructural cohesion and improve layer adhesion. Extensive experiments\ndemonstrate the framework's effectiveness in constructing precise structures of\nvarious shapes while seamlessly adapting to practical challenges, proving its\npotential for a transformative leap in aerial robotic capability for autonomous\nconstruction.",
    "published_date": "2025-02-27",
    "source": "arxiv"
  }
}