{
  "id": "arxiv_2502.21121v1",
  "text": "arXiv:2502.21121v1  [cs.NI]  28 Feb 2025\n1\nThe Complexity-Performance Tradeoff in Resource\nAllocation for URLLC Exploiting Dynamic CSI\nFederico Librino, Member, IEEE, and Paolo Santi, Senior Member, IEEE.\nAbstract—The challenging applications envisioned for the\nfuture Internet of Things networks are making it urgent to\ndevelop fast and scalable resource allocation algorithms able\nto meet the stringent reliability and latency constraints typical\nof the Ultra Reliable, Low Latency Communications (URLLC).\nHowever, there is an inherent tradeoff between complexity and\nperformance to be addressed: sophisticated resource allocation\nmethods providing optimized spectrum utilization are challenged\nby the scale of applications and the concomitant stringent latency\nconstraints. Whether non-trivial resource allocation approaches\ncan be successfully applied in large-scale network instances is\nstill an open question that this paper aims to address. More\nspeciﬁcally, we consider a scenario in which Channel State\nInformation (CSI) is used to improve spectrum allocation in\na radio environment that experiences channel time correlation.\nChannel correlation allows the usage of CSI for longer time\nbefore an update, thus lowering the overhead burden. Following\nthis intuition, we propose a dynamic pilot transmission allocation\nscheme in order to adaptively tune the CSI age. We systematically\nanalyze the improvement of this approach applied to a so-\nphisticated, recently introduced graph-based resource allocation\nmethod that we extend here to account for CSI. The results\nshow that, even in very dense networks and accounting for\nthe higher computational time of the graph-based approach,\nthis algorithm is able to improve spectrum efﬁciency by over\n12% as compared to a greedy heuristic, and that dynamic pilot\ntransmissions allocation can further boost its performance in\nterms of fairness, while concomitantly further increase spectrum\nefﬁciency of 3-5%.\nIndex Terms—URLLC, Radio Resource Allocation, CSI, Smart\nFactory, Internet of Things, Shareability Graph\nI. INTRODUCTION\nIn the next future, the foreseeable spread of the Internet\nof Things technologies is expected to highly contribute to the\ndevelopment of the Industry 4.0 paradigm. Coping with the\nstringent requirements of Industrial Internet of Things (IIoT)\nis extremely challenging, since high precision and low latency\nare both fundamental for the vast majority of applications\nand scenarios. In addition, dense networks, involving tens or\nhundreds of nodes, are expected to be deployed in order to\naccomplish complex tasks and coordinate multiple systems\nand interfaces.\nIn order to match the required performance, communica-\ntions among huge numbers of operating devices must rely on\nsuitable strategies and protocols. To this aim, Ultra-Reliable\nF. Librino is with the Italian National Research Council, 56124 Pisa, Italy\n(e-mail: federico.librino@iit.cnr.it).\nP. Santi is with the Italian National Research Council, 56124 Pisa, Italy\nand with the Massachussets Institute of Technology, 02139 Cambridge, MA,\nUSA (e-mail: paolo.santi@iit.cnr.it).\nCopyright (c) 20xx IEEE. Personal use of this material is permitted.\nHowever, permission to use this material for any other purposes must be\nobtained from the IEEE by sending a request to pubs-permissions@ieee.org.\nLow-Latency Communications (URLLC) are currently being\nextensively investigated, and are seen as a promising approach\nto tackle the issues posed by highly demanding scenarios.\nURLLC, and their application to IIoT, are in fact a funda-\nmental brick of the 5G and emerging 6G systems, whose\nvision encompasses, among the others, the development of\nmassive machine-to-machine communications [1], [2]. To this\naim, URLLC management needs innovative approaches, since\nboth a very high reliability (with an error rate of 10−5 or even\nlower) and a very stringent latency constraint, in the range of\na few milliseconds, are enforced. In order to efﬁciently utilize\nthe available spectrum, orthogonal resource allocation through\nOFDMA (Orthogonal Frequency Division Multiple Access)\nis commonly regarded as a feasible technique, due to its\nrobustness and ﬂexibility. One of the main issues is hence how\nto allocate the available time-frequency resources. Distributed\nsolutions are generally simpler to implement, but the lack of a\ncoordination entity makes it necessary to introduce redundancy\nwith the aim of correcting the errors due to unwanted collisions\namong transmissions.\nConversely,\ncentralized\nallocations\ncan\nbe\noptimized\nthrough properly designed algorithms, provided that all the\nnecessary information is available at the central entity. This\nposes a strong limitation when networks scale to large numbers\nof devices, since optimized allocations usually require a heavy\n(non polynomial) computational burden, which is hardly com-\npatible with the stringent timing constraints of URLLC. On the\nopposite side, much faster heuristics have been also developed.\nWhile they offer the advantage of a quick computation (even\nlinear with the number of transmitters), as the network grows\nthey can easily fall far off the actual optimum and lead to\nsubstantial resource waste.\nIn our previous work [3], we proposed an in between solu-\ntion: an algorithm based on graph theory which was proved\nto run in polynomial time, yet attaining high performance in\nterms of both served trafﬁc and fairness. Although promising,\nthe obtained results were limited to a static scenario, where\nChannel State Information (CSI) is not available and allocation\nis performed based only on statistical knowledge of the chan-\nnel conditions. However, a highly dynamic radio environment\nis expected in most Industry 4.0 applications, and whether non-\ntrivial optimization algorithms can be successfully used in this\ncontext as well is an open question that this paper seeks to\naddress.\nThe need for a more efﬁcient usage of the available spec-\ntrum in a dynamic radio environement makes it relevant to\nacquire and exploit updated information about the channel\ncondition. The collection and exploitation of CSI raises two\nadditional issues. Firstly, CSI must be conveyed to the central\n\n\n2\nentity, meaning that a fraction of the resources must be\ndevoted to pilot transmissions. The exact amount of such\noverhead resources must be carefully planned: increasing it\nimproves the accuracy of the CSI, but reduces the spectrum\nleft for data transmission; lowering it grants more resources\nfor data, making it easier to match the reliability and latency\nconstraints, but allocation must rely on less precise CSI.\nFrom this viewpoint, channel time correlation, which gener-\nally impairs the communications by limiting time diversity,\ncan instead be helpful, since CSI needs to be updated less\nfrequently. Secondly, as the CSI is collected and refreshed,\nresource allocation should be recomputed so as to follow the\nchanges in the channel conditions, even for applications with\ndeterministic and periodic trafﬁc patterns. This also requires\ntime, depending on the utilized algorithm, and in fast changing\nscenarios the obtained allocation solution might be already too\nold to achieve satisfying performance.\nIn this work, we investigate these aspects in an uplink indus-\ntrial scenario, with hundreds of sensors collecting information\nand transmitting it to a single Access Point (AP). The scenario\nmay represent a smart factory, where a discrete automation\napplication is considered. As in [4], transmissions are consid-\nered to be periodic, and a semipersistent cyclic reservation is\nneeded. We consider a realistic scenario, where the spectrum\nis intensively reused among several coexisting networks. This\nreﬂects into two main consequences. The available spectrum\nmight be fragmented into non adjacent sub-bands, thus im-\nplying that different frequency channels experience different\nchannel conditions. Besides, even if proper frequency reuse\ntechniques are employed in order to mitigate the inter-network\ninterference, this cannot be completely avoided, and different\nchannels might be differently affected by residual interference.\nAll these factors make an efﬁcient resource allocation an even\nharder problem, and a timely exploitation of the CSI pivotal.\nA. Related Work\nThe very tight latency constraint required for URLLC has\nled the 3rd Generation Partnership Project to suggest proposals\nfor a novel frame structure for OFDMA systems [5], with\nslots shorter than 1 ms. Several resource allocation schemes,\nable to attain good performance in this type of scenario, have\nbeen then investigated [4], [6]–[10]. Distributed schemes avoid\nthe burden of a centralized computation and the need for a\nresource reservation phase. Hence, this approach leads to much\nfaster algorithms, at the cost of allowing potentially interfering\ncommunications. When dealing with very dense networks, this\nmay stronlgy impair system reliability, since retransmissions\nwould make it difﬁcult to match the stringent latency con-\nstraint. Conversely, centralized schemes can ensure orthogonal\nresource allocation, avoiding errors due to collisions among\nsimultaneous transmissions. The drawback lies in the need for\nan efﬁcient centralized allocation schemes. Authors in [11]\naddress the problem of a real-time wireless control system\nbased upon URLLC, and propose a suboptimal solution aiming\nat maximizing the uplink spectral efﬁciency. In [4], two\nscenarios are compared: a centralized periodic reservation is\nproposed for deterministic packet arrivals, similar to our work,\nwhile a grant-free distributed access to a common pool of\nresources is outlined for sporadic packet arrivals. Centralized\nresource allocation based on the solution of a mixed integer\nnon convex optimization problem is presented in [12], where\npower allocation is also tackled. An approximated solution\nrequiring polynomial time is derived, and applied to the\ndownlink, but the number of users remains much lower than\nin our work. In addition to spectrum and power allocation,\nthe optimal antenna conﬁguration in a MIMO (Multiple-Input-\nMultiple-Output) scenario is also sought in [13], with the aim\nof maximizing energy efﬁciency. Spatial diversity is shown\nto be unable to ensure both very high reliability and very\nlow latency with ﬁnite power in [14]: here, queueing delay\nis also considered, and a cross layer optimization method\nis detailed. The application of URLLC to device-to-device\n(D2D) communications in envisioned in [15], where authors\nderive an optimal power control to maximize the average\nD2D rate, with a constraint on the outage probability at the\nBase Station. Recently, tools from machine learning (ML)\nhave been also considered for solving this and other similar\ntypes of allocation problems [16]–[18]. Due to its inherent\nadaptability, this approach is particularly effective when the\ncorrelations between channel measurements, energy efﬁciency,\nenvironmental parameters and transmissions reliability are too\ncomplex to be modeled in a tractable way. In [16], authors use\ndeep reinforcement learning to optimize bandwidth allocation\nbetween URLLC and enhanced Mobile Broad Band services\ntargeting a system wide tradeoff. Adaptive channel assignment\nunder the cognitive communication paradigm is instead in-\nvestigated in [17], where fountain codes are used to achieve\nthe target reliability, while ML is exploited to match the\nlatency constraint. In most works, CSI is assumed to be perfect\nand readily available [13]–[15]. The impact of imperfect CSI\nis instead quantiﬁed in [10], [19]–[21]. In [19], resource\nallocation includes also the assignment of resources to pilot\nsignaling and feedback overhead, but the scenario is not time\nvarying, and the resulting non-linear integer programming\nproblem is solved via exhaustive search over a small feasible\nsolution space. Imperfect CSI only is assumed in [10], with a\nbounded channel error, and an iterative algorithm is outlined,\nbut for low numbers of active devices. The issue of imperfect\nCSI is also tackled in [20], where massive Multi User MIMO\ndeployment is analyzed. The optimal pilot length is attained\nthrough linear minimum error probability detection, and the\noptimal fraction of resources reserved to pilot signal is found\nto be around 30% in this speciﬁc setting. A similar result\nis attained also in [21], where the authors use instead the\ngolden section search method to quickly ﬁnd the optimal\npilot length. Finally, [22] addresses the coexistence of URLLC\nand enhanced Massive Broad Band through network slicing.\nThe Max-Matching Diversity channel allocationm, originally\nproposed in [23], is utilized to minimize the number of users\nin outage. In our work, the adopted algorithm also relies\non maximum matching over a bipartite graph, but weights\nare assigned to edges in order to incorporate the latency\nconstraints into the resource allocation algorithm, while still\nkeeping a polynomial complexity.\n\n\n3\nB. Our contribution\nIn our work, we aim at investigating the tradeoff between\nCSI accuracy and data transmission reliability from a novel\nperspective. In most works, part of the spectrum recources\nare reserved to pilot signaling, which is then immediately\nexploited to enhance decoding reliability over a predetermined\nset of allocated resources. However, due to the very short\ntime scale of URLLC, channel time correlation cannot be\nneglected. While this aspect often impairs systems based on\nretransmissions, due to reduced time diversity, we instead ex-\nploit this correlation in order to limit the overhead required for\nCSI. Actually, channel time correlation, especially if strong,\nmakes channel estimations useful for longer times, and chan-\nnel measurements can still be used for subsequent resource\nallocation procedures, although with lower effectiveness, as\ntime passes. In our approach, CSI is hence used proactively,\ntogether with topology and interference knowldege, in order to\nderive the amount of resources required for each transmitting\ndevice in order to reach the target reliability. Aiming at\nimproving fairness, we also introduce a smart and dynamic\npilot transmissions allocation, since differences in link lengths\nand measured fading coefﬁcients can be better exploited with\na tunable CSI update frequency. Since information age is a\nkey issue for a resource allocation based on already stored\nchannel measurements, the computational time of a resource\nallocation algorithm also plays a pivotal role. Algorithms\ntaking longer times make the usage of stored CSI less effective,\nand this may become dramatic in very dense networks, with\nhundreds of devices. We hence analyze the GBA (Graph\nBased Algorithm) allocation algorithm outlined in [3], which\nwas proved to run in polynomial time, in order to assess its\ncapability of leveraging the channel information provided by\nthe transmitters.\nSummarizing, the original contribution of this article are the\nfollowing:\n1) We introduce the notion of dynamic CSI in the context\nof URLLC, where ﬂexible allocation of pilot resources\nis done both in terms of frequency of CSI update, as well\nas in expected utility of the update to increase fairness\nin channel access;\n2) We modify the GBA resource allocation algorithm in\norder to include an in-band pilot transmission from\ndevices so as to provide channel estimation at the AP\nand to exploit it;\n3) We analyze the tradeoff between CSI update frequency\nand overall system performance in terms of served\ntrafﬁc, in a dense network scenario;\n4) We assess the impact of the algorithm computational\ntime on the overall performance, comparing GBA with a\ngreedy heuristic algorithm running in quasi-linear time;\n5) We evaluate the beneﬁts of dynamic pilot transmission\nallocation in terms of both system fairness and spectrum\nefﬁciency.\nWe organize the paper material as follows. In Section II, we\nbrieﬂy describe the analyzed scenario and the graph-based\nallocation algorithm GBA. We also highlight the modiﬁcations\nrequired for GBA to include also pilot signaling for CSI\nestimation. Section III details the time correlated channel\nmodel, as well as how the pilot signaling is organized, and\nthe dynamic pilot transmissions allocation scheme is outlined\nin Section IV. The obtained results are presented in Section V,\nwhile Section VI concludes the paper.\nII. ANALYZED SCENARIO AND GBA OVERVIEW\nWe consider a scenario where N devices are randomly\nplaced in a circular area of radius L around a common Access\nPoint (AP). Each device generates a data packet of size ℓbits\nperiodically, with period ν ms, and must convey the packet\nto the AP with reliability ρ and within a predeﬁned delay,\notherwise the packet is considered to be lost.\nThe available spectrum must be shared among all devices,\nand is reused through an OFDMA (Orthogonal Frequency\nDivision Multiple Access) based approach. To this aim, time\nis divided into slots of duration τ ms, corresponding to nt\nsubsequent OFDM symbols. Hence, we can deﬁne a cycle\nas a sequence of T = ν/τ time slots, with each device\nDi generating one packet per cycle at a ﬁxed issue time\nti ∈{1, 2, . . ., T }. The delay constraint is ∆slots, meaning\nthat the packet from user Di must be delivered within time\nslot ti + ∆. Different packet delays for different devices can\nbe considered as well, but this does not alter the allocation\nprocedure, hence we opt for a single value of ∆.\nWe assume that C frequency channels are available, each\ncomposed of nc adjacent subcarriers. Channels need not be\ncontiguous in the spectrum. We deﬁne a Resource Unit (RU)\nas the basic time-frequency resource unit, which spans over\none frequency channel and one time slot. Within each cycle,\nthus, T C RUs are available to be assigned to (some of) the\nN devices.\nPart of the RU can be reserved for pilot transmission, in\norder to acquire CSI and the AP. We call them Pilot RUs\n(pRUs), and they are generally ﬁxed and known to all the\ndevices. The amount of these pRUs and how they are exploited\ndepends on the speciﬁc allocation algorithm, and is described\nin the next sections.\nThe allocation of the resources is performed in a centralized\nmanner by the AP through the GBA algorithm introduced\nin [3] and whose functioning is recalled in the next section.\nThe information required to run the algorithm are collected at\nthe AP, which then broadcasts the overall assignment over a\ndedicated control downlink channel, not modeled in this work.\nA. The Graph-Based Allocation Algorithm (GBA)\nIn this section, we brieﬂy summarize the GBA algorithm,\nand outline the minor modiﬁcations required to reserve some\nof the RUs to pilot signaling.\nThe GBA algorithm allocates the highest fraction of the\nN devices on the CT RUs. Every device can be assigned\na subset of subsequent RUs on the same frequency channel,\nwhose number depends on the device and on the selected\nchannel as well. More precisely, we deﬁne as F(c, i, ρ) the\nnumber of RUs required on channel c in order for device\nDi to transmit with reliability ρ. The exact expression of\nthis function depends on the application scenario, and is\n\n\n4\ncomputed, for all the devices and the channels, at the beginning\nof the GBA execution. Furthermore, a set of C variables\nβ1, β2, . . . , βC is also initialized, where βc ∈{0, 1, . . ., T }\nindicates the latest already allocated RU on channel c. At the\nbeginning all the RUs are free, hence all the βc’s are set to 0.\nThe GBA works in subsequent iterations. At the beginning\nof each iteration, GBA creates a weighted bipartite graph\nbetween two sets of nodes, C and N. The former is the set of\nthe C available channels, while the latter is the set of the N\ndevices yet to be allocated. An edge (Xc, Yi) between node\nXc ∈C corresponding to channel c, and node Yi corresponding\nto device Di exists only if the following condition holds:\nF(c, i, ρ) ≤∆.\n(1)\nThe condition ensures that the number of RUs needed for\na reliable trasmission from Di to the AP on channel c is\nlower than the maximum allowed latency, hence channel c\nis a feasible channel for Di. The weight of this edge is given\nby\nw(c, i) = T + ∆−(max(βc, ti −1) + F(c, i, ρ)) ,\n(2)\nLooking at equation (2), the term max(βc, ti−1)+1 indicates\nthe ﬁrst free RU that would be allocated to device Di if Di\nwere assigned to this channel. Since F(c, i, ρ) RUs are then\nnecessary to Di for a reliable transmission on channel c, the\nterm (max(βc, ti −1) + F(c, i, ρ)) corresponds to the last RU\nthat would be reserved to Di. Given that T RUs are available\non each channel, the weight in (2) simply corresponds to the\nnumber of remaining free slots on channel c after allocating\ndevice Di to it, plus an offset ∆. After having evaluated\nthe existence and weight of all the edges, the Hungarian\nalgorithm [24] is run to ﬁnd the maximum weighted matching\nover this graph. If edge (Xc, Yi) belongs to the matching, then\nthe RUs on channel c from slot max(βc, ti −1) + 1 to slot\nmax(βc, ti −1) + F(c, i, ρ) are assigned to device Di. The\nweight expression in (2) ensures that allocation is made in\nsuch a way that the quantity of still available RUs after this\nphase is maximized. For any channel c on which a device Di\nhas been assigned, the corresponding variable βc is updated\nto max(ti −1, βc) + F(c, i, ρ), thus still containing the index\nof the last busy RU on this channel. At most C out of the\nN devices are allocated in the ﬁrst phase. These devices are\nremoved from the set N, and the second phase begins. A new\nbipartite graph is built between C and the updated set N. The\nexisting condition for edge (Xc, Yi) is now slightly different\nto account for the already allocated RUs, and becomes\nmax(βc, ti −1) + F(c, i, ρ) < ti + ∆.\n(3)\nIn addition, all the nodes in N with degree 0 in this new\nbipartite graph are also excluded from N: the corresponding\ndevices cannot be served in this allocation round without\nviolating either the reliability or the latency constraint. From\nthis point on, the phase proceeds exactly as the ﬁrst one: the\nweights, which might be different, due to the modiﬁed values\nof the βc’s, are assigned to the edges, and a new maximum\nweighted matching is derived. At each subsequent phase, at\nmost C devices are allocated and removed from N. The\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nti\nChannel c\nζ = 6\nFigure 1. Example of resource allocation on a channel partially used for pilot\ntransmission. Red squares are already allocated RUs, hence βc = 3 for this\nchannel. Grey squares are the pRUs reserved to pilot signaling, and cannot\nbe allocated. We assume that for user Di the number of required RUs is\nF(c, i, ρ) = 4, and that the data packet is issued at time slot ti = 3. Hence,\nthe RUs up to slot 9 are assigned to Di, with ζ = 6.\nalgorithm proceeds until the set N is empty, meaning that\nall the devices have been either allocated or excluded.\nB. Integration of pilot transmission\nThe GBA functioning illustrated in the previous section\nassumes that all the CT RUs in a cycle are free for data\ntransmission. This may not be the case, if some of them are\ninstead pRUs reserved to pilot transmission. We now illustrate\nhow GBA is to be slightly modiﬁed to take this issue into\naccount. We assume that the pRUs are known and ﬁxed. In\neach iteration of the algorithm, when a new bipartite graph\nis built, the weight of edge (c, i) must consider the pRUs\non channel c, which may increase the overall transmission\ntime. The modiﬁed formulation of the edge existence condition\nreads as\nmax(βc, ti −1) + ζ < ti + ∆,\n(4)\nbeing ζ the minimum value such that the number of available\nRUs on channel c from slot max(βc, ti −1) + 1 to slot\nmax(βc, ti −1) + ζ (included) is equal to F(c, i, ρ). This is\nequivalent to computing the number of required RUs for the\ndevice transmission, starting from slot max(βc, ti −1) + 1\nand jumping the pRUs until F(c, i, ρ) are allocated to Di, as\nillustrated in Figure 1. Similarly, the weight assigned to the\nedge to compute the matching is now expressed as\nw(c, i) = T + ∆−(max(βc, ti −1) + ζ) ,\n(5)\nwhile the other aspects of the algorithm remain unaltered.\nIII. SYSTEM MODEL\nA. Correlated Channel Model\nThe wireless transmission from a device to the AP is\naffected by both path loss and fading. The former depends on\nthe physical distance between transmitter and receiver, while\nthe latter is modeled as a complex Gaussian random variable\nwith zero mean and unit variance. The fading coefﬁcient of\neach channel is considered constant across the entire cycle,\nand independent across channels. Hence, the received Signal to\nInterference plus Noise Ratio (SINR) from user Di on channel\nc at cycle m is expressed as\nΓi,c,m = PT d−α\ni\nN0 + Ic\n|hi,c,m|2 = ΓT d−α\ni\nΛc\n|hi,c,m|2,\n(6)\nwhere α is the path loss exponent, di is the distance between\nDi and the AP, PT is the transmit power, which is the same for\n\n\n5\nall the devices, Ic is the interference on channel c coming from\nsurrounding transmissions, N0 is the noise power and hi,c,m\nis the fading coefﬁcient. We assume that the resources are\northogonally allocated, meaning that there is no interference\namong users. However, in a realistic scenario the spectrum\nis often intensively reused, and it is unlikely that interference\ncoming from surrounding systems can be completely removed.\nIn our work, we consider Ic as a residual interference and\nmodel it as additional noise YcN0, where Yc ∼U(0, YM) is a\nreal uniform random variable. The residual interference level\nis considered to be slowly varying over time, and is measured\nat the AP at the beginning of each cycle. In (6), we also\ndeﬁne the transmit SNR as ΓT = PT /N0, and Λc = 1 + Yc is\nan equivalent coefﬁcient to measure the channel interference\nlevel. Given the random distribution of the fading coefﬁcient,\nits squared value |hi,c,m|2 is an exponential random variable\nwith parameter 1.\nDue to the very short duration of a cycle, temporal correla-\ntion should not be neglected. Hence, we consider a temporally\ncorrelated fading, modeled through a ﬁrst-order Gauss-Markov\nprocess [25] with correlation factor γ across subsequent cycles,\nsuch that\nhi,c,m+1 = γhi,c,m +\np\n1 −γ2ξ,\n(7)\nwhere ξ is also a complex Gaussian random variable with zero\nmean and unit variance.\nB. Derivation of F(c, i, ρ)\nThe allocation algorithm GBA, described in Section II,\nprescribes that each device can be assigned RUs on the\nsame channel, over which a data packet is transmitted. The\ndata packet is correctly received if all its parts, sent over\ndifferent RUs, have been correctly decoded. Since the fading\ncoefﬁcient is considered ﬁxed over the whole cycle, the ℓ\nbits of the data packet are assumed to be equally spread\nover all the k assigned RUs, with a resulting rate of ℓ/(kτ)\nbit/s. We derive the decoding probability pdec by using the\nShannon approximation1: an outage occurs when the resulting\ntransmission rate exceeds the instantaneous channel capacity\nΩ= B log2(1 + Γi,c,m), where B is the channel bandwidth.\nHence, we get\npdec\n=\nP\n\u0014\nB log2(1 + Γi,c,m) ≥ℓ\nkτ\n\u0015\n=\nP\n\u0014\n|hi,c,m|2 ≥\nΛc\nΓT d−α\ni\n\u0010\n2\nℓ\nkq −1\n\u0011\u0015\n(8)\nwhere q = Bτ. In order to match the reliability constraint,\nwe must ensure that pdec ≥ρ by properly tuning the number\nk of assigned RUs. When no CSI information is available,\n|hi,c,m|2 is exponentially distributed, and the minimum num-\nber F(c, i, ρ) of RUs to be allocated to device Di on channel\nc is [3]\nF(c, i, ρ) =\n&\nℓ\nq\n\u0014\nlog2\n\u0012\n1 −ΓT ln(ρ)\nΛcdα\ni\n\u0013\u0015−1'\n.\n(9)\n1The Short Packet Communication (SPC) model [26], which is more\nsuitable for very short transmissions, as well as the approximation based on\nlinearization in [27], are shown in [3] to be well approximated by the Shannon\nexpression in this type of scenario.\n0\n1\n2\n3\n4\n5\n|h i,c,m+t |2\n0\n0.2\n0.4\n0.6\n0.8\n1\npdf\nt=1\nt=3\nt=5\nt=10\nt=20\nNo CSI\nFigure 2. Conditional pdf of |hi,c,m+t|2 when |hi,c,m|2 = 1.5, for\ndifferent values of the temporal distance t.\nHowever, due to the channel temporal correlation, the knowl-\nedge of the fading coefﬁcient |hi,c,m|2 at a given cycle\nm modiﬁes the distribution of |hi,c,m+t|2 according to the\nfollowing Lemma:\nLemma 1. The probability distribution function ft(x|z) of\n|hi,c,m+t|2 given that |hi,c,m|2 = z can be expressed as\nft(x|z)\n=\nP[|hi,c,m+t|2 = x\n\f\f |hi,c,m|2 = z]\n=\n1\nb e−x\nb e−a2z\nb I0\n\u00122a\nb\n√xz\n\u0013\n,\n(10)\nwhere\na = γt,\nb = (1 −γ2)\nt−1\nX\nj=0\nγ2j,\n(11)\nwhile I0(·) is the modiﬁed Bessel function of the ﬁrst kind of\norder 0.\nProof. See Appendix A.\nBy looking at the pdf in (10), it can be observed that a →0\nand b →1 as t →+∞; hence, the pdf tends to an exponential\ndistribution with unitary mean, which is correct, since this case\ncorresponds to having no CSI at all. As an example, in Figure 2\nwe show the pdf of |hi,c,m+t|2 when |hi,c,m|2 is equal to 1.5,\nfor different values of t. As t increases, not only does the\nvariance of the distribution increase, but also the probability\nof very low values becomes higher, thus making it necessary\nto allocate more RUs in order to match the high reliability\nconstraint. This conﬁrms the importance of accessing recent\nand relevant CSI in order to reduce the amount of necessary\nresources and thus have room for a higher number of devices.\nIn case of channel correlation, the number F(c, i, ρ, t|z) of\nRUs required for device Di on channel c at cycle m given the\nknown value |hi,c,m−t|2 = z is the value k that gives pdec = ρ,\nwhich in this case reads\nP\n\u0014\n|hi,c,m|2 ≥\nΛc\nΓT d−α\ni\n\u0010\n2\nℓ\nkq −1\n\u0011\f\f\f\f |hc,i,m−t|2 = z\n\u0015\n= ρ.\n(12)\n\n\n6\n0\n5\n10\n15\n20\n25\nCSI age [cycle]\n0\n1\n2\n3\n4\n5\n6\n7\n8\nRequired RUs\nz=0.5\nz=1.5\nz=2.5\nz=3.5\nNo CSI\nFigure 3. Needed resources as a function of the CSI age, for different\nvalues of the measured channel fading coefﬁcient. Here the device is\nplaced at a distance d = 40 m from the AP, and the parameters in\nTable I are used.\nBy calling Ft(x|z) =\nR x\n0 ft(u|z) du the conditional cumula-\ntive distribution function (CDF) of the fading coefﬁcient, we\ncan elaborate (12) into\nFt\n\u0012\nΛc\nΓtd−α\ni\n\u0010\n2\nℓ\nkq −1\n\u0011\f\f\f\f z\n\u0013\n=\n1 −ρ\nΛc\nΓtd−α\ni\n\u0010\n2\nℓ\nkq −1\n\u0011\n=\nF (−1)\nt\n(1 −ρ|z) , (13)\nwhich ﬁnally yields\nF(c, i, ρ, t|z) =\n&\nℓ\nq\n\u0014\nlog2\n\u0012\n1 +\nΓT\nΛcdα\ni\nF (−1)\nt\n(1 −ρ|z)\n\u0013\u0015−1'\n.\n(14)\nEquation (14) must be solved numerically, due to the non\nclosed form of Ft(x|z). Nevertheless, when implementing the\nalgorithm into a real system, a fast solution can be obtained by\nquantizing the possible values of the channel fading coefﬁcient\nand building a matrix F ofﬂine. Element F[t, r] contains\nthe value F (−1)\nt\n(1 −ρ|z), being z the midpoint of the r–th\nquantization bin of the fading coefﬁcient. This matrix is hence\nchecked to quickly derive the number of required RUs through\n(14). Notice that as t grows, the distribution Ft(x|z) tends to\nthe CDF an exponential distribution, namely 1 −e−x, thus\nleading F(c, i, ρ, t|z) back to the expression of F(c, i, ρ) in\n(9).\nIn Figure 3, we highlight the importance of a timely CSI\nin terms of needed RUs in order to match the reliability\nconstraint. We plot the non rounded value given by (9) and\n(14) as a function of the CSI age t measured in cycles, for\nγ = 0.95. It is immediately seen that, when the measured\nCSI z at a given cycle m is high, having this information can\nlead to dramatic decrease in the number of needed RUs at\ncycle m + t. Even when t is large (e.g., t = 10), less than\nhalf of the RUs are enough, if the measured coefﬁcient z was\nhigh. Things are different if instead the measured channel was\nexperiencing harsh conditions (z < 1). In this case, CSI is still\nuseful, but only if it is fresh (t < 4 cycles). In this case, in\nfact, having an imperfect or outdated knowledge (hence with\nlarger variance) of a bad channel results in requiring more\nRUs than having no knowledge at all.\nC. Providing Channel State Information\nIn order to obtain CSI, part of the CT RUs in each cycle\nneed to be reserved for pilot transmission. In this paper,\nwe assume than perfect CSI of a channel can be obtained\nthrough a pilot signal that extends over a single RU on that\nchannel. While this is a reasonable assumption in this speciﬁc\nscenario [28], considering estimation errors and the tradeoff\nbetween its magnitude and the pilot length is left as an\ninteresting future extension.\nSince the age of the CSI plays a pivotal role in the allocation\nefﬁciency, the overall performance of the system is determined\nby two quantities:\n1) the fraction η of resources reserved for pilot transmis-\nsion;\n2) the computational delay W necessary to update the\nchannel allocation.\nLet us analyze them separately.\nAs to the ﬁrst element, we assume that on each channel c,\nM = ηT RUs are reserved for pilot, with η ∈(0, 1). The\ndevices are informed of which RUs are pilot RUs (pRUs),\nwhich can be ﬁxed or change across cycles, and exploit them\nin a round robin fashion. At each cycle, M devices are allowed\nto send a pilot: each of them transmits the pilot signal on one\npRU per channel. This is meant to let the AP have a complete\nupdate of the entire CSI of a given device over all the channels\nin the same cycle, but other choices are feasible as well.\nWhen GBA computes the resource allocation, the pRUs are\ntaken into account, and the modiﬁed version of the algorithm,\ndescribed in Section II, ensures that they are not assigned to\nany device.\nIn an idealized setup, where the allocation is computed in-\nstantaneously, the channel information collected during a cycle\nwould be immediately used to derive the resource allocation\nin the subsequent cycle. However, in practical scenarios, some\ntime ωc is needed for any allocation algorithm to run, and this\ntime is not negligible in the analyzed scenario, where the cycle\nduration ν can be as low as a few milliseconds. Let us deﬁne\nthe computational delay W = ⌈ωc/ν⌉+ 1. This value gives\nan indication about the time needed to exploit the collected\nCSI2. In fact, this means that the channel information collected\nduring cycle m is used for the allocation that will be adopted\nin cycle m + W. For example, if ωc < ν, making W = 2, at\nthe end of cycle m the AP starts computing the new allocation,\nand completes it before the end of the subsequent cycle m+1.\nHence, the new allocation becomes effective in cycle m + 2.\nA sketch of the CSI collection functioning is illustrated in\nFigure 4.\nWhen computing the allocation, we assume that the compu-\ntational delay is known. Hence, the system is aware of when\n2To be more precise, we should consider both the computational time ωc\nof the algorithm and the allocation information broadcast time ωb. While the\nformer strongly depends on the characteristics of the adopted algorithm, the\nlatter can be assumed ﬁxed and performed over a robust downlink control\nchannel. We consider it negligible in this study, but choosing a ﬁxed positive\nvalue for ωb would not signiﬁcantly alter the proposed approach.\n\n\n7\nCycle m\nCycle m + 1\nCycle m + 2\nTime\nFrequency\n1\n1\n1\n1\n1\n2\n2\n2\n2\n2\n3\n3\n3\n3\n3\n4\n4\n4\n4\n4\n5\n5\n5\n5\n5\n6\n6\n6\n6\n6\nCSI collection\nBCA/GBA\nNew Resource Allocation\nωc\nFigure 4. Example of pRUs allocation. Here, each cycle has T = 8 slots, and η = 0.25, meaning that M = 2 devices can send a pilot over each channel\nat a given cycle in a round robin fashion, as shown with the numbers, using the pRUs (reported in colors). The computational time ωc is lower than a cycle\nduration, so W = 2 and the information collected at cycle m is used for the allocation of the data RUs (in white) on cycle m + 2.\nthe information will be used, and can therefore select the\ncorrect channel fading distribution. If, for example, the CSI\nof a given device Di has been collected in the present cycle,\nand W = 2, the number of RUs required for Di on channel c\nis found from (14) with t = 2.\nNotice that the CSI age is not the same for all the devices.\nLooking at Figure 4, and assuming that only 6 devices are\ndeployed, in cycle m + 2 the CSI age of users D1 and D2\nis equal to 2 cycles (since it was collected during cycle m),\nbut it is instead equal to 3 for users D5 and D6 (collected in\ncycle m−1) and to 4 for users D3 and D4 (collected in cycle\nm −2).\nIV. DYNAMIC PILOT TRANSMISSION SELECTION\nA relevant issue of the considered allocation algorithm is\nfairness. Due to the impact of path loss, devices located farther\nfrom the AP experience worse channel conditions, and thus\nneed, on average, a higher amount of RUs. Hence, in order\nto allocate the highest amount of users, GBA ﬁrst selects\nthe closest ones, which can be accommodated with higher\nspectrum efﬁciency. This leaves small room for the farthest\nones, and a fairness issue arises.\nIn this section, we propose a different scheme to organize\nthe pilot transmissions, pursuing a fairer resource utilization\nwhile not sacriﬁcing efﬁciency. The main idea is that devices\nlocated farther from the AP should send pilots more often than\nthe closer ones. An updated CSI at the AP can consistently\nreduce the amount of needed RUs, and this is far more relevant\nfor distant devices.\nA. Best Improvement Pilot Allocation\nSimple strategies for more efﬁcient allocation of pRUs\nbased only on topology can be envisioned. For instance, only\ndevices farther than a threshold distance might be allowed to\nutilize the pRUs in a round robin fashion. The strength of this\napproach is that it does not require additional information,\nsince the scheme shows a periodic, deterministic allocation.\nHowever, the drawback is that devices deployed close to the\nthreshold distance would suffer from a severely increased need\nfor RUs. Furthermore, topology alone cannot fully identify the\ndevices that need more resources, since fading also plays a\npivotal role. On the other hand, transmitters with good channel\nconditions may wait longer for a new CSI update than devices\nexperiencing harsh conditions. Since channel conditions are\nactually partially known at the AP, due to previously received\npilots and to channel time correlation, we can design a better,\ndynamic strategy that leverages this information.\nWhile keeping the fraction η of pRUs ﬁxed, the devices\nallowed to send pilot over these pRUs are now determined\nin a different way. The choice of a given subset of devices to\nsend their pilot affects system performance, and also its future\nevolution. From a theoretical perspective, one may develop\na Markov Decision Process to determine the optimal pRUs\nallocation policy. The states would be deﬁned as a set of\nN couples (zi, ui), being zi the vector of the last measured\nC channel coefﬁcients for device Di and ui the age of this\ninformation (number of cycles since the last pilot sent by Di).\nAn action would correspond to the selection of a subset of\nthe N devices for pilot transmission, which would change the\nstate of the system accordingly. Finally, the reward should be\ndeﬁned as a function of the overall amount of RUs required for\ndata transmission after the CSI update, which is also a function\nof the new system state. The well known Bellman equation\nexpresses the optimal policy of the MDP. Unfortunately, even\nif the channel measurements are quantized, the overall number\nof states is huge, and this optimal approach is clearly not\nscalable for real time execution.\nWe resort instead to a heuristic suboptimal approach, that\ncan quickly select the devices required to send pilot in each\ncycle. The rationale behind this approach is to choose the\ndevices that can get the maximum advantage from a CSI\nupdating. The input for the algorithm, which is executed at\nthe end of each cycle, is the set of N couples (zi, ui) as\nbefore, where ui = 0 if Di transmitted a pilot in the cycle\nthat has just ended. For device Di and channel c, the gain\nobtained through a pilot transmission is expressed as\nφic = F(c, i, ρ, ui + 1|zi(c)) −F(c, i, ρ, W|xic).\n(15)\nThe former term is the number of RUs needed if the currently\nstored CSI is exploited. In fact, at the end of the next cycle,\nthe CSI age of a device that does not transmit a pilot simply\nincreases by 1. The latter is the number of RUs required if a\nnew measurement xic is collected through a pilot transmission\n\n\n8\nin the incoming cycle. In this case, the CSI age is set to W,\nwhich takes into account the number of cycles still needed\nbefore the data resource allocation based on this new CSI will\nbecome effective.\nThe gain expressed in (15) has two main drawbacks. Firstly,\nthe measured coefﬁcient xic is not known a priori. Secondly,\nthe gain depends on the channel, but we do not know in\nadvance which channel will be allocated to the device for\ntransmission. To tackle the ﬁrst point, we can rely on the\nexpected value E[xic], which can be computed through the\ndistribution given in Lemma 1 exploting the current CSI value\nzi(c) and its age ui. As to the second issue, simulations\nactually show that GBA on average assigns each device to\nits best channel around 90% of the times, and we can thus\nfocus our attention only on it. It is then reasonable to estimate\nthe gain for device Di by\nφi = min\nc\nF(c, i, ρ, ui + 1|zi(c)) −min\nc\nF(c, i, ρ, W|¯xic),\n(16)\nwith\n¯xic = E[xic|zi(c)] =\nZ +∞\n0\nxfui(x|zi(c))dx,\n(17)\nand fui(x|zi(c)) deﬁned in (10). Once the gain is computed\nfor all the N devices, the pRUs are assigned to the ηN devices\nwith the highest gain.\nThe proposed algorithm is inherently dynamic, since it tunes\nthe frequency of pilot transmission based on the topology\nand on the channel conditions of each device. From the\nimplementation point of view, the computation of (16) can\nbe easily done by quantizing the fading coefﬁcients. Given\nthe channel time correlation γ, a table can then be built\nofﬂine, where each row corresponds to a quantized value of\nthe previously measured fading coefﬁcient, and each column\nto the information age in terms of cycles. Each element then\ncontains the desired fading expected value for any combination\nof these two terms. The overall complexity is O(NC), in order\nto ﬁnd the gains of all the nodes, plus O(N log N) to sort\nthe obtained gains and select the devices that must transmit,\nwhich is lower than that of GBA [3]. In addition, since pRUs\nare known and ﬁxed, it can be executed in parallel during\nthe cycle, as the pilots are received, thus actually requiring\nneglibile time to be performed.\nV. RESULTS\nWe simulated a network scenario with the parameters setup\nreported in Table I. For each value of η and W, we ran\n10 simulations over random topologies, each lasting for 30\nsubsequent cycles. For each one, we then computed the\nnumber of served devices averaged over the second half of\nthe simulation time (in order to avoid transient effects). The\nobtained value was then averaged again over all the tested\ntopologies. The spacing of the subcarriers is 15 kHz, and each\nOFDM symbol spreads over nc = 12 adjacent subcarriers,\nwhich form a channel of bandwidth 180 kHz. Each OFDM\nsymbol duration is about 71.4 µs, and a RU is a sequence\nof 2 consecutive symbols, thus lasting τ = 0.144 ms. As to\nthe correlation factor γ, we set it by using the Jakes time\nParameter\nValue\nDeployment area radius L\n60 m\nChannel correlation factor γ\n0.95\nTransmit SNR ΓT\n100 dB\nPath loss exponent α\n3\nPacket size ℓ\n100 bit\nSlot duration τ\n0.144 ms\nCycle duration T\n50 slot\nMaximum delay ∆\n25 slot\nChannel bandwidth B\n180 kHz\nNumber of channels C\n5\nMaximum Interference factor YM\n4\nTarget Reliability ρ\n0.99999\nTable I\nPARAMETERS FOR THE SYMMETRIC SCENARIO.\ncorrelation model [29], so as γ = J0(2πfDtc), being fD\nthe Doppler frequency, tc the channel instantiation interval,\nand J0(·) the Bessel function of order 0. Frequency fD is\nobtained as vifc/¯c, where vi is the speed of the device, fc is\nthe carrier frequency and ¯c is the speed of light. By setting\nfc = 800 MHz [30] and tc = ν, a speed vi = 3 km/h\ngives γ = 0.97. Higher and lower values account for more\nstatic or more dynamic scenarios. As to the pilot signaling,\nfor any value of η, the M pRUs were placed randomly and\nindependently for each channel, since placing them all in a\ngiven sub-interval of the cycle would impair the devices with\ndata packet issue time falling in or just before that interval.\nIn this section, we also compare the performance attained\nby GBA with that of a simpler benchmark allocation algo-\nrithm, presented in details in [3], called BCA (Best Channel\nAllocation). BCA is a simple greedy heuristic that runs in\nquasi-linear time with N. After sorting the devices according\nto their data packet issue time, it checks them one at a time.\nFor each device Di, based on the value F(c, i, ρ, z|t), and\nconsidering the pRUs and the devices already allocated on\neach channel, it ﬁnds the channel c which grants the earliest\ntransmission completion time. If the transmission on channel\nc can be completed within slot ti + ∆, hence matching the\ndelay constraint, the corresponding RUs are assigned to Di.\nOtherwise, device Di is excluded from the set of transmitters\nfor this allocation round. BCA has a much lower computa-\ntional time, especially in dense networks, but its approach is\nsuboptimal, since it does not give priority to devices with good\nchannel conditions.\nWe observe the impact of both η and W in Figure 5, where\nthe average fraction of served devices is plotted against the\nfraction η of RUs reserved for pilot transmission, for different\nvalues of W. For η = 0, meaning that no CSI is available at all,\nthe performance is relatively low, due to the high uncertainty\nabout the channel conditions. As η increases, so does the\nnumber M of devices whose CSI is updated at the end of each\ncycle. This in turns implies that the average value of t in (14)\nis reduced, and then also the average value of F(c, i, ρ, t|z)\ndecreases. As a result, more communications can be allocated,\nat the cost of having fewer RUs for data transmission. When η\ngrows beyond 0.5, the advantages of a fresh CSI are overcome\nby the lack of resources, and the number of allocated devices\nquickly falls. Clearly, for η = 1, there are no RUs left for data\ntransmissions, and no device can transmit any more.\nIn the same ﬁgure, we can also assess the effect of W. The\ncase W = 1 is the idealized scenario, where the CSI collected\n\n\n9\n0\n0.2\n0.4\n0.6\n0.8\n1\nFraction \n of feedback RUs\n0\n0.2\n0.4\n0.6\n0.8\n1\nFraction of served devices\nBCA, W = 1\nGBA, W = 1\nBCA, W = 2\nGBA, W = 2\nBCA, W = 3\nGBA, W = 3\nFigure 5. Fraction of served devices as a function of the fraction η of\npilot RUs, for various values of the computational delay W . Here,\nN = 100, γ = 0.95, T = 50, C = 5, ∆= 25.\n1\n1.5\n2\n2.5\n3\n3.5\n4\n4.5\n5\nComputational Delay W\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\n1\nFraction of served devices\n=0.91\n=0.93\n=0.95\n=0.97\n=0.99\nFigure 6. Fraction of served devices as a function of the computational\ndelay W , when η\n= 0.4, for different values of the channel\ncorrelation coefﬁcient γ. Here, N = 100, T = 50, C = 5, ∆= 25.\nSolid lines are for GBA, while dashed lines are for BCA.\nin a cycle is immediately exploited in the allocation of the\nsubsequent cycle. As W becomes higher, the information col-\nlected is used later, with less effectiveness. As a consequence,\nthe system attains a lower performance, with a loss of almost\n10%, when η = 0.5, as W grows from 1 to 2 and from 2\nto 3. As to the comparison between the resource allocation\nalgorithms, GBA displays a clear advantage over BCA, over\nall ranges of η and W. However, the value of W needed to\nexecute GBA might be larger than that needed for BCA due\nto its higher complexity, an issue that is addressed later on in\nthis section.\nThe channel correlation coefﬁcient γ strongly inﬂuences the\neffectiveness of CSI. A higher γ reduces the impact of the CSI\nage, since the channel varies more slowly. We analyze this\naspect in Figure 6, where we ﬁx the fraction η of pRUs to 0.4\nand observe the fraction of served devices as a function of the\ncomputational delay W for different correlation coefﬁcients.\nAs expected, the performance decreases as W becomes higher,\nbut the impact of γ is clear. For low values of γ, even the\nidealized case of W = 1 gives poor performance. In this case,\nthe CSI quickly becomes outdated, and we get close to the\nscenario with no CSI at all. Conversely, for γ > 0.95 in the\n0\n0.2\n0.4\n0.6\n0.8\n1\nFraction \n of feedback RUs\n0\n0.2\n0.4\n0.6\n0.8\n1\nFraction of served devices\nBCA, N=100\nGBA, N=100\nBCA, N=150\nGBA, N=150\nBCA, N=200\nGBA, N=200\nBCA, N=250\nGBA, N=250\nFigure 7. Fraction of served resources as a function of the fraction\nη of pilot RUs, for various numbers of nodes N. Here, γ = 0.95,\nT = 50, C = 10, ∆= 25 slot.\nidealized scenario all the devices can be always served. Even\nmore, for γ = 0.99, the computational delay W has little effect\non the performance, which remains almost optimal also for\nhigh values of W. In this case, the very high correlation makes\nthe CSI age less relevant. This makes the average number of\nRUs needed per device very low, which allows the allocation\nof almost all the users on the fraction of resources reserved\nto data. Looking at the result from a different point of view,\nslow allocation algorithms can be effectively applied when the\nchannel correlation is very high. However, as γ decreases, only\nfast algorithms, capable of keeping W low, must be adopted\nin order to take advantage of the channel correlation.\nNext, we move to another key issue, that is, the algorithm\nscalability. While BCA has a computational complexity which\nis quasi-linear in both N and C, GBA performs better, but\nat the cost of a higher complexity, which was proved in [3]\nto be O((N + C)2N 2C) in the worst case. Henceforth, as\nthe number N of devices grows, the advantages of the better\nperformance might be impaired by the disadvantage of a\nhigher computational delay W. In order to test this aspect,\nwe move to a more crowded scenario with C = 10 channels,\nand double the number of devices up to N = 200. In Figure 7\nwe plot again the fraction of served devices as a function of\nη in this denser scenario. The general trend is the same as\nin Figure 5, with an optimal η again around 0.4 (although it\ntends to slightly decrease when N grows, in order to leave\nroom for the higher amount of data).\nWhen running the simulations that led to the results in\nFigure 7, we also measured and averaged the algorithm\nexecution time for both BCA and GBA. While the former\nwas always completed in less than 1 ms, the execution time\nof GBA as a function of the number N of devices is plotted\nin Figure 8. The algorithm was run over a commercial laptop,\nand was implemented in C++.\nAs expected, the execution time grows with N, and in-\ncreases of almost a factor 4 when N doubles from 100 to\n200 devices. In order to assess the impact of the execution\ntime on the performance, we need to compare it to the cycle\ntime ν = T τ, which in the considered scenario is equal to 7.2\nms. Hence, we also report the values of τ and its multiples\n\n\n10\n100\n150\n200\n250\nNumber of Devices N\n0\n5\n10\n15\n20\n25\n30\nGBA Execution Time [ms]\n2\n3\n4\nFigure 8. GBA running time on a commercial laptop, as a function\nof N. Here, γ = 0.95, T = 50, C = 10, ∆= 25.\n100\n150\n200\n250\nNumber of Devices N\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\n1\nFraction of served devices\nBCA\nFast GBA\nReal GBA\nFigure 9. Fraction of served devices as a function of the network size\nN taking into account the computation time.\nin the ﬁgure, which highlights the number of cycles required\nfor the algorithm to run. One cycle is enough for N up to\naround 130 devices. In this interval, the computational delay\nW is hence equal to 2. Two cycles are needed for N up to\n190 (W = 3) and three for N up to 235 (W = 4).\nBy using these results, we can fairly compare BCA and\nGBA with the execution time also taken into account by\nproperly varying W. For BCA, it can be kept to 2 for all\nthe values of N, while we change it from 2 to 5, according\nto Figure 8, for GBA.\nWe illustrate the obtained result in Figure 9, where we com-\npare BCA with an indealized, fast GBA (keeping W = 2, as\nBCA) and a real GBA (with W dependent on the computation\ntime). The increased computational time affects the fraction of\nserved devices, which lowers by about 13% for N = 250\ndevices. Nevertheless, even in this computational intensive\nscenario, GBA still performs signiﬁcantly better than BCA:\nits polynomial complexity contains the execution time within\nvalues low enough to still outperform the faster but suboptimal\nBCA. For N = 200, GBA is able to serve 14% more devices\nthan BCA, and for N = 250 the improvement is still around\n12%.\nWe recall that the reported results were obtained using\na standard, non sophisticated implementation of GBA. The\ncomputational time gap between BCA and GBA could be\n0\n10\n20\n30\n40\n50\n60\nDistance from AP [m]\n0.75\n0.8\n0.85\n0.9\n0.95\n1\nFraction of served devices\nGBA, W = 1\nd-GBA, W = 1\nGBA, W = 2\nd-GBA, W = 2\nGBA, W = 3\nd-GBA, W = 3\nFigure 10. Fraction of served devices as a function of the distance\nfrom the AP. Here η = 0.4.\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\nFraction \n of pilot RUs\n0.6\n0.65\n0.7\n0.75\n0.8\n0.85\n0.9\n0.95\n1\nFraction of served devices\nGBA, W = 1\nd-GBA, W = 1\nGBA, W = 2\nd-GBA, W = 2\nGBA, W = 3\nd-GBA, W = 3\nFigure 11. Fraction of served devices as a function of the fraction η\nof pRUs, when the dynamic pilot transmission selection is adopted.\nreduced by improving it, e.g., using multi-thread computation.\nThis way, the actual performance of GBA might get even\ncloser to the idealized Fast GBA line in Figure 9.\nFinally, we assess the impact of the dynamic pilot allocation\nscheme outlined in Section IV on GBA. We name as dynamic\nGBA (d-GBA) the overall resulting protocol. We focus on a\nmoderately dense scenario, with N = 150 devices, and C = 7\nchannels, with a correlation factor γ = 0.97. In Figure 10, we\nreport the transmission probability for a device as a function\nof its distance from the AP. As expected, basic GBA with a\nround robin pilot selection serves all the devices in the inner\npart of the network (up to 30 m). However, the fraction of\nserved devices starts to fall beyond this value, with a rate\ndependent on the computational delay W. Only 85% and 77%\nof the edge devices are actually served, for the realistic cases of\nW = 2 and W = 3. Our proposed dynamic pilot transmission\nselection scheme can consistently mitigate this impairment, at\nthe cost of slightly lowering the fraction of served devices at\nmid-distance. Looking at the performance of d-GBA, in fact,\nthe percentage of served edge devices can be increased up to\n96% and 85% when W = 2 and W = 3, respectively, thus\ngranting a considerable beneﬁt in terms of fairness.\nNotably, this fairness improvement does not come at the\nexpense of the spectrum efﬁciency, as highlighted in Fig-\n\n\n11\nure 11. Here, we plot the overall fraction of served devices\nas a function of the fraction η of pRUs, with all the other\nparameters unchanged. The dynamic selection of the devices\nsending pilots at every cycle can better balance the spectrum\nrequirements of all the users, thus allowing d-GBA to allocate\nmore transmissions. Almost the entire set of devices can be\nserved, for η = 0.4, in the idealized case W = 1, but a\nperformance boost is achieved for higher values of W as well.\nIndeed, the number of served devices is increased along the\nentire range of η values, of as much as nearly 5% for the best\nperforming η values.\nVI. CONCLUSIONS\nIn this paper, we investigated the issue of efﬁciently col-\nlecting and exploiting CSI in order to improve spectrum\nresource allocation in an industrial IoT scenario leveraging\nURLLC with hundreds of devices and periodic trafﬁc pattern.\nWe considered time-correlated channels, where CSI relevance\nis kept for subsequent transmission cycles. We analyzed the\ntradeoff between a more frequent pilot signaling, able to re-\nduce the CSI average age, and a lower overhead option, where\nmore room is left for data transmission. We investigated the\ntradeoff between computational complexity and performance,\nshowing that a sophisticated graph-based allocation algorithm,\ndespite its longer computational time, is able to provide a\nmuch better resource allocation solution than that offered by\na greedy heuristic. In addition, we designed and added a\ndynamic pilot transmissions allocation, able to adaptively tune\nthe CSI age based on topology and channel measurements,\nthus further boosting the performance in terms of both fairness\nand spectrum efﬁciency.\nAPPENDIX A\nPROOF OF LEMMA 1\nTo prove the Lemma, it is enough to derive the pdf of the\nrandom variable |X|2, with X deﬁned as\nX = a0y +\nn\nX\ni=1\naiZi,\n(18)\nwhere y ∈C, ai ∈R+ and the Zi’s are independent complex\nGaussian random variable with zero mean and unit variance.\nFor ease of notation, we call the real and imaginary parts of\nthe involved complex quantities as yR = Re[y], yI = Im[y],\nZiR = Re[Zi] and ZiI = Im[Zi]. Each complex Gaussian\nrandom variable Zi can be decomposed as (ZiR + jZiI)/\n√\n2,\nwhere j is the imaginary unit, while ZiR, ZiI ∼N(0, 1). We\ncan hence rewrite (18) as\nX\n=\na0yR + ja0yI +\nn\nX\ni=1\nai\n√\n2ZiR + j\nn\nX\ni=1\nai\n√\n2ZiR\n=\nn\nX\ni=1\n\u0012a0yR\nn\n+ ai\n√\n2ZiR\n\u0013\n+j\nn\nX\ni=1\n\u0012a0yI\nn\n+ ai\n√\n2ZiI\n\u0013\n.\n(19)\nTherefore, the squared absolute value is\n|X|2 =\n\f\f\f\f\f\nn\nX\ni=1\n\u0012a0yR\nn\n+ ai\n√\n2ZiR\n\u0013\f\f\f\f\f\n2\n+\n\f\f\f\f\f\nn\nX\ni=1\n\u0012a0yI\nn\n+ ai\n√\n2ZiI\n\u0013\f\f\f\f\f\n2\n=\n \n1\n2\nn\nX\ni=1\na2\ni\n! \n\n\f\f\f\f\f\nn\nX\ni=1\n \na0yR\nn\npP\ni a2\ni /2\n+\naiZiR\npP\ni a2\ni\n!\f\f\f\f\f\n2\n+\n+\n\f\f\f\f\f\nn\nX\ni=1\n \na0yI\nn\npP\ni a2\ni /2\n+\naiZiI\npP\ni a2\ni\n!\f\f\f\f\f\n2\n\n=\n \n1\n2\nn\nX\ni=1\na2\ni\n!\n\u0000|XR|2 + |X2\nI |\n\u0001\n,\n(20)\nwhere XR and XI\nare sums of n independent Gaus-\nsian random variables, and are therefore themselves Gaus-\nsian, with XR\n∼\nN(a0yR/\npP\ni a2\ni /2, 1) and XI\n∼\nN(a0yI/\npP\ni a2\ni /2, 1).\nLet us deﬁne the random variable Y\n= 2|X|2/ P\ni a2\ni .\nAccording to (20), Y is given by the sum of the squared\nabsolute value of two independent Gaussian random variables\nof unitary variance, and is therefore distributed as a non-central\nχ-square random variable with two degrees of freedom and\nparameter\nλ = 2a2\n0y2\nR\nP\ni a2\ni\n+ 2a2\n0y2\nI\nP\ni a2\ni\n=\n2a2\n0\nP\ni a2\ni\n|y|2.\n(21)\nThe Cumulative Distribution Function of |X|2 can hence be\nfound as\nF|X|2(x) = P\n\u0002\n|X|2 < x\n\u0003\n= P\n\u0014\nY <\n2x\nP\ni a2\ni\n\u0015\n= FY\n\u0012\n2x\nP\ni a2\ni\n\u0013\n(22)\nwhile the pdf is obtained by derivation as\nf|X|2(x)\n=\n2\nP\ni a2\ni\nfY\n\u0012\n2x\nP\ni a2\ni\n\u0013\n=\n1\nP\ni a2\ni\ne−(x+a0|y|2)/ P\ni a2\ni I0\n\u0012 2a0\nP\ni a2\ni\np\n|y|2x\n\u0013\n,\n(23)\nwhere we used the expression of the pdf of the non-central\nχ-square distribution.\nIn our speciﬁc problem, by recursively applying the rela-\ntionship in (7), we ﬁnd\nhi,c,m+t = γthi,c,m +\np\n1 −γ2\nt\nX\ni=1\nγt−iξi,\n(24)\nan expression equivalent to (18), where y = hi,c,m, a0 =\nγt and ai =\np\n1 −γ2γt−i. The distribution of |hi,c,m+t|2,\nconditioned on the value of |hi,c,m|2 = z, is hence given by\n(23) by replacing |y|2 with z, a0 with a = γt and P\ni a2\ni with\nb = (1 −γ2) Pt−1\ni=0 γ2i, which completes the proof.\nREFERENCES\n[1] Y. Zhou, L. Tian, L. Liu, and Y. Qi, “Fog computing enabled future\nmobile communication networks: A convergence of communication and\ncomputing,” IEEE Commun. Mag., vol. 57, no. 5, pp. 20–27, May 2019.\n\n\n12\n[2] Y. Zhou, L. Liu, L. Wang, N. Hui, X. Cui, J. Wu, Y. Peng, Y. Qi, and\nC. Xing, “Service-aware 6G: An intelligent and open network based\non the convergence of communication, computing and caching,” Digital\nCommunications and Networks, vol. 6, no. 3, pp. 253–260, Aug. 2020.\n[3] F. Librino and P. Santi, “Resource allocation and sharing in URLLC for\nIoT applications using shareability graphs,” IEEE Internet of Things J.,\nvol. 7, no. 10, pp. 10 511 – 10 526, Oct. 2020.\n[4] S. E. Elayoubi, P. Brown, M. Deghel, and A. Galindo-Serrano, “Radio\nresource allocation and retransmission schemes for URLLC over 5G\nnetworks,” IEEE J. Select. Areas Commun., vol. 37, no. 4, pp. 896 –\n904, Apr. 2019.\n[5] 3GPP.\n(2017,\nApr)\nChairman’s\nNotes,\ndocument\nR1-1704170,\n3GPP: 3GPP TSG RAN WG1 Meeting 88bis. [Online]. Available:\nhttp://www.3gpp.org/ftp/TSG RAN/WG1 RL1/TSGR1 88b/Report/\n[6] M. Bennis, M. Debbah, and H. V. Poor, “Ultrareliable and low-latency\nwireless communication: Tail, risk and scale,” Proc. IEEE, vol. 106,\nno. 10, pp. 1834 – 1853, Oct. 2018.\n[7] P. Popovski, et al., “Wireless access for ultra-reliable low-latency\ncommunication: Principles and building blocks,” IEEE Network, vol. 32,\nno. 2, pp. 16 – 23, Apr. 2018.\n[8] A. Azari, M. Ozger, and C. Cavdar, “Risk-aware resource allocation\nfor URLLC: Challenges and strategies with machine learning,” IEEE\nCommun. Mag., vol. 57, no. 3, pp. 42 – 48, Mar. 2019.\n[9] N. B. Khalifa, V. Angilella, M. Assaad, and M. Debbah, “Low-\ncomplexity channel allocation scheme for URLLC trafﬁc,” IEEE Trans.\nCommun., Sep. 2020, Early Access.\n[10] J. Cheng, C. Shen, and S. Xia, “Robust urllc packet scheduling of\nofdm systems,” in 2020 IEEE Wireless Communications and Networking\nConference (WCNC), 2020, pp. 1–6.\n[11] B. Chang, L. Zhang, L. Li, G. Zhao, and Z. Chen, “Optimizing resource\nallocation in URLLC for real-time wireless control systems,” IEEE\nTrans. Veh. Technol., vol. 68, no. 9, pp. 8916 – 8927, Sep. 2019.\n[12] W. R. Ghanem, V. Jamali, Y. Sun, and R. Schober, “Resource allocation\nfor multi-user downlink URLLC-OFDMA systems,” in Proc. IEEE ICC,\nJun. 2019.\n[13] C. Sun, C. She, C. Yang, T. Q. S. Quek, Y. Li, and B. Vucetic,\n“Optimizing resource allocation in the short blocklength regime for\nultra-reliable and low-latency communications,” IEEE Trans. Wireless\nCommun., vol. 18, no. 1, pp. 402 – 415, Jan. 2019.\n[14] C. She and C. Y. amd T. Q. S. Quek, “Cross-layer optimization for ultra-\nreliable and low-latency radio access networks,” IEEE Trans. Wireless\nCommun., vol. 17, no. 1, pp. 127 – 141, Jan. 2018.\n[15] Z. Chu, W. Yu, P. Xiao, F. Zhou, N. Al-Dhahir, A. ul Quddus, and\nR. Tafazolli, “Opportunistic spectrum sharing for D2D-based URLLC,”\nIEEE Trans. Veh. Technol., vol. 68, no. 9, pp. 8995 – 9006, Sep. 2019.\n[16] J. Li and X. Zhang, “Deep reinforcement learning-based joint scheduling\nof eMBB and URLLC in 5G networks,” IEEE Wireless Commun. Lett.,\nvol. 9, no. 9, pp. 1543–1546, Sep. 2020.\n[17] Q. Huang, X. Xie, H. Tang, T. Hong, M. Kadoch, K. K. Nguyen, and\nM. Cheriet, “Machine-learning-based cognitive spectrum assignment for\n5G URLLC applications,” IEEE Network, vol. 33, no. 4, pp. 30–35, Jul.\n2019.\n[18] H. Khan, M. M. Butt, S. Samarakoon, P. Sehier, and M. Bennis, “Deep\nlearning assisted CSI estimation for joint URLLC and eMBB resource\nallocation,” in 2020 IEEE International Conference on Communications\nWorkshops (ICC Workshops), 2020, pp. 1–6.\n[19] Y. Xie, P. Ren, and D. Xu, “Transmission performance optimization for\nURLLC with limited training and feedback overheads,” IEEE Access,\nvol. 8, pp. 140 467–140 477, Jul. 2020.\n[20] J. Zeng, T. Lv, R. P. Liu, X. Su, N. C. Beaulieu, and Y. J. Guo,\n“Linear minimum error probability detection for massive MU-MIMO\nwith imperfect CSI in URLLC,” IEEE Trans. Veh. Technol., vol. 68,\nno. 11, pp. 11 384–11 388, Nov 2019.\n[21] J. Zeng, T. Lv, R. P. Liu, X. Su, Y. J. Guo, and N. C. Beaulieu, “Enabling\nultrareliable and low-latency communications under shadow fading by\nmassive MU-MIMO,” IEEE Internet of Things J., vol. 7, no. 1, pp.\n234–246, Jan. 2020.\n[22] E. J. dos Santos, R. D. Souza, J. L. Rebelatto, and H. Alves, “Network\nslicing for URLLC and eMBB with max-matching diversity channel\nallocation,” IEEE Commun. Lett., vol. 24, no. 3, pp. 658–661, Mar.\n2020.\n[23] B. Bai, W. Chen, Z. Cao, and K. B. Letaief, “Max-matching diversity\nin OFDMA systems,” IEEE Trans. Commun., vol. 58, no. 4, pp. 1161–\n1171, Mar. 2010.\n[24] D. B. West, Introduction to Graph Theory.\nPrentice Hall Upper Saddle\nRiver, 2001.\n[25] M. Medard, “The effect upon channel capacity in wireless communica-\ntions of perfect and imperfect knowledge of the channel,” IEEE Trans.\nInform. Theory, vol. 46, no. 3, pp. 933 – 946, May 2000.\n[26] W. Yang, G. Durisi, T. Koch, and Y. Polyanskiy, “Quasi-static multiple-\nantenna fading channels at ﬁnite blocklength,” IEEE Trans. Inform.\nTheory, vol. 60, no. 7, pp. 4232 – 4265, Jul. 2014.\n[27] B. Makki, T. Svensson, and M. Zorzi, “Finite block-length analysis\nof the incremental redundancy HARQ,” IEEE Wireless Commun. Lett.,\nvol. 3, no. 5, pp. 529 – 532, Oct. 2014.\n[28] G. Fodor, P. D. Marco, and M. Telek, “On minimizing the MSE in\nthe presence of channel state information errors,” IEEE Commun. Lett.,\nvol. 19, no. 9, pp. 1604–1607, Sep. 2015.\n[29] H. Kim and J. Choi, “A new design of polar-cap differential codebook\nfor temporally and spatially correlated MISO channels,” IEEE Trans.\nWireless Commun., vol. 11, no. 2, pp. 703 – 711, Feb. 2012.\n[30] W. Wang, S. L. Capitaneanu, D. Marinca, and E.-S. Lohan, “Compara-\ntive analysis of channel models for industrial IoT wireless communica-\ntion,” IEEE Access, vol. 7, pp. 91 627 – 91 640, Jul. 2019.\n\n\n",
  "metadata": {
    "source_file": "dataset/pdfs/arxiv_2502.21121v1.pdf",
    "total_pages": 12,
    "title": "The Complexity-Performance Tradeoff in Resource Allocation for URLLC Exploiting Dynamic CSI",
    "authors": [
      "Federico Librino",
      "Paolo Santi"
    ],
    "abstract": "The challenging applications envisioned for the future Internet of Things\nnetworks are making it urgent to develop fast and scalable resource allocation\nalgorithms able to meet the stringent reliability and latency constraints\ntypical of the Ultra Reliable, Low Latency Communications (URLLC).\n  However, there is an inherent tradeoff between complexity and performance to\nbe addressed: sophisticated resource allocation methods providing optimized\nspectrum utilization are challenged by the scale of applications and the\nconcomitant stringent latency constraints. Whether non-trivial resource\nallocation approaches can be successfully applied in large-scale network\ninstances is still an open question that this paper aims to address. More\nspecifically, we consider a scenario in which Channel State Information (CSI)\nis used to improve spectrum allocation in a radio environment that experiences\nchannel time correlation.\n  Channel correlation allows the usage of CSI for longer time before an update,\nthus lowering the overhead burden. Following this intuition, we propose a\ndynamic pilot transmission allocation scheme in order to adaptively tune the\nCSI age.\n  We systematically analyze the improvement of this approach applied to a\nsophisticated, recently introduced graph-based resource allocation method that\nwe extend here to account for CSI.\n  The results show that, even in very dense networks and accounting for the\nhigher computational time of the graph-based approach, this algorithm is able\nto improve spectrum efficiency by over 12% as compared to a greedy heuristic,\nand that dynamic pilot transmissions allocation can further boost its\nperformance in terms of fairness, while concomitantly further increase spectrum\nefficiency of 3-5%. \\",
    "published_date": "2025-02-28",
    "source": "arxiv"
  }
}